2024-12-01 19:14:41,568 INFO  [background-preinit] org.hibernate.validator.internal.util.Version: HV000001: Hibernate Validator 8.0.0.Final
2024-12-01 19:14:41,598 INFO  [main] org.springframework.boot.StartupInfoLogger: Starting EcommerceApplication using Java 23 with PID 265306 (/home/mohit/Pictures/ecommerce-projects/ecommerce/target/classes started by mohit in /home/mohit/Pictures/ecommerce-projects/ecommerce)
2024-12-01 19:14:41,598 DEBUG [main] org.springframework.boot.StartupInfoLogger: Running with Spring Boot v3.1.0, Spring v6.0.9
2024-12-01 19:14:41,599 INFO  [main] org.springframework.boot.SpringApplication: The following 1 profile is active: "dev"
2024-12-01 19:14:42,510 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-12-01 19:14:42,512 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-12-01 19:14:42,536 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.ProductRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-12-01 19:14:42,538 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.ReviewRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-12-01 19:14:42,539 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.UserRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-12-01 19:14:42,540 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 25 ms. Found 0 Elasticsearch repository interfaces.
2024-12-01 19:14:42,543 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-12-01 19:14:42,544 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-12-01 19:14:42,547 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.ProductRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-12-01 19:14:42,548 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.ReviewRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-12-01 19:14:42,548 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.UserRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-12-01 19:14:42,548 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 3 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-12-01 19:14:42,551 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-12-01 19:14:42,552 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-12-01 19:14:42,637 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 84 ms. Found 3 MongoDB repository interfaces.
2024-12-01 19:14:42,649 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-12-01 19:14:42,650 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-12-01 19:14:42,661 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-12-01 19:14:42,662 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.ReviewRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-12-01 19:14:42,662 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-12-01 19:14:42,662 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-12-01 19:14:43,371 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer: Tomcat initialized with port(s): 8080 (http)
2024-12-01 19:14:43,378 INFO  [main] org.apache.juli.logging.DirectJDKLog: Initializing ProtocolHandler ["http-nio-8080"]
2024-12-01 19:14:43,379 INFO  [main] org.apache.juli.logging.DirectJDKLog: Starting service [Tomcat]
2024-12-01 19:14:43,379 INFO  [main] org.apache.juli.logging.DirectJDKLog: Starting Servlet engine: [Apache Tomcat/10.1.8]
2024-12-01 19:14:43,465 INFO  [main] org.apache.juli.logging.DirectJDKLog: Initializing Spring embedded WebApplicationContext
2024-12-01 19:14:43,466 INFO  [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1783 ms
2024-12-01 19:14:43,680 ERROR [main] org.springframework.boot.web.embedded.tomcat.TomcatStarter: Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtAuthenticationFilter' defined in file [/home/mohit/Pictures/ecommerce-projects/ecommerce/target/classes/net/engineeringdigest/ecommerce/security/JwtAuthenticationFilter.class]: Unsatisfied dependency expressed through constructor parameter 1: No qualifying bean of type 'org.springframework.security.core.userdetails.UserDetailsService' available: expected single matching bean but found 2: customUserDetailsService,userService
2024-12-01 19:14:43,695 INFO  [main] org.apache.juli.logging.DirectJDKLog: Stopping service [Tomcat]
2024-12-01 19:14:43,699 WARN  [main] org.springframework.context.support.AbstractApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server
2024-12-01 19:14:43,711 INFO  [main] org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger: 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-12-01 19:14:43,722 ERROR [main] org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter: 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 1 of constructor in net.engineeringdigest.ecommerce.security.JwtAuthenticationFilter required a single bean, but 2 were found:
	- customUserDetailsService: defined in file [/home/mohit/Pictures/ecommerce-projects/ecommerce/target/classes/net/engineeringdigest/ecommerce/security/CustomUserDetailsService.class]
	- userService: defined in file [/home/mohit/Pictures/ecommerce-projects/ecommerce/target/classes/net/engineeringdigest/ecommerce/service/UserService.class]


Action:

Consider marking one of the beans as @Primary, updating the consumer to accept multiple beans, or using @Qualifier to identify the bean that should be consumed

2024-12-01 19:17:12,060 INFO  [background-preinit] org.hibernate.validator.internal.util.Version: HV000001: Hibernate Validator 8.0.0.Final
2024-12-01 19:17:12,103 INFO  [main] org.springframework.boot.StartupInfoLogger: Starting EcommerceApplication using Java 23 with PID 266139 (/home/mohit/Pictures/ecommerce-projects/ecommerce/target/classes started by mohit in /home/mohit/Pictures/ecommerce-projects/ecommerce)
2024-12-01 19:17:12,103 DEBUG [main] org.springframework.boot.StartupInfoLogger: Running with Spring Boot v3.1.0, Spring v6.0.9
2024-12-01 19:17:12,104 INFO  [main] org.springframework.boot.SpringApplication: The following 1 profile is active: "dev"
2024-12-01 19:17:13,040 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-12-01 19:17:13,042 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-12-01 19:17:13,068 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.ProductRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-12-01 19:17:13,069 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.ReviewRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-12-01 19:17:13,070 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.UserRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-12-01 19:17:13,070 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 26 ms. Found 0 Elasticsearch repository interfaces.
2024-12-01 19:17:13,074 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-12-01 19:17:13,074 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-12-01 19:17:13,078 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.ProductRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-12-01 19:17:13,078 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.ReviewRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-12-01 19:17:13,079 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.UserRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-12-01 19:17:13,079 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 4 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-12-01 19:17:13,084 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-12-01 19:17:13,085 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-12-01 19:17:13,154 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 69 ms. Found 3 MongoDB repository interfaces.
2024-12-01 19:17:13,183 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-12-01 19:17:13,191 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-12-01 19:17:13,210 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-12-01 19:17:13,211 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.ReviewRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-12-01 19:17:13,211 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-12-01 19:17:13,211 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-12-01 19:17:13,959 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer: Tomcat initialized with port(s): 8080 (http)
2024-12-01 19:17:13,968 INFO  [main] org.apache.juli.logging.DirectJDKLog: Initializing ProtocolHandler ["http-nio-8080"]
2024-12-01 19:17:13,968 INFO  [main] org.apache.juli.logging.DirectJDKLog: Starting service [Tomcat]
2024-12-01 19:17:13,968 INFO  [main] org.apache.juli.logging.DirectJDKLog: Starting Servlet engine: [Apache Tomcat/10.1.8]
2024-12-01 19:17:14,039 INFO  [main] org.apache.juli.logging.DirectJDKLog: Initializing Spring embedded WebApplicationContext
2024-12-01 19:17:14,044 INFO  [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1875 ms
2024-12-01 19:17:14,337 DEBUG [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING}]
2024-12-01 19:17:14,355 INFO  [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.9.1"}, "os": {"type": "Linux", "name": "Linux", "architecture": "amd64", "version": "6.8.0-49-generic"}, "platform": "Java/Oracle Corporation/23+37-2369"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@19ac93d2], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@116fc29e, com.mongodb.Jep395RecordCodecProvider@2e426dd2]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@1a0ffb9b], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-12-01 19:17:14,371 DEBUG [cluster-rtt-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Opened connection [connectionId{localValue:2, serverValue:94}] to localhost:27017
2024-12-01 19:17:14,371 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Opened connection [connectionId{localValue:1, serverValue:93}] to localhost:27017
2024-12-01 19:17:14,372 INFO  [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=13332274}
2024-12-01 19:17:14,373 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Marking the connection pool for ServerId{clusterId=ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}, address=localhost:27017} as 'ready'
2024-12-01 19:17:14,373 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 19:17:14,374 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=13.3 ms, state=CONNECTED}]
2024-12-01 19:17:14,374 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:17:14,686 DEBUG [main] org.springframework.web.filter.GenericFilterBean: Filter 'jwtAuthenticationFilter' configured for use
2024-12-01 19:17:14,687 DEBUG [main] org.springframework.web.filter.GenericFilterBean: Filter 'webMvcObservationFilter' configured for use
2024-12-01 19:17:14,688 DEBUG [main] org.springframework.web.filter.GenericFilterBean: Filter 'requestTracingFilter' configured for use
2024-12-01 19:17:14,688 DEBUG [main] org.springframework.web.filter.GenericFilterBean: Filter 'corsFilter' configured for use
2024-12-01 19:17:15,137 DEBUG [main] org.springframework.core.log.LogAccessor: No retry topic configuration found for topics [test-topic]
2024-12-01 19:17:15,140 DEBUG [main] org.springframework.core.log.LogAccessor: 1 @KafkaListener methods processed on bean 'kafkaConsumerService': {public void net.engineeringdigest.ecommerce.service.KafkaConsumerService.listen(java.lang.String)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", containerFactory="", beanRef="__listener", contentTypeConverter="", topics={"test-topic"}, groupId="ecommerce-group", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", id="", properties={}, info="")]}
2024-12-01 19:17:15,555 DEBUG [main] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping: 30 mappings in 'requestMappingHandlerMapping'
2024-12-01 19:17:15,604 DEBUG [main] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping: Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2024-12-01 19:17:15,789 INFO  [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver: Exposing 3 endpoint(s) beneath base path '/actuator'
2024-12-01 19:17:15,859 INFO  [main] org.springframework.security.web.DefaultSecurityFilterChain: Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@73839f22, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1512efe9, org.springframework.security.web.context.SecurityContextHolderFilter@52afcdd8, org.springframework.security.web.header.HeaderWriterFilter@16269ff4, org.springframework.web.filter.CorsFilter@7cc7e441, org.springframework.security.web.authentication.logout.LogoutFilter@630bd5e7, net.engineeringdigest.ecommerce.security.JwtAuthenticationFilter@764db16c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@35975b05, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@474deb4c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@bb1b872, org.springframework.security.web.session.SessionManagementFilter@3b8a063d, org.springframework.security.web.access.ExceptionTranslationFilter@3eb8057c, org.springframework.security.web.access.intercept.AuthorizationFilter@63d14dbf]
2024-12-01 19:17:15,940 DEBUG [main] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-12-01 19:17:15,979 DEBUG [main] org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver: ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2024-12-01 19:17:16,470 INFO  [main] org.apache.kafka.common.config.AbstractConfig: AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-12-01 19:17:16,574 INFO  [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka version: 3.4.1
2024-12-01 19:17:16,574 INFO  [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka commitId: 8a516edc2755df89
2024-12-01 19:17:16,575 INFO  [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka startTimeMs: 1733060836573
2024-12-01 19:17:16,794 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.utils.AppInfoParser: App info kafka.admin.client for adminclient-1 unregistered
2024-12-01 19:17:16,797 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics: Metrics scheduler closed
2024-12-01 19:17:16,797 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-12-01 19:17:16,798 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics: Metrics reporters closed
2024-12-01 19:17:16,803 INFO  [main] org.apache.juli.logging.DirectJDKLog: Starting ProtocolHandler ["http-nio-8080"]
2024-12-01 19:17:16,812 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer: Tomcat started on port(s): 8080 (http) with context path ''
2024-12-01 19:17:16,837 INFO  [main] org.apache.kafka.common.config.AbstractConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-ecommerce-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = ecommerce-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-12-01 19:17:16,868 INFO  [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka version: 3.4.1
2024-12-01 19:17:16,868 INFO  [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka commitId: 8a516edc2755df89
2024-12-01 19:17:16,868 INFO  [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka startTimeMs: 1733060836868
2024-12-01 19:17:16,870 INFO  [main] org.apache.kafka.clients.consumer.KafkaConsumer: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Subscribed to topic(s): test-topic
2024-12-01 19:17:16,875 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:17:16,884 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Resetting the last seen epoch of partition test-topic-0 to 0 since the associated topicId changed from null to R6Tissc8Tx-8faE-YmmVlA
2024-12-01 19:17:16,884 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Resetting the last seen epoch of partition test-topic-1 to 0 since the associated topicId changed from null to R6Tissc8Tx-8faE-YmmVlA
2024-12-01 19:17:16,884 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Resetting the last seen epoch of partition test-topic-2 to 0 since the associated topicId changed from null to R6Tissc8Tx-8faE-YmmVlA
2024-12-01 19:17:16,884 INFO  [main] org.springframework.boot.StartupInfoLogger: Started EcommerceApplication in 5.24 seconds (process running for 5.539)
2024-12-01 19:17:16,885 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Cluster ID: -NsTbwmJS6S4DPEa3UlZLw
2024-12-01 19:17:16,886 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$FindCoordinatorResponseHandler: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Discovered group coordinator localhost:9092 (id: 2147482646 rack: null)
2024-12-01 19:17:16,887 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] (Re-)joining group
2024-12-01 19:17:16,896 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Request joining group due to: need to re-join with the given member-id: consumer-ecommerce-group-1-7211af64-d740-464d-8586-009cda305a66
2024-12-01 19:17:16,896 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-12-01 19:17:16,896 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] (Re-)joining group
2024-12-01 19:17:16,898 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$JoinGroupResponseHandler: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Successfully joined group with generation Generation{generationId=21, memberId='consumer-ecommerce-group-1-7211af64-d740-464d-8586-009cda305a66', protocol='range'}
2024-12-01 19:17:16,901 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Finished assignment for group at generation 21: {consumer-ecommerce-group-1-7211af64-d740-464d-8586-009cda305a66=Assignment(partitions=[test-topic-0, test-topic-1, test-topic-2])}
2024-12-01 19:17:16,905 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$SyncGroupResponseHandler: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Successfully synced group in generation Generation{generationId=21, memberId='consumer-ecommerce-group-1-7211af64-d740-464d-8586-009cda305a66', protocol='range'}
2024-12-01 19:17:16,906 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Notifying assignor about the new Assignment(partitions=[test-topic-0, test-topic-1, test-topic-2])
2024-12-01 19:17:16,907 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Adding newly assigned partitions: test-topic-0, test-topic-1, test-topic-2
2024-12-01 19:17:16,911 DEBUG [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Opened connection [connectionId{localValue:3, serverValue:95}] to localhost:27017
2024-12-01 19:17:16,912 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator$OffsetFetchResponseHandler: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Found no committed offset for partition test-topic-2
2024-12-01 19:17:16,912 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator$OffsetFetchResponseHandler: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Found no committed offset for partition test-topic-1
2024-12-01 19:17:16,913 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Setting offset for partition test-topic-0 to the committed offset FetchPosition{offset=1, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1001 rack: null)], epoch=0}}
2024-12-01 19:17:16,922 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Resetting offset for partition test-topic-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1001 rack: null)], epoch=0}}.
2024-12-01 19:17:16,922 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Resetting offset for partition test-topic-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1001 rack: null)], epoch=0}}.
2024-12-01 19:17:16,923 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: ecommerce-group: partitions assigned: [test-topic-0, test-topic-1, test-topic-2]
2024-12-01 19:17:16,923 DEBUG [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "ping" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 95 to localhost:27017. The request ID is 5. Command: {"ping": 1, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "MAPxxP2fQJ6FcWGmqnjKNA==", "subType": "04"}}}}
2024-12-01 19:17:16,928 DEBUG [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "ping" succeeded in 7.18 ms using a connection with driver-generated ID 3 and server-generated ID 95 to localhost:27017. The request ID is 5. Command reply: {"ok": 1.0}
2024-12-01 19:17:16,930 DEBUG [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "serverStatus" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 95 to localhost:27017. The request ID is 6. Command: {"serverStatus": 1, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "MAPxxP2fQJ6FcWGmqnjKNA==", "subType": "04"}}}}
2024-12-01 19:17:16,944 DEBUG [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "serverStatus" succeeded in 2.63 ms using a connection with driver-generated ID 3 and server-generated ID 95 to localhost:27017. The request ID is 6. Command reply: {"host": "mohitkalaptop", "version": "8.0.3", "process": "mongod", "service": ["shard"], "pid": 179678, "uptime": 13853.0, "uptimeMillis": 13852821, "uptimeEstimate": 13852, "localTime": {"$date": "2024-12-01T13:47:16.93Z"}, "asserts": {"regular": 0, "warning": 0, "msg": 0, "user": 103, "tripwire": 0, "rollovers": 0}, "batchedDeletes": {"batches": 3, "docs": 5, "stagedSizeBytes": 1215, "timeInBatchMillis": 0, "refetchesDueToYield": 0}, "catalogStats": {"collections": 2, "capped": 0, "clustered": 0, "timeseries": 0, "views": 0, "internalCollections": 3, "internalViews": 0, "csfle": 0, "queryableEncryption": 0}, "changeStreamPreImages": {"purgingJob": {"totalPass": 0, "docsDeleted": 0, "bytesDeleted": 0, "scannedCollections": 0, "scannedInternalCollections": 0, "maxStartWallTimeMillis": 0, "timeElapsedMillis": 0}}, "collectionCatalog": {"numScansDueToMissingMapping": 0}, "connections": {"current": 3, "available": 51197, "totalCreated": 95, "rejected": 0, "active": 2, "threaded": 3, "exha ...
2024-12-01 19:17:16,966 DEBUG [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "listCollections" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 95 to localhost:27017. The request ID is 7. Command: {"listCollections": 1, "cursor": {}, "nameOnly": true, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "MAPxxP2fQJ6FcWGmqnjKNA==", "subType": "04"}}}}
2024-12-01 19:17:16,968 DEBUG [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "listCollections" succeeded in 2.54 ms using a connection with driver-generated ID 3 and server-generated ID 95 to localhost:27017. The request ID is 7. Command reply: {"cursor": {"id": 0, "ns": "ecommerce.$cmd.listCollections", "firstBatch": [{"name": "users", "type": "collection"}, {"name": "products", "type": "collection"}]}, "ok": 1.0}
2024-12-01 19:17:16,971 DEBUG [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Received batch of 2 documents with cursorId 0 from server localhost:27017
2024-12-01 19:17:21,877 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:17:21,877 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:17:24,388 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=10.8 ms, state=CONNECTED}]
2024-12-01 19:17:24,388 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:17:26,879 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:17:26,879 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:17:31,881 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:17:31,881 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:17:34,398 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=8.8 ms, state=CONNECTED}]
2024-12-01 19:17:34,398 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:17:36,881 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:17:36,882 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:17:41,883 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:17:41,883 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:17:44,408 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=7.3 ms, state=CONNECTED}]
2024-12-01 19:17:44,408 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:17:46,884 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:17:46,885 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:17:51,886 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:17:51,887 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:17:54,417 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=6.1 ms, state=CONNECTED}]
2024-12-01 19:17:54,417 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:17:56,887 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:17:56,888 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:18:01,586 INFO  [http-nio-8080-exec-1] org.apache.juli.logging.DirectJDKLog: Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-12-01 19:18:01,586 INFO  [http-nio-8080-exec-1] org.springframework.web.servlet.FrameworkServlet: Initializing Servlet 'dispatcherServlet'
2024-12-01 19:18:01,586 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.DispatcherServlet: Detected StandardServletMultipartResolver
2024-12-01 19:18:01,587 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.DispatcherServlet: Detected AcceptHeaderLocaleResolver
2024-12-01 19:18:01,587 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.DispatcherServlet: Detected FixedThemeResolver
2024-12-01 19:18:01,588 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.DispatcherServlet: Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@2d2e6758
2024-12-01 19:18:01,588 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.DispatcherServlet: Detected org.springframework.web.servlet.support.SessionFlashMapManager@6711a03
2024-12-01 19:18:01,589 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.FrameworkServlet: enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-12-01 19:18:01,589 INFO  [http-nio-8080-exec-1] org.springframework.web.servlet.FrameworkServlet: Completed initialization in 3 ms
2024-12-01 19:18:01,591 INFO  [http-nio-8080-exec-1] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Incoming request GET /users/profile from 0:0:0:0:0:0:0:1
2024-12-01 19:18:01,605 DEBUG [http-nio-8080-exec-1] org.springframework.security.web.FilterChainProxy: Securing GET /users/profile
2024-12-01 19:18:01,674 INFO  [http-nio-8080-exec-1] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Request completed in 83ms with status 500
2024-12-01 19:18:01,674 ERROR [http-nio-8080-exec-1] org.apache.juli.logging.DirectJDKLog: Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.security.SignatureException: JWT signature does not match locally computed signature. JWT validity cannot be asserted and should not be trusted.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:399)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at net.engineeringdigest.ecommerce.security.JwtTokenUtil.extractAllClaims(JwtTokenUtil.java:68)
	at net.engineeringdigest.ecommerce.security.JwtTokenUtil.extractClaim(JwtTokenUtil.java:60)
	at net.engineeringdigest.ecommerce.security.JwtTokenUtil.extractUsername(JwtTokenUtil.java:52)
	at net.engineeringdigest.ecommerce.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:321)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:222)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at net.engineeringdigest.ecommerce.filter.RequestTracingFilter.doFilterInternal(RequestTracingFilter.java:39)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2024-12-01 19:18:01,678 DEBUG [http-nio-8080-exec-1] org.springframework.security.web.FilterChainProxy: Securing GET /error
2024-12-01 19:18:01,682 DEBUG [http-nio-8080-exec-1] org.springframework.security.web.authentication.AnonymousAuthenticationFilter: Set SecurityContextHolder to anonymous SecurityContext
2024-12-01 19:18:01,690 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2024-12-01 19:18:01,691 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2024-12-01 19:18:01,692 DEBUG [http-nio-8080-exec-1] org.springframework.security.web.authentication.Http403ForbiddenEntryPoint: Pre-authenticated entry point called. Rejecting access
2024-12-01 19:18:01,889 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:18:01,889 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:18:04,426 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=5.0 ms, state=CONNECTED}]
2024-12-01 19:18:04,426 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:18:06,889 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:18:06,890 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:18:11,890 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:18:11,891 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:18:12,545 INFO  [http-nio-8080-exec-2] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Incoming request PUT /users/profile from 0:0:0:0:0:0:0:1
2024-12-01 19:18:12,545 DEBUG [http-nio-8080-exec-2] org.springframework.security.web.FilterChainProxy: Securing PUT /users/profile
2024-12-01 19:18:12,548 INFO  [http-nio-8080-exec-2] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Request completed in 3ms with status 500
2024-12-01 19:18:12,548 ERROR [http-nio-8080-exec-2] org.apache.juli.logging.DirectJDKLog: Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.security.SignatureException: JWT signature does not match locally computed signature. JWT validity cannot be asserted and should not be trusted.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:399)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at net.engineeringdigest.ecommerce.security.JwtTokenUtil.extractAllClaims(JwtTokenUtil.java:68)
	at net.engineeringdigest.ecommerce.security.JwtTokenUtil.extractClaim(JwtTokenUtil.java:60)
	at net.engineeringdigest.ecommerce.security.JwtTokenUtil.extractUsername(JwtTokenUtil.java:52)
	at net.engineeringdigest.ecommerce.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:321)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:222)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at net.engineeringdigest.ecommerce.filter.RequestTracingFilter.doFilterInternal(RequestTracingFilter.java:39)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2024-12-01 19:18:12,549 DEBUG [http-nio-8080-exec-2] org.springframework.security.web.FilterChainProxy: Securing PUT /error
2024-12-01 19:18:12,550 DEBUG [http-nio-8080-exec-2] org.springframework.security.web.authentication.AnonymousAuthenticationFilter: Set SecurityContextHolder to anonymous SecurityContext
2024-12-01 19:18:12,551 DEBUG [http-nio-8080-exec-2] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2024-12-01 19:18:12,552 DEBUG [http-nio-8080-exec-2] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2024-12-01 19:18:12,553 DEBUG [http-nio-8080-exec-2] org.springframework.security.web.authentication.Http403ForbiddenEntryPoint: Pre-authenticated entry point called. Rejecting access
2024-12-01 19:18:14,373 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 19:18:14,435 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=4.1 ms, state=CONNECTED}]
2024-12-01 19:18:14,435 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:18:16,891 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:18:16,892 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:18:21,892 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:18:21,893 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:18:24,444 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=3.4 ms, state=CONNECTED}]
2024-12-01 19:18:24,445 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:18:26,893 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:18:26,893 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:18:31,895 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:18:31,895 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:18:34,455 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=2.9 ms, state=CONNECTED}]
2024-12-01 19:18:34,455 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:18:36,896 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:18:36,896 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:18:41,896 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:18:41,897 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:18:44,465 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=2.5 ms, state=CONNECTED}]
2024-12-01 19:18:44,465 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:18:46,897 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:18:46,898 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:18:51,899 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:18:51,899 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:18:54,474 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=2.2 ms, state=CONNECTED}]
2024-12-01 19:18:54,475 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:18:56,899 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:18:56,899 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:19:01,899 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:19:01,900 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:19:04,485 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.8 ms, state=CONNECTED}]
2024-12-01 19:19:04,486 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:19:06,901 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:19:06,902 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:19:11,902 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:19:11,903 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:19:14,373 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 19:19:14,494 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2024-12-01 19:19:14,494 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:19:16,904 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:19:16,904 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:19:21,906 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:19:21,906 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:19:24,504 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2024-12-01 19:19:24,504 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:19:26,906 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:19:26,907 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:19:31,908 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:19:31,908 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:19:34,513 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2024-12-01 19:19:34,513 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:19:36,908 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:19:36,908 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:19:41,910 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:19:41,910 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:19:44,515 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2024-12-01 19:19:44,516 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:19:46,910 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:19:46,910 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:19:51,910 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:19:51,911 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:19:54,525 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2024-12-01 19:19:54,525 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:19:56,911 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:19:56,912 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:20:01,912 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:20:01,912 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:20:04,536 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2024-12-01 19:20:04,536 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:20:06,912 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:20:06,913 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:20:11,913 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:20:11,913 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:20:14,373 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 19:20:14,545 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2024-12-01 19:20:14,546 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:20:16,913 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:20:16,913 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:20:21,914 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:20:21,914 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:20:24,554 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2024-12-01 19:20:24,554 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:20:26,915 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:20:26,915 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:20:31,916 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:20:31,916 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:20:34,563 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 19:20:34,563 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:20:36,917 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:20:36,918 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:20:41,919 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:20:41,919 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:20:44,572 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 19:20:44,572 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:20:46,919 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:20:46,920 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:20:51,920 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:20:51,921 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:20:54,583 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 19:20:54,584 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:20:56,922 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:20:56,922 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:21:01,923 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:21:01,924 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:21:04,592 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2024-12-01 19:21:04,595 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:21:06,924 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:21:06,925 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:21:11,925 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:21:11,926 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:21:14,373 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 19:21:14,601 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2024-12-01 19:21:14,601 DEBUG [cluster-ClusterId{value='674c68e2129ef20598ccc6ce', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:21:16,926 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:21:16,927 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:21:18,253 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:21:18,253 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Revoke previously assigned partitions test-topic-0, test-topic-1, test-topic-2
2024-12-01 19:21:18,253 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: ecommerce-group: partitions revoked: [test-topic-0, test-topic-1, test-topic-2]
2024-12-01 19:21:18,253 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:21:18,253 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Member consumer-ecommerce-group-1-7211af64-d740-464d-8586-009cda305a66 sending LeaveGroup request to coordinator localhost:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
2024-12-01 19:21:18,254 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-12-01 19:21:18,254 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Request joining group due to: consumer pro-actively leaving the group
2024-12-01 19:21:18,254 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Unsubscribed all topics or patterns and assigned partitions
2024-12-01 19:21:18,254 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-12-01 19:21:18,254 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Request joining group due to: consumer pro-actively leaving the group
2024-12-01 19:21:18,256 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics: Metrics scheduler closed
2024-12-01 19:21:18,257 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-12-01 19:21:18,257 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics: Metrics reporters closed
2024-12-01 19:21:18,259 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.utils.AppInfoParser: App info kafka.consumer for consumer-ecommerce-group-1 unregistered
2024-12-01 19:21:18,260 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: ecommerce-group: Consumer stopped
2024-12-01 19:21:18,261 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2024-12-01 19:21:18,388 DEBUG [SpringApplicationShutdownHook] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "endSessions" started on database admin using a connection with driver-generated ID 3 and server-generated ID 95 to localhost:27017. The request ID is 32. Command: {"endSessions": [{"id": {"$binary": {"base64": "MAPxxP2fQJ6FcWGmqnjKNA==", "subType": "04"}}}], "$db": "admin", "$readPreference": {"mode": "primaryPreferred"}}
2024-12-01 19:21:18,389 DEBUG [SpringApplicationShutdownHook] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "endSessions" succeeded in 1.25 ms using a connection with driver-generated ID 3 and server-generated ID 95 to localhost:27017. The request ID is 32. Command reply: {"ok": 1.0}
2024-12-01 19:21:18,391 DEBUG [SpringApplicationShutdownHook] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Closed connection [connectionId{localValue:3, serverValue:95}] to localhost:27017 because the pool has been closed.
2024-12-01 19:21:18,391 DEBUG [SpringApplicationShutdownHook] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Closing connection connectionId{localValue:3, serverValue:95}
2024-12-01 19:21:18,392 DEBUG [SpringApplicationShutdownHook] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Closing connection connectionId{localValue:1, serverValue:93}
2024-12-01 19:21:18,392 DEBUG [SpringApplicationShutdownHook] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Closing connection connectionId{localValue:2, serverValue:94}
2024-12-01 19:21:38,697 INFO  [background-preinit] org.hibernate.validator.internal.util.Version: HV000001: Hibernate Validator 8.0.0.Final
2024-12-01 19:21:38,771 INFO  [main] org.springframework.boot.StartupInfoLogger: Starting EcommerceApplication using Java 23.0.1 with PID 267705 (/home/mohit/Pictures/ecommerce-projects/ecommerce/target/classes started by mohit in /home/mohit/Pictures/ecommerce-projects/ecommerce)
2024-12-01 19:21:38,772 DEBUG [main] org.springframework.boot.StartupInfoLogger: Running with Spring Boot v3.1.0, Spring v6.0.9
2024-12-01 19:21:38,773 INFO  [main] org.springframework.boot.SpringApplication: The following 1 profile is active: "dev"
2024-12-01 19:21:40,285 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-12-01 19:21:40,288 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-12-01 19:21:40,327 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.ProductRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-12-01 19:21:40,329 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.ReviewRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-12-01 19:21:40,330 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.UserRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-12-01 19:21:40,331 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 37 ms. Found 0 Elasticsearch repository interfaces.
2024-12-01 19:21:40,337 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-12-01 19:21:40,338 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-12-01 19:21:40,346 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.ProductRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-12-01 19:21:40,347 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.ReviewRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-12-01 19:21:40,348 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.UserRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-12-01 19:21:40,348 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 9 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-12-01 19:21:40,355 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-12-01 19:21:40,356 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-12-01 19:21:40,461 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 104 ms. Found 3 MongoDB repository interfaces.
2024-12-01 19:21:40,479 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-12-01 19:21:40,481 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-12-01 19:21:40,499 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-12-01 19:21:40,500 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.ReviewRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-12-01 19:21:40,500 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-12-01 19:21:40,500 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2024-12-01 19:21:41,510 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer: Tomcat initialized with port(s): 8080 (http)
2024-12-01 19:21:41,520 INFO  [main] org.apache.juli.logging.DirectJDKLog: Initializing ProtocolHandler ["http-nio-8080"]
2024-12-01 19:21:41,521 INFO  [main] org.apache.juli.logging.DirectJDKLog: Starting service [Tomcat]
2024-12-01 19:21:41,521 INFO  [main] org.apache.juli.logging.DirectJDKLog: Starting Servlet engine: [Apache Tomcat/10.1.8]
2024-12-01 19:21:41,623 INFO  [main] org.apache.juli.logging.DirectJDKLog: Initializing Spring embedded WebApplicationContext
2024-12-01 19:21:41,625 INFO  [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 2745 ms
2024-12-01 19:21:42,064 DEBUG [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING}]
2024-12-01 19:21:42,081 INFO  [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.9.1"}, "os": {"type": "Linux", "name": "Linux", "architecture": "amd64", "version": "6.8.0-49-generic"}, "platform": "Java/Oracle Corporation/23.0.1+11-39"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@8549c5f], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@35454c7a, com.mongodb.Jep395RecordCodecProvider@50f3ba6a]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@319aa9ee], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-12-01 19:21:42,108 DEBUG [cluster-rtt-ClusterId{value='674c69ee36c4306e3340a3f1', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Opened connection [connectionId{localValue:2, serverValue:97}] to localhost:27017
2024-12-01 19:21:42,108 DEBUG [cluster-ClusterId{value='674c69ee36c4306e3340a3f1', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Opened connection [connectionId{localValue:1, serverValue:96}] to localhost:27017
2024-12-01 19:21:42,109 INFO  [cluster-ClusterId{value='674c69ee36c4306e3340a3f1', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=23023282}
2024-12-01 19:21:42,111 DEBUG [cluster-ClusterId{value='674c69ee36c4306e3340a3f1', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Marking the connection pool for ServerId{clusterId=ClusterId{value='674c69ee36c4306e3340a3f1', description='null'}, address=localhost:27017} as 'ready'
2024-12-01 19:21:42,111 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 19:21:42,113 DEBUG [cluster-ClusterId{value='674c69ee36c4306e3340a3f1', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=23.0 ms, state=CONNECTED}]
2024-12-01 19:21:42,114 DEBUG [cluster-ClusterId{value='674c69ee36c4306e3340a3f1', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:21:42,597 DEBUG [main] org.springframework.web.filter.GenericFilterBean: Filter 'jwtAuthenticationFilter' configured for use
2024-12-01 19:21:42,598 DEBUG [main] org.springframework.web.filter.GenericFilterBean: Filter 'webMvcObservationFilter' configured for use
2024-12-01 19:21:42,599 DEBUG [main] org.springframework.web.filter.GenericFilterBean: Filter 'requestTracingFilter' configured for use
2024-12-01 19:21:42,599 DEBUG [main] org.springframework.web.filter.GenericFilterBean: Filter 'corsFilter' configured for use
2024-12-01 19:21:43,330 DEBUG [main] org.springframework.core.log.LogAccessor: No retry topic configuration found for topics [test-topic]
2024-12-01 19:21:43,335 DEBUG [main] org.springframework.core.log.LogAccessor: 1 @KafkaListener methods processed on bean 'kafkaConsumerService': {public void net.engineeringdigest.ecommerce.service.KafkaConsumerService.listen(java.lang.String)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", contentTypeConverter="", containerFactory="", beanRef="__listener", topics={"test-topic"}, groupId="ecommerce-group", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", id="", properties={}, info="")]}
2024-12-01 19:21:44,000 DEBUG [main] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping: 30 mappings in 'requestMappingHandlerMapping'
2024-12-01 19:21:44,070 DEBUG [main] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping: Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2024-12-01 19:21:44,281 INFO  [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver: Exposing 3 endpoint(s) beneath base path '/actuator'
2024-12-01 19:21:44,374 INFO  [main] org.springframework.security.web.DefaultSecurityFilterChain: Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1512efe9, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7cc7e441, org.springframework.security.web.context.SecurityContextHolderFilter@397f925e, org.springframework.security.web.header.HeaderWriterFilter@684bfba9, org.springframework.web.filter.CorsFilter@bb1b872, org.springframework.security.web.authentication.logout.LogoutFilter@2389f546, net.engineeringdigest.ecommerce.security.JwtAuthenticationFilter@50ac1249, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@474deb4c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6ba02f70, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@64245ca9, org.springframework.security.web.session.SessionManagementFilter@3a36da5e, org.springframework.security.web.access.ExceptionTranslationFilter@be186df, org.springframework.security.web.access.intercept.AuthorizationFilter@67521a79]
2024-12-01 19:21:44,516 DEBUG [main] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-12-01 19:21:44,590 DEBUG [main] org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver: ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2024-12-01 19:21:45,606 INFO  [main] org.apache.kafka.common.config.AbstractConfig: AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-12-01 19:21:45,883 INFO  [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka version: 3.4.1
2024-12-01 19:21:45,883 INFO  [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka commitId: 8a516edc2755df89
2024-12-01 19:21:45,883 INFO  [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka startTimeMs: 1733061105882
2024-12-01 19:21:46,283 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.utils.AppInfoParser: App info kafka.admin.client for adminclient-1 unregistered
2024-12-01 19:21:46,289 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics: Metrics scheduler closed
2024-12-01 19:21:46,289 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-12-01 19:21:46,290 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics: Metrics reporters closed
2024-12-01 19:21:46,295 INFO  [main] org.apache.juli.logging.DirectJDKLog: Starting ProtocolHandler ["http-nio-8080"]
2024-12-01 19:21:46,306 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer: Tomcat started on port(s): 8080 (http) with context path ''
2024-12-01 19:21:46,371 INFO  [main] org.apache.kafka.common.config.AbstractConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-ecommerce-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = ecommerce-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-12-01 19:21:46,416 INFO  [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka version: 3.4.1
2024-12-01 19:21:46,417 INFO  [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka commitId: 8a516edc2755df89
2024-12-01 19:21:46,417 INFO  [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka startTimeMs: 1733061106416
2024-12-01 19:21:46,419 INFO  [main] org.apache.kafka.clients.consumer.KafkaConsumer: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Subscribed to topic(s): test-topic
2024-12-01 19:21:46,427 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:21:46,445 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Resetting the last seen epoch of partition test-topic-0 to 0 since the associated topicId changed from null to R6Tissc8Tx-8faE-YmmVlA
2024-12-01 19:21:46,445 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Resetting the last seen epoch of partition test-topic-1 to 0 since the associated topicId changed from null to R6Tissc8Tx-8faE-YmmVlA
2024-12-01 19:21:46,446 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Resetting the last seen epoch of partition test-topic-2 to 0 since the associated topicId changed from null to R6Tissc8Tx-8faE-YmmVlA
2024-12-01 19:21:46,446 INFO  [main] org.springframework.boot.StartupInfoLogger: Started EcommerceApplication in 8.456 seconds (process running for 8.824)
2024-12-01 19:21:46,447 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Cluster ID: -NsTbwmJS6S4DPEa3UlZLw
2024-12-01 19:21:46,449 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$FindCoordinatorResponseHandler: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Discovered group coordinator localhost:9092 (id: 2147482646 rack: null)
2024-12-01 19:21:46,454 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] (Re-)joining group
2024-12-01 19:21:46,505 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Request joining group due to: need to re-join with the given member-id: consumer-ecommerce-group-1-393dc03d-149f-4be0-8fe3-3bcf04034223
2024-12-01 19:21:46,506 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-12-01 19:21:46,506 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] (Re-)joining group
2024-12-01 19:21:46,513 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$JoinGroupResponseHandler: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Successfully joined group with generation Generation{generationId=23, memberId='consumer-ecommerce-group-1-393dc03d-149f-4be0-8fe3-3bcf04034223', protocol='range'}
2024-12-01 19:21:46,518 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Finished assignment for group at generation 23: {consumer-ecommerce-group-1-393dc03d-149f-4be0-8fe3-3bcf04034223=Assignment(partitions=[test-topic-0, test-topic-1, test-topic-2])}
2024-12-01 19:21:46,539 DEBUG [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Opened connection [connectionId{localValue:3, serverValue:98}] to localhost:27017
2024-12-01 19:21:46,542 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$SyncGroupResponseHandler: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Successfully synced group in generation Generation{generationId=23, memberId='consumer-ecommerce-group-1-393dc03d-149f-4be0-8fe3-3bcf04034223', protocol='range'}
2024-12-01 19:21:46,543 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Notifying assignor about the new Assignment(partitions=[test-topic-0, test-topic-1, test-topic-2])
2024-12-01 19:21:46,557 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Adding newly assigned partitions: test-topic-0, test-topic-1, test-topic-2
2024-12-01 19:21:46,566 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator$OffsetFetchResponseHandler: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Found no committed offset for partition test-topic-2
2024-12-01 19:21:46,567 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator$OffsetFetchResponseHandler: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Found no committed offset for partition test-topic-1
2024-12-01 19:21:46,569 DEBUG [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "ping" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 98 to localhost:27017. The request ID is 5. Command: {"ping": 1, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "BniNLjYNSeuI2xAX15sbDQ==", "subType": "04"}}}}
2024-12-01 19:21:46,570 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Setting offset for partition test-topic-0 to the committed offset FetchPosition{offset=1, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1001 rack: null)], epoch=0}}
2024-12-01 19:21:46,584 DEBUG [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "ping" succeeded in 15.73 ms using a connection with driver-generated ID 3 and server-generated ID 98 to localhost:27017. The request ID is 5. Command reply: {"ok": 1.0}
2024-12-01 19:21:46,592 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Resetting offset for partition test-topic-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1001 rack: null)], epoch=0}}.
2024-12-01 19:21:46,594 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Resetting offset for partition test-topic-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1001 rack: null)], epoch=0}}.
2024-12-01 19:21:46,594 DEBUG [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "serverStatus" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 98 to localhost:27017. The request ID is 6. Command: {"serverStatus": 1, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "BniNLjYNSeuI2xAX15sbDQ==", "subType": "04"}}}}
2024-12-01 19:21:46,596 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: ecommerce-group: partitions assigned: [test-topic-0, test-topic-1, test-topic-2]
2024-12-01 19:21:46,618 DEBUG [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "serverStatus" succeeded in 5.53 ms using a connection with driver-generated ID 3 and server-generated ID 98 to localhost:27017. The request ID is 6. Command reply: {"host": "mohitkalaptop", "version": "8.0.3", "process": "mongod", "service": ["shard"], "pid": 179678, "uptime": 14123.0, "uptimeMillis": 14122486, "uptimeEstimate": 14122, "localTime": {"$date": "2024-12-01T13:51:46.595Z"}, "asserts": {"regular": 0, "warning": 0, "msg": 0, "user": 106, "tripwire": 0, "rollovers": 0}, "batchedDeletes": {"batches": 3, "docs": 5, "stagedSizeBytes": 1215, "timeInBatchMillis": 0, "refetchesDueToYield": 0}, "catalogStats": {"collections": 2, "capped": 0, "clustered": 0, "timeseries": 0, "views": 0, "internalCollections": 3, "internalViews": 0, "csfle": 0, "queryableEncryption": 0}, "changeStreamPreImages": {"purgingJob": {"totalPass": 0, "docsDeleted": 0, "bytesDeleted": 0, "scannedCollections": 0, "scannedInternalCollections": 0, "maxStartWallTimeMillis": 0, "timeElapsedMillis": 0}}, "collectionCatalog": {"numScansDueToMissingMapping": 0}, "connections": {"current": 3, "available": 51197, "totalCreated": 98, "rejected": 0, "active": 2, "threaded": 3, "exh ...
2024-12-01 19:21:46,637 DEBUG [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "listCollections" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 98 to localhost:27017. The request ID is 7. Command: {"listCollections": 1, "cursor": {}, "nameOnly": true, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "BniNLjYNSeuI2xAX15sbDQ==", "subType": "04"}}}}
2024-12-01 19:21:46,639 DEBUG [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "listCollections" succeeded in 1.90 ms using a connection with driver-generated ID 3 and server-generated ID 98 to localhost:27017. The request ID is 7. Command reply: {"cursor": {"id": 0, "ns": "ecommerce.$cmd.listCollections", "firstBatch": [{"name": "users", "type": "collection"}, {"name": "products", "type": "collection"}]}, "ok": 1.0}
2024-12-01 19:21:46,644 DEBUG [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Received batch of 2 documents with cursorId 0 from server localhost:27017
2024-12-01 19:21:51,431 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:21:51,432 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:21:52,131 DEBUG [cluster-ClusterId{value='674c69ee36c4306e3340a3f1', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=18.7 ms, state=CONNECTED}]
2024-12-01 19:21:52,131 DEBUG [cluster-ClusterId{value='674c69ee36c4306e3340a3f1', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:21:56,433 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:21:56,433 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:22:01,434 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:22:01,435 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:22:02,140 DEBUG [cluster-ClusterId{value='674c69ee36c4306e3340a3f1', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=15.2 ms, state=CONNECTED}]
2024-12-01 19:22:02,141 DEBUG [cluster-ClusterId{value='674c69ee36c4306e3340a3f1', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:22:06,435 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:22:06,436 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:22:10,105 INFO  [http-nio-8080-exec-1] org.apache.juli.logging.DirectJDKLog: Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-12-01 19:22:10,105 INFO  [http-nio-8080-exec-1] org.springframework.web.servlet.FrameworkServlet: Initializing Servlet 'dispatcherServlet'
2024-12-01 19:22:10,106 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.DispatcherServlet: Detected StandardServletMultipartResolver
2024-12-01 19:22:10,106 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.DispatcherServlet: Detected AcceptHeaderLocaleResolver
2024-12-01 19:22:10,106 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.DispatcherServlet: Detected FixedThemeResolver
2024-12-01 19:22:10,107 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.DispatcherServlet: Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@662f76d9
2024-12-01 19:22:10,108 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.DispatcherServlet: Detected org.springframework.web.servlet.support.SessionFlashMapManager@24082dff
2024-12-01 19:22:10,108 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.FrameworkServlet: enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-12-01 19:22:10,108 INFO  [http-nio-8080-exec-1] org.springframework.web.servlet.FrameworkServlet: Completed initialization in 2 ms
2024-12-01 19:22:10,110 INFO  [http-nio-8080-exec-1] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Incoming request GET /users/me from 0:0:0:0:0:0:0:1
2024-12-01 19:22:10,119 DEBUG [http-nio-8080-exec-1] org.springframework.security.web.FilterChainProxy: Securing GET /users/me
2024-12-01 19:22:10,174 INFO  [http-nio-8080-exec-1] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Request completed in 64ms with status 500
2024-12-01 19:22:10,174 ERROR [http-nio-8080-exec-1] org.apache.juli.logging.DirectJDKLog: Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.security.SignatureException: JWT signature does not match locally computed signature. JWT validity cannot be asserted and should not be trusted.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:399)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at net.engineeringdigest.ecommerce.security.JwtTokenUtil.extractAllClaims(JwtTokenUtil.java:68)
	at net.engineeringdigest.ecommerce.security.JwtTokenUtil.extractClaim(JwtTokenUtil.java:60)
	at net.engineeringdigest.ecommerce.security.JwtTokenUtil.extractUsername(JwtTokenUtil.java:52)
	at net.engineeringdigest.ecommerce.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:321)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:222)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at net.engineeringdigest.ecommerce.filter.RequestTracingFilter.doFilterInternal(RequestTracingFilter.java:39)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2024-12-01 19:22:10,179 DEBUG [http-nio-8080-exec-1] org.springframework.security.web.FilterChainProxy: Securing GET /error
2024-12-01 19:22:10,182 DEBUG [http-nio-8080-exec-1] org.springframework.security.web.authentication.AnonymousAuthenticationFilter: Set SecurityContextHolder to anonymous SecurityContext
2024-12-01 19:22:10,191 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2024-12-01 19:22:10,193 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2024-12-01 19:22:10,195 DEBUG [http-nio-8080-exec-1] org.springframework.security.web.authentication.Http403ForbiddenEntryPoint: Pre-authenticated entry point called. Rejecting access
2024-12-01 19:22:11,436 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:22:11,437 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:22:12,150 DEBUG [cluster-ClusterId{value='674c69ee36c4306e3340a3f1', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=12.3 ms, state=CONNECTED}]
2024-12-01 19:22:12,150 DEBUG [cluster-ClusterId{value='674c69ee36c4306e3340a3f1', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:22:16,438 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:22:16,439 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:22:21,440 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:22:21,441 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:22:22,159 DEBUG [cluster-ClusterId{value='674c69ee36c4306e3340a3f1', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=10.1 ms, state=CONNECTED}]
2024-12-01 19:22:22,160 DEBUG [cluster-ClusterId{value='674c69ee36c4306e3340a3f1', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:22:26,442 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:22:26,443 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:22:31,443 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:22:31,444 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:22:32,169 DEBUG [cluster-ClusterId{value='674c69ee36c4306e3340a3f1', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=8.2 ms, state=CONNECTED}]
2024-12-01 19:22:32,169 DEBUG [cluster-ClusterId{value='674c69ee36c4306e3340a3f1', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:22:36,445 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:22:36,446 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:22:41,446 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:22:41,447 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:22:42,111 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 19:22:42,180 DEBUG [cluster-ClusterId{value='674c69ee36c4306e3340a3f1', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=6.7 ms, state=CONNECTED}]
2024-12-01 19:22:42,181 DEBUG [cluster-ClusterId{value='674c69ee36c4306e3340a3f1', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:22:46,447 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:22:46,447 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:22:51,447 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:22:51,447 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:22:52,190 DEBUG [cluster-ClusterId{value='674c69ee36c4306e3340a3f1', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=5.4 ms, state=CONNECTED}]
2024-12-01 19:22:52,190 DEBUG [cluster-ClusterId{value='674c69ee36c4306e3340a3f1', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:22:56,448 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:22:56,449 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:23:01,450 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:23:01,450 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:23:02,199 DEBUG [cluster-ClusterId{value='674c69ee36c4306e3340a3f1', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=4.6 ms, state=CONNECTED}]
2024-12-01 19:23:02,200 DEBUG [cluster-ClusterId{value='674c69ee36c4306e3340a3f1', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:23:06,450 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:23:06,450 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:23:11,451 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:23:11,452 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:23:12,209 DEBUG [cluster-ClusterId{value='674c69ee36c4306e3340a3f1', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=3.9 ms, state=CONNECTED}]
2024-12-01 19:23:12,209 DEBUG [cluster-ClusterId{value='674c69ee36c4306e3340a3f1', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:23:16,452 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:23:16,452 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:23:21,453 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:23:21,454 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:23:22,214 DEBUG [cluster-ClusterId{value='674c69ee36c4306e3340a3f1', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=3.3 ms, state=CONNECTED}]
2024-12-01 19:23:22,214 DEBUG [cluster-ClusterId{value='674c69ee36c4306e3340a3f1', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:23:26,454 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:23:26,454 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:23:31,456 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:23:31,456 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:23:32,224 DEBUG [cluster-ClusterId{value='674c69ee36c4306e3340a3f1', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=2.9 ms, state=CONNECTED}]
2024-12-01 19:23:32,225 DEBUG [cluster-ClusterId{value='674c69ee36c4306e3340a3f1', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:23:36,456 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:23:36,457 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:23:41,458 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:23:41,458 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:23:42,111 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 19:23:42,234 DEBUG [cluster-ClusterId{value='674c69ee36c4306e3340a3f1', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=2.4 ms, state=CONNECTED}]
2024-12-01 19:23:42,235 DEBUG [cluster-ClusterId{value='674c69ee36c4306e3340a3f1', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:23:46,459 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:23:46,460 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:23:51,461 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:23:51,461 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:23:52,244 DEBUG [cluster-ClusterId{value='674c69ee36c4306e3340a3f1', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=2.0 ms, state=CONNECTED}]
2024-12-01 19:23:52,245 DEBUG [cluster-ClusterId{value='674c69ee36c4306e3340a3f1', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:23:56,461 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:23:56,462 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:23:57,897 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:23:57,897 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Revoke previously assigned partitions test-topic-0, test-topic-1, test-topic-2
2024-12-01 19:23:57,897 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: ecommerce-group: partitions revoked: [test-topic-0, test-topic-1, test-topic-2]
2024-12-01 19:23:57,897 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:23:57,897 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Member consumer-ecommerce-group-1-393dc03d-149f-4be0-8fe3-3bcf04034223 sending LeaveGroup request to coordinator localhost:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
2024-12-01 19:23:57,898 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-12-01 19:23:57,898 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Request joining group due to: consumer pro-actively leaving the group
2024-12-01 19:23:57,898 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Unsubscribed all topics or patterns and assigned partitions
2024-12-01 19:23:57,898 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-12-01 19:23:57,898 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Request joining group due to: consumer pro-actively leaving the group
2024-12-01 19:23:57,900 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics: Metrics scheduler closed
2024-12-01 19:23:57,900 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-12-01 19:23:57,900 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics: Metrics reporters closed
2024-12-01 19:23:57,901 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.utils.AppInfoParser: App info kafka.consumer for consumer-ecommerce-group-1 unregistered
2024-12-01 19:23:57,902 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: ecommerce-group: Consumer stopped
2024-12-01 19:23:57,903 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2024-12-01 19:23:58,025 DEBUG [SpringApplicationShutdownHook] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "endSessions" started on database admin using a connection with driver-generated ID 3 and server-generated ID 98 to localhost:27017. The request ID is 21. Command: {"endSessions": [{"id": {"$binary": {"base64": "BniNLjYNSeuI2xAX15sbDQ==", "subType": "04"}}}], "$db": "admin", "$readPreference": {"mode": "primaryPreferred"}}
2024-12-01 19:23:58,026 DEBUG [SpringApplicationShutdownHook] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "endSessions" succeeded in 1.01 ms using a connection with driver-generated ID 3 and server-generated ID 98 to localhost:27017. The request ID is 21. Command reply: {"ok": 1.0}
2024-12-01 19:23:58,028 DEBUG [SpringApplicationShutdownHook] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Closed connection [connectionId{localValue:3, serverValue:98}] to localhost:27017 because the pool has been closed.
2024-12-01 19:23:58,028 DEBUG [SpringApplicationShutdownHook] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Closing connection connectionId{localValue:3, serverValue:98}
2024-12-01 19:23:58,028 DEBUG [SpringApplicationShutdownHook] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Closing connection connectionId{localValue:1, serverValue:96}
2024-12-01 19:23:58,029 DEBUG [SpringApplicationShutdownHook] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Closing connection connectionId{localValue:2, serverValue:97}
2024-12-01 19:24:01,451 INFO  [background-preinit] org.hibernate.validator.internal.util.Version: HV000001: Hibernate Validator 8.0.0.Final
2024-12-01 19:24:01,480 INFO  [main] org.springframework.boot.StartupInfoLogger: Starting EcommerceApplication using Java 23.0.1 with PID 268782 (/home/mohit/Pictures/ecommerce-projects/ecommerce/target/classes started by mohit in /home/mohit/Pictures/ecommerce-projects/ecommerce)
2024-12-01 19:24:01,480 DEBUG [main] org.springframework.boot.StartupInfoLogger: Running with Spring Boot v3.1.0, Spring v6.0.9
2024-12-01 19:24:01,481 INFO  [main] org.springframework.boot.SpringApplication: The following 1 profile is active: "dev"
2024-12-01 19:24:02,267 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-12-01 19:24:02,268 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-12-01 19:24:02,291 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.ProductRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-12-01 19:24:02,292 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.ReviewRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-12-01 19:24:02,293 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.UserRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-12-01 19:24:02,294 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 22 ms. Found 0 Elasticsearch repository interfaces.
2024-12-01 19:24:02,299 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-12-01 19:24:02,299 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-12-01 19:24:02,303 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.ProductRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-12-01 19:24:02,304 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.ReviewRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-12-01 19:24:02,304 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.UserRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-12-01 19:24:02,304 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 4 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-12-01 19:24:02,307 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-12-01 19:24:02,307 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-12-01 19:24:02,372 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 64 ms. Found 3 MongoDB repository interfaces.
2024-12-01 19:24:02,382 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-12-01 19:24:02,383 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-12-01 19:24:02,391 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-12-01 19:24:02,391 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.ReviewRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-12-01 19:24:02,391 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-12-01 19:24:02,391 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-12-01 19:24:03,011 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer: Tomcat initialized with port(s): 8080 (http)
2024-12-01 19:24:03,074 INFO  [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1541 ms
2024-12-01 19:24:03,295 DEBUG [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING}]
2024-12-01 19:24:03,311 INFO  [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.9.1"}, "os": {"type": "Linux", "name": "Linux", "architecture": "amd64", "version": "6.8.0-49-generic"}, "platform": "Java/Oracle Corporation/23.0.1+11-39"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@6cd7f381], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@7df3da0b, com.mongodb.Jep395RecordCodecProvider@4e5d5ac1]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@70777a65], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-12-01 19:24:03,328 DEBUG [cluster-ClusterId{value='674c6a7ba9b4e46942378aaa', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Opened connection [connectionId{localValue:2, serverValue:100}] to localhost:27017
2024-12-01 19:24:03,328 DEBUG [cluster-rtt-ClusterId{value='674c6a7ba9b4e46942378aaa', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Opened connection [connectionId{localValue:1, serverValue:99}] to localhost:27017
2024-12-01 19:24:03,328 INFO  [cluster-ClusterId{value='674c6a7ba9b4e46942378aaa', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=13367828}
2024-12-01 19:24:03,330 DEBUG [cluster-ClusterId{value='674c6a7ba9b4e46942378aaa', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Marking the connection pool for ServerId{clusterId=ClusterId{value='674c6a7ba9b4e46942378aaa', description='null'}, address=localhost:27017} as 'ready'
2024-12-01 19:24:03,330 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 19:24:03,331 DEBUG [cluster-ClusterId{value='674c6a7ba9b4e46942378aaa', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=13.4 ms, state=CONNECTED}]
2024-12-01 19:24:03,332 DEBUG [cluster-ClusterId{value='674c6a7ba9b4e46942378aaa', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:24:03,663 DEBUG [main] org.springframework.web.filter.GenericFilterBean: Filter 'jwtAuthenticationFilter' configured for use
2024-12-01 19:24:03,665 DEBUG [main] org.springframework.web.filter.GenericFilterBean: Filter 'webMvcObservationFilter' configured for use
2024-12-01 19:24:03,665 DEBUG [main] org.springframework.web.filter.GenericFilterBean: Filter 'requestTracingFilter' configured for use
2024-12-01 19:24:03,665 DEBUG [main] org.springframework.web.filter.GenericFilterBean: Filter 'corsFilter' configured for use
2024-12-01 19:24:04,117 DEBUG [main] org.springframework.core.log.LogAccessor: No retry topic configuration found for topics [test-topic]
2024-12-01 19:24:04,120 DEBUG [main] org.springframework.core.log.LogAccessor: 1 @KafkaListener methods processed on bean 'kafkaConsumerService': {public void net.engineeringdigest.ecommerce.service.KafkaConsumerService.listen(java.lang.String)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", contentTypeConverter="", containerFactory="", beanRef="__listener", topics={"test-topic"}, groupId="ecommerce-group", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", id="", properties={}, info="")]}
2024-12-01 19:24:04,558 DEBUG [main] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping: 30 mappings in 'requestMappingHandlerMapping'
2024-12-01 19:24:04,615 DEBUG [main] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping: Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2024-12-01 19:24:04,772 INFO  [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver: Exposing 3 endpoint(s) beneath base path '/actuator'
2024-12-01 19:24:04,849 INFO  [main] org.springframework.security.web.DefaultSecurityFilterChain: Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@610d0067, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5ef48b08, org.springframework.security.web.context.SecurityContextHolderFilter@2e590e36, org.springframework.security.web.header.HeaderWriterFilter@1acfc058, org.springframework.web.filter.CorsFilter@7a1878d, org.springframework.security.web.authentication.logout.LogoutFilter@63c66980, net.engineeringdigest.ecommerce.security.JwtAuthenticationFilter@2759749, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@752e4223, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7528089c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2b625e82, org.springframework.security.web.session.SessionManagementFilter@470ad01c, org.springframework.security.web.access.ExceptionTranslationFilter@6af0407c, org.springframework.security.web.access.intercept.AuthorizationFilter@4d529bc0]
2024-12-01 19:24:04,941 DEBUG [main] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-12-01 19:24:04,985 DEBUG [main] org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver: ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2024-12-01 19:24:05,629 INFO  [main] org.apache.kafka.common.config.AbstractConfig: AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-12-01 19:24:05,747 INFO  [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka version: 3.4.1
2024-12-01 19:24:05,747 INFO  [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka commitId: 8a516edc2755df89
2024-12-01 19:24:05,747 INFO  [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka startTimeMs: 1733061245745
2024-12-01 19:24:05,985 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.utils.AppInfoParser: App info kafka.admin.client for adminclient-1 unregistered
2024-12-01 19:24:05,989 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics: Metrics scheduler closed
2024-12-01 19:24:05,989 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-12-01 19:24:05,989 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics: Metrics reporters closed
2024-12-01 19:24:06,002 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer: Tomcat started on port(s): 8080 (http) with context path ''
2024-12-01 19:24:06,023 INFO  [main] org.apache.kafka.common.config.AbstractConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-ecommerce-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = ecommerce-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-12-01 19:24:06,052 INFO  [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka version: 3.4.1
2024-12-01 19:24:06,053 INFO  [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka commitId: 8a516edc2755df89
2024-12-01 19:24:06,053 INFO  [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka startTimeMs: 1733061246052
2024-12-01 19:24:06,055 INFO  [main] org.apache.kafka.clients.consumer.KafkaConsumer: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Subscribed to topic(s): test-topic
2024-12-01 19:24:06,060 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:24:06,072 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Resetting the last seen epoch of partition test-topic-0 to 0 since the associated topicId changed from null to R6Tissc8Tx-8faE-YmmVlA
2024-12-01 19:24:06,072 INFO  [main] org.springframework.boot.StartupInfoLogger: Started EcommerceApplication in 4.981 seconds (process running for 5.211)
2024-12-01 19:24:06,073 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Resetting the last seen epoch of partition test-topic-1 to 0 since the associated topicId changed from null to R6Tissc8Tx-8faE-YmmVlA
2024-12-01 19:24:06,073 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Resetting the last seen epoch of partition test-topic-2 to 0 since the associated topicId changed from null to R6Tissc8Tx-8faE-YmmVlA
2024-12-01 19:24:06,074 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Cluster ID: -NsTbwmJS6S4DPEa3UlZLw
2024-12-01 19:24:06,075 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$FindCoordinatorResponseHandler: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Discovered group coordinator localhost:9092 (id: 2147482646 rack: null)
2024-12-01 19:24:06,077 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] (Re-)joining group
2024-12-01 19:24:06,088 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:24:06,088 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-12-01 19:24:06,088 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Request joining group due to: consumer pro-actively leaving the group
2024-12-01 19:24:06,089 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Unsubscribed all topics or patterns and assigned partitions
2024-12-01 19:24:06,091 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-12-01 19:24:06,091 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Request joining group due to: consumer pro-actively leaving the group
2024-12-01 19:24:06,094 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Request joining group due to: need to re-join with the given member-id: consumer-ecommerce-group-1-afe1084b-64a9-407c-9681-e603d28fc265
2024-12-01 19:24:06,096 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics: Metrics scheduler closed
2024-12-01 19:24:06,096 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-12-01 19:24:06,097 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics: Metrics reporters closed
2024-12-01 19:24:06,102 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.utils.AppInfoParser: App info kafka.consumer for consumer-ecommerce-group-1 unregistered
2024-12-01 19:24:06,103 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: ecommerce-group: Consumer stopped
2024-12-01 19:24:06,104 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2024-12-01 19:24:06,109 DEBUG [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Opened connection [connectionId{localValue:3, serverValue:101}] to localhost:27017
2024-12-01 19:24:06,123 DEBUG [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "ping" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 101 to localhost:27017. The request ID is 5. Command: {"ping": 1, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "/A8oSLsfQiufJaTm4o+Ysg==", "subType": "04"}}}}
2024-12-01 19:24:06,130 DEBUG [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "ping" succeeded in 8.76 ms using a connection with driver-generated ID 3 and server-generated ID 101 to localhost:27017. The request ID is 5. Command reply: {"ok": 1.0}
2024-12-01 19:24:06,133 DEBUG [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "serverStatus" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 101 to localhost:27017. The request ID is 6. Command: {"serverStatus": 1, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "/A8oSLsfQiufJaTm4o+Ysg==", "subType": "04"}}}}
2024-12-01 19:24:06,137 DEBUG [SpringApplicationShutdownHook] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Closing connection connectionId{localValue:2, serverValue:100}
2024-12-01 19:24:06,138 DEBUG [SpringApplicationShutdownHook] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Closing connection connectionId{localValue:1, serverValue:99}
2024-12-01 19:28:09,101 INFO  [background-preinit] org.hibernate.validator.internal.util.Version: HV000001: Hibernate Validator 8.0.0.Final
2024-12-01 19:28:09,177 INFO  [main] org.springframework.boot.StartupInfoLogger: Starting EcommerceApplication using Java 23 with PID 270114 (/home/mohit/Pictures/ecommerce-projects/ecommerce/target/classes started by mohit in /home/mohit/Pictures/ecommerce-projects/ecommerce)
2024-12-01 19:28:09,177 DEBUG [main] org.springframework.boot.StartupInfoLogger: Running with Spring Boot v3.1.0, Spring v6.0.9
2024-12-01 19:28:09,178 INFO  [main] org.springframework.boot.SpringApplication: The following 1 profile is active: "dev"
2024-12-01 19:28:10,395 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-12-01 19:28:10,396 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-12-01 19:28:10,426 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.ProductRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-12-01 19:28:10,427 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.ReviewRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-12-01 19:28:10,428 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.UserRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-12-01 19:28:10,429 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 30 ms. Found 0 Elasticsearch repository interfaces.
2024-12-01 19:28:10,432 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-12-01 19:28:10,433 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-12-01 19:28:10,436 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.ProductRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-12-01 19:28:10,436 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.ReviewRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-12-01 19:28:10,437 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.UserRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-12-01 19:28:10,437 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 4 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-12-01 19:28:10,443 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-12-01 19:28:10,443 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-12-01 19:28:10,523 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 79 ms. Found 3 MongoDB repository interfaces.
2024-12-01 19:28:10,536 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-12-01 19:28:10,538 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-12-01 19:28:10,551 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-12-01 19:28:10,552 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.ReviewRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-12-01 19:28:10,552 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-12-01 19:28:10,552 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-12-01 19:28:11,377 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer: Tomcat initialized with port(s): 8080 (http)
2024-12-01 19:28:11,385 INFO  [main] org.apache.juli.logging.DirectJDKLog: Initializing ProtocolHandler ["http-nio-8080"]
2024-12-01 19:28:11,386 INFO  [main] org.apache.juli.logging.DirectJDKLog: Starting service [Tomcat]
2024-12-01 19:28:11,386 INFO  [main] org.apache.juli.logging.DirectJDKLog: Starting Servlet engine: [Apache Tomcat/10.1.8]
2024-12-01 19:28:11,482 INFO  [main] org.apache.juli.logging.DirectJDKLog: Initializing Spring embedded WebApplicationContext
2024-12-01 19:28:11,483 INFO  [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 2132 ms
2024-12-01 19:28:11,814 DEBUG [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING}]
2024-12-01 19:28:11,828 INFO  [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.9.1"}, "os": {"type": "Linux", "name": "Linux", "architecture": "amd64", "version": "6.8.0-49-generic"}, "platform": "Java/Oracle Corporation/23+37-2369"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@7fc1fd31], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@75a9cc24, com.mongodb.Jep395RecordCodecProvider@4449a60b]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@da5d5e1], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-12-01 19:28:11,846 DEBUG [cluster-rtt-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Opened connection [connectionId{localValue:1, serverValue:102}] to localhost:27017
2024-12-01 19:28:11,846 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Opened connection [connectionId{localValue:2, serverValue:103}] to localhost:27017
2024-12-01 19:28:11,846 INFO  [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=16624927}
2024-12-01 19:28:11,847 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Marking the connection pool for ServerId{clusterId=ClusterId{value='674c6b73301c141eae702ded', description='null'}, address=localhost:27017} as 'ready'
2024-12-01 19:28:11,848 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 19:28:11,849 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=16.6 ms, state=CONNECTED}]
2024-12-01 19:28:11,849 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:28:12,242 DEBUG [main] org.springframework.web.filter.GenericFilterBean: Filter 'jwtAuthenticationFilter' configured for use
2024-12-01 19:28:12,243 DEBUG [main] org.springframework.web.filter.GenericFilterBean: Filter 'webMvcObservationFilter' configured for use
2024-12-01 19:28:12,243 DEBUG [main] org.springframework.web.filter.GenericFilterBean: Filter 'requestTracingFilter' configured for use
2024-12-01 19:28:12,243 DEBUG [main] org.springframework.web.filter.GenericFilterBean: Filter 'corsFilter' configured for use
2024-12-01 19:28:12,798 DEBUG [main] org.springframework.core.log.LogAccessor: No retry topic configuration found for topics [test-topic]
2024-12-01 19:28:12,800 DEBUG [main] org.springframework.core.log.LogAccessor: 1 @KafkaListener methods processed on bean 'kafkaConsumerService': {public void net.engineeringdigest.ecommerce.service.KafkaConsumerService.listen(java.lang.String)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", containerFactory="", beanRef="__listener", contentTypeConverter="", topics={"test-topic"}, groupId="ecommerce-group", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", id="", properties={}, info="")]}
2024-12-01 19:28:13,302 DEBUG [main] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping: 30 mappings in 'requestMappingHandlerMapping'
2024-12-01 19:28:13,373 DEBUG [main] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping: Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2024-12-01 19:28:13,613 INFO  [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver: Exposing 3 endpoint(s) beneath base path '/actuator'
2024-12-01 19:28:13,724 INFO  [main] org.springframework.security.web.DefaultSecurityFilterChain: Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7a1878d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2b625e82, org.springframework.security.web.context.SecurityContextHolderFilter@752e4223, org.springframework.security.web.header.HeaderWriterFilter@15ca7322, org.springframework.web.filter.CorsFilter@22657db1, org.springframework.security.web.authentication.logout.LogoutFilter@6dc5e857, net.engineeringdigest.ecommerce.security.JwtAuthenticationFilter@6d842877, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@136690b1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@39007725, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@58b30e3e, org.springframework.security.web.session.SessionManagementFilter@41092c8, org.springframework.security.web.access.ExceptionTranslationFilter@20cf3ab3, org.springframework.security.web.access.intercept.AuthorizationFilter@610d0067]
2024-12-01 19:28:13,944 DEBUG [main] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-12-01 19:28:14,006 DEBUG [main] org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver: ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2024-12-01 19:28:14,778 INFO  [main] org.apache.kafka.common.config.AbstractConfig: AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-12-01 19:28:14,979 INFO  [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka version: 3.4.1
2024-12-01 19:28:14,979 INFO  [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka commitId: 8a516edc2755df89
2024-12-01 19:28:14,980 INFO  [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka startTimeMs: 1733061494976
2024-12-01 19:28:15,418 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.utils.AppInfoParser: App info kafka.admin.client for adminclient-1 unregistered
2024-12-01 19:28:15,424 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics: Metrics scheduler closed
2024-12-01 19:28:15,425 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-12-01 19:28:15,425 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics: Metrics reporters closed
2024-12-01 19:28:15,431 INFO  [main] org.apache.juli.logging.DirectJDKLog: Starting ProtocolHandler ["http-nio-8080"]
2024-12-01 19:28:15,446 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer: Tomcat started on port(s): 8080 (http) with context path ''
2024-12-01 19:28:15,485 INFO  [main] org.apache.kafka.common.config.AbstractConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-ecommerce-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = ecommerce-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-12-01 19:28:15,545 INFO  [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka version: 3.4.1
2024-12-01 19:28:15,547 INFO  [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka commitId: 8a516edc2755df89
2024-12-01 19:28:15,550 INFO  [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka startTimeMs: 1733061495545
2024-12-01 19:28:15,554 INFO  [main] org.apache.kafka.clients.consumer.KafkaConsumer: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Subscribed to topic(s): test-topic
2024-12-01 19:28:15,578 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:28:15,606 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Resetting the last seen epoch of partition test-topic-0 to 0 since the associated topicId changed from null to R6Tissc8Tx-8faE-YmmVlA
2024-12-01 19:28:15,608 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Resetting the last seen epoch of partition test-topic-1 to 0 since the associated topicId changed from null to R6Tissc8Tx-8faE-YmmVlA
2024-12-01 19:28:15,609 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Resetting the last seen epoch of partition test-topic-2 to 0 since the associated topicId changed from null to R6Tissc8Tx-8faE-YmmVlA
2024-12-01 19:28:15,611 INFO  [main] org.springframework.boot.StartupInfoLogger: Started EcommerceApplication in 7.157 seconds (process running for 7.71)
2024-12-01 19:28:15,611 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Cluster ID: -NsTbwmJS6S4DPEa3UlZLw
2024-12-01 19:28:15,614 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$FindCoordinatorResponseHandler: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Discovered group coordinator localhost:9092 (id: 2147482646 rack: null)
2024-12-01 19:28:15,617 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] (Re-)joining group
2024-12-01 19:28:15,637 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Request joining group due to: need to re-join with the given member-id: consumer-ecommerce-group-1-ab12d78a-edf8-4b46-8810-0cf755897c06
2024-12-01 19:28:15,638 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-12-01 19:28:15,639 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] (Re-)joining group
2024-12-01 19:28:15,648 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$JoinGroupResponseHandler: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Successfully joined group with generation Generation{generationId=25, memberId='consumer-ecommerce-group-1-ab12d78a-edf8-4b46-8810-0cf755897c06', protocol='range'}
2024-12-01 19:28:15,650 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Finished assignment for group at generation 25: {consumer-ecommerce-group-1-ab12d78a-edf8-4b46-8810-0cf755897c06=Assignment(partitions=[test-topic-0, test-topic-1, test-topic-2])}
2024-12-01 19:28:15,658 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$SyncGroupResponseHandler: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Successfully synced group in generation Generation{generationId=25, memberId='consumer-ecommerce-group-1-ab12d78a-edf8-4b46-8810-0cf755897c06', protocol='range'}
2024-12-01 19:28:15,659 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Notifying assignor about the new Assignment(partitions=[test-topic-0, test-topic-1, test-topic-2])
2024-12-01 19:28:15,662 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Adding newly assigned partitions: test-topic-0, test-topic-1, test-topic-2
2024-12-01 19:28:15,669 DEBUG [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Opened connection [connectionId{localValue:3, serverValue:104}] to localhost:27017
2024-12-01 19:28:15,671 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator$OffsetFetchResponseHandler: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Found no committed offset for partition test-topic-2
2024-12-01 19:28:15,672 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator$OffsetFetchResponseHandler: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Found no committed offset for partition test-topic-1
2024-12-01 19:28:15,674 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Setting offset for partition test-topic-0 to the committed offset FetchPosition{offset=1, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1001 rack: null)], epoch=0}}
2024-12-01 19:28:15,688 DEBUG [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "ping" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 104 to localhost:27017. The request ID is 5. Command: {"ping": 1, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "nQ/O1cjsR3CQosVDDWv4AQ==", "subType": "04"}}}}
2024-12-01 19:28:15,689 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Resetting offset for partition test-topic-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1001 rack: null)], epoch=0}}.
2024-12-01 19:28:15,689 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Resetting offset for partition test-topic-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1001 rack: null)], epoch=0}}.
2024-12-01 19:28:15,690 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: ecommerce-group: partitions assigned: [test-topic-0, test-topic-1, test-topic-2]
2024-12-01 19:28:15,697 DEBUG [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "ping" succeeded in 13.67 ms using a connection with driver-generated ID 3 and server-generated ID 104 to localhost:27017. The request ID is 5. Command reply: {"ok": 1.0}
2024-12-01 19:28:15,700 DEBUG [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "serverStatus" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 104 to localhost:27017. The request ID is 6. Command: {"serverStatus": 1, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "nQ/O1cjsR3CQosVDDWv4AQ==", "subType": "04"}}}}
2024-12-01 19:28:15,721 DEBUG [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "serverStatus" succeeded in 4.42 ms using a connection with driver-generated ID 3 and server-generated ID 104 to localhost:27017. The request ID is 6. Command reply: {"host": "mohitkalaptop", "version": "8.0.3", "process": "mongod", "service": ["shard"], "pid": 179678, "uptime": 14512.0, "uptimeMillis": 14511591, "uptimeEstimate": 14511, "localTime": {"$date": "2024-12-01T13:58:15.701Z"}, "asserts": {"regular": 0, "warning": 0, "msg": 0, "user": 112, "tripwire": 0, "rollovers": 0}, "batchedDeletes": {"batches": 3, "docs": 5, "stagedSizeBytes": 1215, "timeInBatchMillis": 0, "refetchesDueToYield": 0}, "catalogStats": {"collections": 2, "capped": 0, "clustered": 0, "timeseries": 0, "views": 0, "internalCollections": 3, "internalViews": 0, "csfle": 0, "queryableEncryption": 0}, "changeStreamPreImages": {"purgingJob": {"totalPass": 0, "docsDeleted": 0, "bytesDeleted": 0, "scannedCollections": 0, "scannedInternalCollections": 0, "maxStartWallTimeMillis": 0, "timeElapsedMillis": 0}}, "collectionCatalog": {"numScansDueToMissingMapping": 0}, "connections": {"current": 3, "available": 51197, "totalCreated": 104, "rejected": 0, "active": 2, "threaded": 3, "ex ...
2024-12-01 19:28:15,739 DEBUG [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "listCollections" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 104 to localhost:27017. The request ID is 7. Command: {"listCollections": 1, "cursor": {}, "nameOnly": true, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "nQ/O1cjsR3CQosVDDWv4AQ==", "subType": "04"}}}}
2024-12-01 19:28:15,743 DEBUG [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "listCollections" succeeded in 2.41 ms using a connection with driver-generated ID 3 and server-generated ID 104 to localhost:27017. The request ID is 7. Command reply: {"cursor": {"id": 0, "ns": "ecommerce.$cmd.listCollections", "firstBatch": [{"name": "users", "type": "collection"}, {"name": "products", "type": "collection"}]}, "ok": 1.0}
2024-12-01 19:28:15,749 DEBUG [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Received batch of 2 documents with cursorId 0 from server localhost:27017
2024-12-01 19:28:20,582 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:28:20,582 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:28:21,864 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=13.6 ms, state=CONNECTED}]
2024-12-01 19:28:21,864 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:28:25,583 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:28:25,584 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:28:30,585 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:28:30,586 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:28:31,871 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=11.3 ms, state=CONNECTED}]
2024-12-01 19:28:31,871 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:28:35,587 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:28:35,588 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:28:40,589 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:28:40,589 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:28:41,881 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=9.2 ms, state=CONNECTED}]
2024-12-01 19:28:41,882 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:28:45,590 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:28:45,591 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:28:50,591 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:28:50,592 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:28:51,889 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=7.6 ms, state=CONNECTED}]
2024-12-01 19:28:51,889 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:28:55,594 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:28:55,594 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:29:00,595 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:29:00,595 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:29:01,899 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=6.2 ms, state=CONNECTED}]
2024-12-01 19:29:01,899 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:29:05,596 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:29:05,597 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:29:10,597 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:29:10,598 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:29:11,848 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 19:29:11,908 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=5.1 ms, state=CONNECTED}]
2024-12-01 19:29:11,908 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:29:15,599 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:29:15,599 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:29:20,600 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:29:20,600 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:29:21,917 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=4.2 ms, state=CONNECTED}]
2024-12-01 19:29:21,917 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:29:25,601 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:29:25,601 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:29:30,601 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:29:30,602 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:29:31,927 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=3.6 ms, state=CONNECTED}]
2024-12-01 19:29:31,927 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:29:35,603 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:29:35,603 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:29:40,604 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:29:40,604 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:29:41,936 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=3.0 ms, state=CONNECTED}]
2024-12-01 19:29:41,936 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:29:45,604 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:29:45,605 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:29:50,606 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:29:50,606 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:29:51,945 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=2.5 ms, state=CONNECTED}]
2024-12-01 19:29:51,946 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:29:55,606 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:29:55,606 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:30:00,606 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:30:00,607 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:30:01,955 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=2.1 ms, state=CONNECTED}]
2024-12-01 19:30:01,955 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:30:05,607 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:30:05,607 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:30:10,608 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:30:10,609 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:30:11,847 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 19:30:11,965 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.9 ms, state=CONNECTED}]
2024-12-01 19:30:11,965 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:30:15,609 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:30:15,610 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:30:20,610 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:30:20,610 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:30:21,976 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.7 ms, state=CONNECTED}]
2024-12-01 19:30:21,977 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:30:25,610 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:30:25,611 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:30:30,611 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:30:30,612 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:30:31,985 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2024-12-01 19:30:31,986 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:30:35,612 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:30:35,613 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:30:40,613 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:30:40,613 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:30:41,995 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2024-12-01 19:30:41,995 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:30:45,615 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:30:45,615 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:30:50,616 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:30:50,616 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:30:52,005 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2024-12-01 19:30:52,005 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:30:55,617 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:30:55,617 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:31:00,618 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:31:00,618 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:31:02,015 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2024-12-01 19:31:02,016 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:31:05,618 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:31:05,619 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:31:10,620 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:31:10,620 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:31:11,848 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 19:31:12,025 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2024-12-01 19:31:12,025 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:31:15,621 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:31:15,622 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:31:20,622 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:31:20,623 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:31:22,035 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2024-12-01 19:31:22,035 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:31:25,624 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:31:25,624 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:31:30,624 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:31:30,625 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:31:32,045 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2024-12-01 19:31:32,046 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:31:35,625 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:31:35,625 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:31:40,626 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:31:40,626 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:31:42,055 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 19:31:42,055 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:31:45,628 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:31:45,628 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:31:46,658 INFO  [http-nio-8080-exec-1] org.apache.juli.logging.DirectJDKLog: Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-12-01 19:31:46,658 INFO  [http-nio-8080-exec-1] org.springframework.web.servlet.FrameworkServlet: Initializing Servlet 'dispatcherServlet'
2024-12-01 19:31:46,659 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.DispatcherServlet: Detected StandardServletMultipartResolver
2024-12-01 19:31:46,659 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.DispatcherServlet: Detected AcceptHeaderLocaleResolver
2024-12-01 19:31:46,659 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.DispatcherServlet: Detected FixedThemeResolver
2024-12-01 19:31:46,660 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.DispatcherServlet: Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@1c92ff30
2024-12-01 19:31:46,660 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.DispatcherServlet: Detected org.springframework.web.servlet.support.SessionFlashMapManager@29c8eb0b
2024-12-01 19:31:46,661 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.FrameworkServlet: enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-12-01 19:31:46,661 INFO  [http-nio-8080-exec-1] org.springframework.web.servlet.FrameworkServlet: Completed initialization in 2 ms
2024-12-01 19:31:46,663 INFO  [http-nio-8080-exec-1] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Incoming request POST /auth/login from 0:0:0:0:0:0:0:1
2024-12-01 19:31:46,672 DEBUG [http-nio-8080-exec-1] org.springframework.security.web.FilterChainProxy: Securing POST /auth/login
2024-12-01 19:31:46,682 DEBUG [http-nio-8080-exec-1] org.springframework.security.web.authentication.AnonymousAuthenticationFilter: Set SecurityContextHolder to anonymous SecurityContext
2024-12-01 19:31:46,686 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#login(LoginRequest)
2024-12-01 19:31:46,687 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#login(LoginRequest)
2024-12-01 19:31:46,691 DEBUG [http-nio-8080-exec-1] org.springframework.security.web.FilterChainProxy: Secured POST /auth/login
2024-12-01 19:31:46,693 DEBUG [http-nio-8080-exec-1] org.springframework.core.log.LogFormatUtils: POST "/auth/login", parameters={}
2024-12-01 19:31:46,695 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#login(LoginRequest)
2024-12-01 19:31:46,756 DEBUG [http-nio-8080-exec-1] org.springframework.core.log.LogFormatUtils: Read "application/json;charset=UTF-8" to [LoginRequest(username=admin, password=admin)]
2024-12-01 19:31:46,766 INFO  [http-nio-8080-exec-1] net.engineeringdigest.ecommerce.controller.AuthController: Received login request for user: admin
2024-12-01 19:31:46,902 DEBUG [http-nio-8080-exec-1] org.springframework.data.mongodb.repository.query.MongoQueryCreator: Created query Query: { "username" : "admin"}, Fields: {}, Sort: {}
2024-12-01 19:31:46,916 DEBUG [http-nio-8080-exec-1] org.springframework.data.mongodb.core.MongoTemplate: find using query: { "username" : "admin"} fields: Document{{}} for class: class net.engineeringdigest.ecommerce.entity.User in collection: users
2024-12-01 19:31:46,931 DEBUG [http-nio-8080-exec-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 104 to localhost:27017. The request ID is 29. Command: {"find": "users", "filter": {"username": "admin"}, "limit": 2, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "nQ/O1cjsR3CQosVDDWv4AQ==", "subType": "04"}}}}
2024-12-01 19:31:46,933 DEBUG [http-nio-8080-exec-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" succeeded in 2.07 ms using a connection with driver-generated ID 3 and server-generated ID 104 to localhost:27017. The request ID is 29. Command reply: {"cursor": {"firstBatch": [], "id": 0, "ns": "ecommerce.users"}, "ok": 1.0}
2024-12-01 19:31:46,934 DEBUG [http-nio-8080-exec-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Received batch of 0 documents with cursorId 0 from server localhost:27017
2024-12-01 19:31:47,038 DEBUG [http-nio-8080-exec-1] org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider: Failed to find user 'admin'
2024-12-01 19:31:47,039 ERROR [http-nio-8080-exec-1] net.engineeringdigest.ecommerce.controller.AuthController: Authentication failed for user: admin
org.springframework.security.authentication.BadCredentialsException: Bad credentials
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:141)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182)
	at net.engineeringdigest.ecommerce.controller.AuthController.login(AuthController.java:59)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at net.engineeringdigest.ecommerce.aspect.LoggingAspect.logApiCall(LoggingAspect.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:173)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:702)
	at net.engineeringdigest.ecommerce.controller.AuthController$$SpringCGLIB$$0.login(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:477)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:338)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:80)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:126)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at net.engineeringdigest.ecommerce.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:32)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:321)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:222)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at net.engineeringdigest.ecommerce.filter.RequestTracingFilter.doFilterInternal(RequestTracingFilter.java:39)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2024-12-01 19:31:47,043 INFO  [http-nio-8080-exec-1] net.engineeringdigest.ecommerce.aspect.LoggingAspect: Method: login completed in 278ms
2024-12-01 19:31:47,050 INFO  [http-nio-8080-exec-1] org.apache.kafka.common.config.AbstractConfig: ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 3
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer

2024-12-01 19:31:47,060 INFO  [http-nio-8080-exec-1] org.apache.kafka.clients.producer.KafkaProducer: [Producer clientId=producer-1] Instantiated an idempotent producer.
2024-12-01 19:31:47,072 INFO  [http-nio-8080-exec-1] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka version: 3.4.1
2024-12-01 19:31:47,073 INFO  [http-nio-8080-exec-1] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka commitId: 8a516edc2755df89
2024-12-01 19:31:47,077 INFO  [http-nio-8080-exec-1] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka startTimeMs: 1733061707072
2024-12-01 19:31:47,081 DEBUG [http-nio-8080-exec-1] org.springframework.core.log.LogAccessor: Created new Producer: CloseSafeProducer [delegate=org.apache.kafka.clients.producer.KafkaProducer@5a34a937]
2024-12-01 19:31:47,084 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata: [Producer clientId=producer-1] Cluster ID: -NsTbwmJS6S4DPEa3UlZLw
2024-12-01 19:31:47,085 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.producer.internals.TransactionManager: [Producer clientId=producer-1] ProducerId set to 1007 with epoch 0
2024-12-01 19:31:47,091 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata: [Producer clientId=producer-1] Resetting the last seen epoch of partition audit-logs-0 to 0 since the associated topicId changed from null to MM4QZNYlQZ6B9YYZSXeWDQ
2024-12-01 19:31:47,092 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata: [Producer clientId=producer-1] Resetting the last seen epoch of partition audit-logs-2 to 0 since the associated topicId changed from null to MM4QZNYlQZ6B9YYZSXeWDQ
2024-12-01 19:31:47,092 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata: [Producer clientId=producer-1] Resetting the last seen epoch of partition audit-logs-1 to 0 since the associated topicId changed from null to MM4QZNYlQZ6B9YYZSXeWDQ
2024-12-01 19:31:47,150 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor: Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-12-01 19:31:47,152 DEBUG [http-nio-8080-exec-1] org.springframework.core.log.LogFormatUtils: Writing [ErrorResponse(status=401, message=Authentication failed, details=Bad credentials)]
2024-12-01 19:31:47,159 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.FrameworkServlet: Completed 401 UNAUTHORIZED
2024-12-01 19:31:47,162 INFO  [http-nio-8080-exec-1] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Request completed in 499ms with status 401
2024-12-01 19:31:50,628 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:31:50,629 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:31:52,064 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 19:31:52,064 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:31:55,629 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:31:55,629 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:32:00,630 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:32:00,630 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:32:02,073 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 19:32:02,073 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:32:05,632 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:32:05,632 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:32:10,634 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:32:10,634 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:32:11,847 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 19:32:12,082 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 19:32:12,083 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:32:15,634 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:32:15,635 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:32:20,636 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:32:20,636 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:32:22,092 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 19:32:22,092 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:32:25,636 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:32:25,637 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:32:30,638 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:32:30,638 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:32:32,103 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 19:32:32,103 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:32:35,639 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:32:35,639 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:32:40,640 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:32:40,640 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:32:42,112 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 19:32:42,112 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:32:45,642 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:32:45,642 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:32:50,642 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:32:50,643 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:32:52,122 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 19:32:52,122 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:32:55,644 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:32:55,644 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:33:00,645 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:33:00,645 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:33:02,131 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 19:33:02,132 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:33:03,830 INFO  [http-nio-8080-exec-3] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Incoming request POST /auth/register from 0:0:0:0:0:0:0:1
2024-12-01 19:33:03,831 DEBUG [http-nio-8080-exec-3] org.springframework.security.web.FilterChainProxy: Securing POST /auth/register
2024-12-01 19:33:03,832 DEBUG [http-nio-8080-exec-3] org.springframework.security.web.authentication.AnonymousAuthenticationFilter: Set SecurityContextHolder to anonymous SecurityContext
2024-12-01 19:33:03,834 DEBUG [http-nio-8080-exec-3] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2024-12-01 19:33:03,835 DEBUG [http-nio-8080-exec-3] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2024-12-01 19:33:03,836 DEBUG [http-nio-8080-exec-3] org.springframework.security.web.authentication.Http403ForbiddenEntryPoint: Pre-authenticated entry point called. Rejecting access
2024-12-01 19:33:03,837 INFO  [http-nio-8080-exec-3] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Request completed in 7ms with status 403
2024-12-01 19:33:03,840 DEBUG [http-nio-8080-exec-3] org.springframework.security.web.FilterChainProxy: Securing POST /error
2024-12-01 19:33:03,841 DEBUG [http-nio-8080-exec-3] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2024-12-01 19:33:03,842 DEBUG [http-nio-8080-exec-3] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2024-12-01 19:33:03,842 DEBUG [http-nio-8080-exec-3] org.springframework.security.web.authentication.AnonymousAuthenticationFilter: Set SecurityContextHolder to anonymous SecurityContext
2024-12-01 19:33:03,842 DEBUG [http-nio-8080-exec-3] org.springframework.security.web.authentication.Http403ForbiddenEntryPoint: Pre-authenticated entry point called. Rejecting access
2024-12-01 19:33:05,645 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:33:05,645 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:33:10,645 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:33:10,645 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:33:11,847 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 19:33:12,143 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 19:33:12,143 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:33:14,300 INFO  [http-nio-8080-exec-5] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Incoming request POST /auth/login from 0:0:0:0:0:0:0:1
2024-12-01 19:33:14,301 DEBUG [http-nio-8080-exec-5] org.springframework.security.web.FilterChainProxy: Securing POST /auth/login
2024-12-01 19:33:14,301 DEBUG [http-nio-8080-exec-5] org.springframework.security.web.authentication.AnonymousAuthenticationFilter: Set SecurityContextHolder to anonymous SecurityContext
2024-12-01 19:33:14,302 DEBUG [http-nio-8080-exec-5] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#login(LoginRequest)
2024-12-01 19:33:14,302 DEBUG [http-nio-8080-exec-5] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#login(LoginRequest)
2024-12-01 19:33:14,303 DEBUG [http-nio-8080-exec-5] org.springframework.security.web.FilterChainProxy: Secured POST /auth/login
2024-12-01 19:33:14,303 DEBUG [http-nio-8080-exec-5] org.springframework.core.log.LogFormatUtils: POST "/auth/login", parameters={}
2024-12-01 19:33:14,303 DEBUG [http-nio-8080-exec-5] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#login(LoginRequest)
2024-12-01 19:33:14,304 DEBUG [http-nio-8080-exec-5] org.springframework.core.log.LogFormatUtils: Read "application/json;charset=UTF-8" to [LoginRequest(username=testuser, password=testpass123)]
2024-12-01 19:33:14,304 INFO  [http-nio-8080-exec-5] net.engineeringdigest.ecommerce.controller.AuthController: Received login request for user: testuser
2024-12-01 19:33:14,304 DEBUG [http-nio-8080-exec-5] org.springframework.data.mongodb.repository.query.MongoQueryCreator: Created query Query: { "username" : "testuser"}, Fields: {}, Sort: {}
2024-12-01 19:33:14,305 DEBUG [http-nio-8080-exec-5] org.springframework.data.mongodb.core.MongoTemplate: find using query: { "username" : "testuser"} fields: Document{{}} for class: class net.engineeringdigest.ecommerce.entity.User in collection: users
2024-12-01 19:33:14,306 DEBUG [http-nio-8080-exec-5] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 104 to localhost:27017. The request ID is 39. Command: {"find": "users", "filter": {"username": "testuser"}, "limit": 2, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "nQ/O1cjsR3CQosVDDWv4AQ==", "subType": "04"}}}}
2024-12-01 19:33:14,307 DEBUG [http-nio-8080-exec-5] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" succeeded in 1.22 ms using a connection with driver-generated ID 3 and server-generated ID 104 to localhost:27017. The request ID is 39. Command reply: {"cursor": {"firstBatch": [{"_id": {"$oid": "674c4f9917963270732cce15"}, "username": "testuser", "email": "test@example.com", "password": "$2a$10$LFI34bMAMIJ.dS28bsS5B.7Iyo2wJPKvPs6s5huK4rZ2J6P1XJpEC", "firstName": "Test", "lastName": "User", "roles": ["ROLE_USER"], "accountNonExpired": true, "accountNonLocked": true, "credentialsNonExpired": true, "enabled": true, "_class": "net.engineeringdigest.ecommerce.entity.User"}], "id": 0, "ns": "ecommerce.users"}, "ok": 1.0}
2024-12-01 19:33:14,308 DEBUG [http-nio-8080-exec-5] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Received batch of 1 documents with cursorId 0 from server localhost:27017
2024-12-01 19:33:14,413 DEBUG [http-nio-8080-exec-5] org.springframework.security.authentication.dao.DaoAuthenticationProvider: Failed to authenticate since password does not match stored value
2024-12-01 19:33:14,413 ERROR [http-nio-8080-exec-5] net.engineeringdigest.ecommerce.controller.AuthController: Authentication failed for user: testuser
org.springframework.security.authentication.BadCredentialsException: Bad credentials
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.additionalAuthenticationChecks(DaoAuthenticationProvider.java:89)
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:147)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182)
	at net.engineeringdigest.ecommerce.controller.AuthController.login(AuthController.java:59)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at net.engineeringdigest.ecommerce.aspect.LoggingAspect.logApiCall(LoggingAspect.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:173)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:702)
	at net.engineeringdigest.ecommerce.controller.AuthController$$SpringCGLIB$$0.login(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:477)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:338)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:80)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:126)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at net.engineeringdigest.ecommerce.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:32)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:321)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:222)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at net.engineeringdigest.ecommerce.filter.RequestTracingFilter.doFilterInternal(RequestTracingFilter.java:39)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2024-12-01 19:33:14,414 INFO  [http-nio-8080-exec-5] net.engineeringdigest.ecommerce.aspect.LoggingAspect: Method: login completed in 110ms
2024-12-01 19:33:14,416 DEBUG [http-nio-8080-exec-5] org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor: Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-12-01 19:33:14,416 DEBUG [http-nio-8080-exec-5] org.springframework.core.log.LogFormatUtils: Writing [ErrorResponse(status=401, message=Authentication failed, details=Bad credentials)]
2024-12-01 19:33:14,418 DEBUG [http-nio-8080-exec-5] org.springframework.web.servlet.FrameworkServlet: Completed 401 UNAUTHORIZED
2024-12-01 19:33:14,420 INFO  [http-nio-8080-exec-5] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Request completed in 120ms with status 401
2024-12-01 19:33:15,645 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:33:15,645 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:33:20,645 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:33:20,646 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:33:22,154 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 19:33:22,156 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:33:25,646 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:33:25,647 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:33:30,647 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:33:30,647 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:33:32,161 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 19:33:32,161 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:33:35,647 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:33:35,647 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:33:40,649 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:33:40,649 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:33:42,170 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 19:33:42,171 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:33:45,649 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:33:45,649 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:33:50,649 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:33:50,650 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:33:52,181 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 19:33:52,181 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:33:55,650 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:33:55,651 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:34:00,651 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:34:00,651 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:34:02,190 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 19:34:02,191 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:34:05,652 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:34:05,653 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:34:10,653 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:34:10,654 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:34:11,847 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 19:34:12,200 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 19:34:12,200 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:34:15,654 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:34:15,654 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:34:20,656 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:34:20,656 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:34:22,210 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 19:34:22,210 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:34:25,657 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:34:25,657 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:34:30,658 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:34:30,658 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:34:32,219 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 19:34:32,219 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:34:35,660 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:34:35,660 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:34:38,774 INFO  [http-nio-8080-exec-7] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Incoming request POST /auth/signup from 0:0:0:0:0:0:0:1
2024-12-01 19:34:38,775 DEBUG [http-nio-8080-exec-7] org.springframework.security.web.FilterChainProxy: Securing POST /auth/signup
2024-12-01 19:34:38,776 DEBUG [http-nio-8080-exec-7] org.springframework.security.web.authentication.AnonymousAuthenticationFilter: Set SecurityContextHolder to anonymous SecurityContext
2024-12-01 19:34:38,776 DEBUG [http-nio-8080-exec-7] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#signup(SignupRequest)
2024-12-01 19:34:38,777 DEBUG [http-nio-8080-exec-7] org.springframework.security.web.FilterChainProxy: Secured POST /auth/signup
2024-12-01 19:34:38,777 DEBUG [http-nio-8080-exec-7] org.springframework.core.log.LogFormatUtils: POST "/auth/signup", parameters={}
2024-12-01 19:34:38,778 DEBUG [http-nio-8080-exec-7] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#signup(SignupRequest)
2024-12-01 19:34:38,782 DEBUG [http-nio-8080-exec-7] org.springframework.core.log.LogFormatUtils: Read "application/json;charset=UTF-8" to [SignupRequest(username=testuser, email=test@example.com, password=testpass123, firstName=Test, lastN (truncated)...]
2024-12-01 19:34:38,783 INFO  [http-nio-8080-exec-7] net.engineeringdigest.ecommerce.controller.AuthController: Received signup request for user: testuser
2024-12-01 19:34:38,783 DEBUG [http-nio-8080-exec-7] net.engineeringdigest.ecommerce.service.UserService: Creating new user with username: testuser
2024-12-01 19:34:38,783 DEBUG [http-nio-8080-exec-7] org.springframework.data.mongodb.repository.query.MongoQueryCreator: Created query Query: { "username" : "testuser"}, Fields: {}, Sort: {}
2024-12-01 19:34:38,784 DEBUG [http-nio-8080-exec-7] org.springframework.data.mongodb.core.MongoTemplate: find using query: { "username" : "testuser"} fields: Document{{}} for class: class net.engineeringdigest.ecommerce.entity.User in collection: users
2024-12-01 19:34:38,785 DEBUG [http-nio-8080-exec-7] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 104 to localhost:27017. The request ID is 48. Command: {"find": "users", "filter": {"username": "testuser"}, "limit": 2, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "nQ/O1cjsR3CQosVDDWv4AQ==", "subType": "04"}}}}
2024-12-01 19:34:38,786 DEBUG [http-nio-8080-exec-7] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" succeeded in 0.85 ms using a connection with driver-generated ID 3 and server-generated ID 104 to localhost:27017. The request ID is 48. Command reply: {"cursor": {"firstBatch": [{"_id": {"$oid": "674c4f9917963270732cce15"}, "username": "testuser", "email": "test@example.com", "password": "$2a$10$LFI34bMAMIJ.dS28bsS5B.7Iyo2wJPKvPs6s5huK4rZ2J6P1XJpEC", "firstName": "Test", "lastName": "User", "roles": ["ROLE_USER"], "accountNonExpired": true, "accountNonLocked": true, "credentialsNonExpired": true, "enabled": true, "_class": "net.engineeringdigest.ecommerce.entity.User"}], "id": 0, "ns": "ecommerce.users"}, "ok": 1.0}
2024-12-01 19:34:38,786 DEBUG [http-nio-8080-exec-7] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Received batch of 1 documents with cursorId 0 from server localhost:27017
2024-12-01 19:34:38,787 ERROR [http-nio-8080-exec-7] net.engineeringdigest.ecommerce.service.UserService: Username already exists: testuser
2024-12-01 19:34:38,787 ERROR [http-nio-8080-exec-7] net.engineeringdigest.ecommerce.controller.AuthController: Failed to create user: testuser
java.lang.RuntimeException: Username already exists
	at net.engineeringdigest.ecommerce.service.UserService.createUser(UserService.java:39)
	at net.engineeringdigest.ecommerce.controller.AuthController.signup(AuthController.java:40)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at net.engineeringdigest.ecommerce.aspect.LoggingAspect.logApiCall(LoggingAspect.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:173)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:702)
	at net.engineeringdigest.ecommerce.controller.AuthController$$SpringCGLIB$$0.signup(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:477)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:338)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:80)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:126)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at net.engineeringdigest.ecommerce.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:32)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:321)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:222)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at net.engineeringdigest.ecommerce.filter.RequestTracingFilter.doFilterInternal(RequestTracingFilter.java:39)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2024-12-01 19:34:38,788 INFO  [http-nio-8080-exec-7] net.engineeringdigest.ecommerce.aspect.LoggingAspect: Method: signup completed in 5ms
2024-12-01 19:34:38,789 DEBUG [http-nio-8080-exec-7] org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor: Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-12-01 19:34:38,790 DEBUG [http-nio-8080-exec-7] org.springframework.core.log.LogFormatUtils: Writing [ErrorResponse(status=400, message=Failed to create user, details=Username already exists)]
2024-12-01 19:34:38,791 DEBUG [http-nio-8080-exec-7] org.springframework.web.servlet.FrameworkServlet: Completed 400 BAD_REQUEST
2024-12-01 19:34:38,792 INFO  [http-nio-8080-exec-7] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Request completed in 18ms with status 400
2024-12-01 19:34:40,660 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:34:40,661 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:34:42,229 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 19:34:42,229 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:34:45,662 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:34:45,662 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:34:50,047 INFO  [http-nio-8080-exec-8] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Incoming request POST /auth/signup from 0:0:0:0:0:0:0:1
2024-12-01 19:34:50,047 DEBUG [http-nio-8080-exec-8] org.springframework.security.web.FilterChainProxy: Securing POST /auth/signup
2024-12-01 19:34:50,048 DEBUG [http-nio-8080-exec-8] org.springframework.security.web.authentication.AnonymousAuthenticationFilter: Set SecurityContextHolder to anonymous SecurityContext
2024-12-01 19:34:50,048 DEBUG [http-nio-8080-exec-8] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#signup(SignupRequest)
2024-12-01 19:34:50,048 DEBUG [http-nio-8080-exec-8] org.springframework.security.web.FilterChainProxy: Secured POST /auth/signup
2024-12-01 19:34:50,049 DEBUG [http-nio-8080-exec-8] org.springframework.core.log.LogFormatUtils: POST "/auth/signup", parameters={}
2024-12-01 19:34:50,049 DEBUG [http-nio-8080-exec-8] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#signup(SignupRequest)
2024-12-01 19:34:50,049 DEBUG [http-nio-8080-exec-8] org.springframework.core.log.LogFormatUtils: Read "application/json;charset=UTF-8" to [SignupRequest(username=testuser2, email=test2@example.com, password=testpass123, firstName=Test, las (truncated)...]
2024-12-01 19:34:50,050 INFO  [http-nio-8080-exec-8] net.engineeringdigest.ecommerce.controller.AuthController: Received signup request for user: testuser2
2024-12-01 19:34:50,050 DEBUG [http-nio-8080-exec-8] net.engineeringdigest.ecommerce.service.UserService: Creating new user with username: testuser2
2024-12-01 19:34:50,050 DEBUG [http-nio-8080-exec-8] org.springframework.data.mongodb.repository.query.MongoQueryCreator: Created query Query: { "username" : "testuser2"}, Fields: {}, Sort: {}
2024-12-01 19:34:50,050 DEBUG [http-nio-8080-exec-8] org.springframework.data.mongodb.core.MongoTemplate: find using query: { "username" : "testuser2"} fields: Document{{}} for class: class net.engineeringdigest.ecommerce.entity.User in collection: users
2024-12-01 19:34:50,051 DEBUG [http-nio-8080-exec-8] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 104 to localhost:27017. The request ID is 50. Command: {"find": "users", "filter": {"username": "testuser2"}, "limit": 2, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "nQ/O1cjsR3CQosVDDWv4AQ==", "subType": "04"}}}}
2024-12-01 19:34:50,053 DEBUG [http-nio-8080-exec-8] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" succeeded in 1.47 ms using a connection with driver-generated ID 3 and server-generated ID 104 to localhost:27017. The request ID is 50. Command reply: {"cursor": {"firstBatch": [{"_id": {"$oid": "674c5ea111934d5595cbeccf"}, "username": "testuser2", "email": "test2@example.com", "password": "$2a$10$FnhhkOihDOpZrXzEsY.QTeWOOHG3cvVvIOxfvIQ/Z9Xi6D2F008Gu", "roles": ["ROLE_USER"], "accountNonExpired": true, "accountNonLocked": true, "credentialsNonExpired": true, "enabled": true, "_class": "net.engineeringdigest.ecommerce.entity.User"}], "id": 0, "ns": "ecommerce.users"}, "ok": 1.0}
2024-12-01 19:34:50,053 DEBUG [http-nio-8080-exec-8] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Received batch of 1 documents with cursorId 0 from server localhost:27017
2024-12-01 19:34:50,054 ERROR [http-nio-8080-exec-8] net.engineeringdigest.ecommerce.service.UserService: Username already exists: testuser2
2024-12-01 19:34:50,054 ERROR [http-nio-8080-exec-8] net.engineeringdigest.ecommerce.controller.AuthController: Failed to create user: testuser2
java.lang.RuntimeException: Username already exists
	at net.engineeringdigest.ecommerce.service.UserService.createUser(UserService.java:39)
	at net.engineeringdigest.ecommerce.controller.AuthController.signup(AuthController.java:40)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at net.engineeringdigest.ecommerce.aspect.LoggingAspect.logApiCall(LoggingAspect.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:173)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:702)
	at net.engineeringdigest.ecommerce.controller.AuthController$$SpringCGLIB$$0.signup(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:477)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:338)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:80)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:126)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at net.engineeringdigest.ecommerce.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:32)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:321)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:222)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at net.engineeringdigest.ecommerce.filter.RequestTracingFilter.doFilterInternal(RequestTracingFilter.java:39)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2024-12-01 19:34:50,055 INFO  [http-nio-8080-exec-8] net.engineeringdigest.ecommerce.aspect.LoggingAspect: Method: signup completed in 5ms
2024-12-01 19:34:50,055 DEBUG [http-nio-8080-exec-8] org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor: Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-12-01 19:34:50,056 DEBUG [http-nio-8080-exec-8] org.springframework.core.log.LogFormatUtils: Writing [ErrorResponse(status=400, message=Failed to create user, details=Username already exists)]
2024-12-01 19:34:50,056 DEBUG [http-nio-8080-exec-8] org.springframework.web.servlet.FrameworkServlet: Completed 400 BAD_REQUEST
2024-12-01 19:34:50,057 INFO  [http-nio-8080-exec-8] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Request completed in 10ms with status 400
2024-12-01 19:34:50,662 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:34:50,663 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:34:52,238 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 19:34:52,238 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:34:55,664 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:34:55,664 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:35:00,665 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:35:00,665 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:35:02,249 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2024-12-01 19:35:02,249 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:35:05,665 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:35:05,666 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:35:10,667 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:35:10,667 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:35:11,847 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 19:35:12,258 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2024-12-01 19:35:12,258 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:35:15,667 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:35:15,668 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:35:20,668 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:35:20,669 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:35:22,267 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2024-12-01 19:35:22,267 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:35:25,669 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:35:25,670 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:35:30,670 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:35:30,671 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:35:32,277 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2024-12-01 19:35:32,278 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:35:35,672 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:35:35,672 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:35:40,672 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:35:40,673 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:35:42,287 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2024-12-01 19:35:42,287 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:35:45,673 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:35:45,673 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:35:50,674 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:35:50,675 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:35:52,296 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 19:35:52,297 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:35:55,675 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:35:55,676 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:36:00,677 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:36:00,677 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:36:02,309 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 19:36:02,309 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:36:05,677 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:36:05,678 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:36:10,678 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:36:10,679 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:36:11,847 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 19:36:12,316 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 19:36:12,316 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:36:15,679 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:36:15,680 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:36:19,714 INFO  [background-preinit] org.hibernate.validator.internal.util.Version: HV000001: Hibernate Validator 8.0.0.Final
2024-12-01 19:36:19,753 INFO  [main] org.springframework.boot.StartupInfoLogger: Starting EcommerceApplication using Java 23.0.1 with PID 272650 (/home/mohit/Pictures/ecommerce-projects/ecommerce/target/classes started by mohit in /home/mohit/Pictures/ecommerce-projects/ecommerce)
2024-12-01 19:36:19,753 DEBUG [main] org.springframework.boot.StartupInfoLogger: Running with Spring Boot v3.1.0, Spring v6.0.9
2024-12-01 19:36:19,754 INFO  [main] org.springframework.boot.SpringApplication: The following 1 profile is active: "dev"
2024-12-01 19:36:20,680 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:36:20,680 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:36:20,968 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-12-01 19:36:20,976 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-12-01 19:36:21,045 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.ProductRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-12-01 19:36:21,046 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.ReviewRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-12-01 19:36:21,048 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.UserRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-12-01 19:36:21,048 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 56 ms. Found 0 Elasticsearch repository interfaces.
2024-12-01 19:36:21,054 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-12-01 19:36:21,055 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-12-01 19:36:21,061 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.ProductRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-12-01 19:36:21,062 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.ReviewRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-12-01 19:36:21,062 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.UserRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-12-01 19:36:21,062 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 7 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-12-01 19:36:21,068 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-12-01 19:36:21,069 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-12-01 19:36:21,170 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 100 ms. Found 3 MongoDB repository interfaces.
2024-12-01 19:36:21,202 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-12-01 19:36:21,204 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-12-01 19:36:21,233 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-12-01 19:36:21,235 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.ReviewRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-12-01 19:36:21,235 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-12-01 19:36:21,236 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 17 ms. Found 0 Redis repository interfaces.
2024-12-01 19:36:22,179 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer: Tomcat initialized with port(s): 8080 (http)
2024-12-01 19:36:22,188 INFO  [main] org.apache.juli.logging.DirectJDKLog: Initializing ProtocolHandler ["http-nio-8080"]
2024-12-01 19:36:22,189 INFO  [main] org.apache.juli.logging.DirectJDKLog: Starting service [Tomcat]
2024-12-01 19:36:22,189 INFO  [main] org.apache.juli.logging.DirectJDKLog: Starting Servlet engine: [Apache Tomcat/10.1.8]
2024-12-01 19:36:22,273 INFO  [main] org.apache.juli.logging.DirectJDKLog: Initializing Spring embedded WebApplicationContext
2024-12-01 19:36:22,275 INFO  [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 2438 ms
2024-12-01 19:36:22,325 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 19:36:22,326 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:36:22,621 DEBUG [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING}]
2024-12-01 19:36:22,635 INFO  [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.9.1"}, "os": {"type": "Linux", "name": "Linux", "architecture": "amd64", "version": "6.8.0-49-generic"}, "platform": "Java/Oracle Corporation/23.0.1+11-39"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@49e62b17], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@288409f0, com.mongodb.Jep395RecordCodecProvider@7d685f4e]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@61eab26b], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-12-01 19:36:22,662 DEBUG [cluster-rtt-ClusterId{value='674c6d5eff22b63784977c83', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Opened connection [connectionId{localValue:2, serverValue:105}] to localhost:27017
2024-12-01 19:36:22,662 DEBUG [cluster-ClusterId{value='674c6d5eff22b63784977c83', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Opened connection [connectionId{localValue:1, serverValue:106}] to localhost:27017
2024-12-01 19:36:22,663 INFO  [cluster-ClusterId{value='674c6d5eff22b63784977c83', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=23019307}
2024-12-01 19:36:22,664 DEBUG [cluster-ClusterId{value='674c6d5eff22b63784977c83', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Marking the connection pool for ServerId{clusterId=ClusterId{value='674c6d5eff22b63784977c83', description='null'}, address=localhost:27017} as 'ready'
2024-12-01 19:36:22,664 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 19:36:22,665 DEBUG [cluster-ClusterId{value='674c6d5eff22b63784977c83', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=23.0 ms, state=CONNECTED}]
2024-12-01 19:36:22,666 DEBUG [cluster-ClusterId{value='674c6d5eff22b63784977c83', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:36:23,161 DEBUG [main] org.springframework.web.filter.GenericFilterBean: Filter 'jwtAuthenticationFilter' configured for use
2024-12-01 19:36:23,163 DEBUG [main] org.springframework.web.filter.GenericFilterBean: Filter 'webMvcObservationFilter' configured for use
2024-12-01 19:36:23,163 DEBUG [main] org.springframework.web.filter.GenericFilterBean: Filter 'requestTracingFilter' configured for use
2024-12-01 19:36:23,163 DEBUG [main] org.springframework.web.filter.GenericFilterBean: Filter 'corsFilter' configured for use
2024-12-01 19:36:23,681 DEBUG [main] org.springframework.core.log.LogAccessor: No retry topic configuration found for topics [test-topic]
2024-12-01 19:36:23,685 DEBUG [main] org.springframework.core.log.LogAccessor: 1 @KafkaListener methods processed on bean 'kafkaConsumerService': {public void net.engineeringdigest.ecommerce.service.KafkaConsumerService.listen(java.lang.String)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", contentTypeConverter="", containerFactory="", beanRef="__listener", topics={"test-topic"}, groupId="ecommerce-group", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", id="", properties={}, info="")]}
2024-12-01 19:36:24,349 DEBUG [main] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping: 30 mappings in 'requestMappingHandlerMapping'
2024-12-01 19:36:24,401 DEBUG [main] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping: Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2024-12-01 19:36:24,581 INFO  [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver: Exposing 3 endpoint(s) beneath base path '/actuator'
2024-12-01 19:36:24,644 INFO  [main] org.springframework.security.web.DefaultSecurityFilterChain: Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@260ccf0, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2566247d, org.springframework.security.web.context.SecurityContextHolderFilter@3180131e, org.springframework.security.web.header.HeaderWriterFilter@136690b1, org.springframework.web.filter.CorsFilter@363a09a2, org.springframework.security.web.authentication.logout.LogoutFilter@2b625e82, net.engineeringdigest.ecommerce.security.JwtAuthenticationFilter@514dc5f4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3b8a063d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3a36da5e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@63d14dbf, org.springframework.security.web.session.SessionManagementFilter@6d77d269, org.springframework.security.web.access.ExceptionTranslationFilter@3fc2a1d1, org.springframework.security.web.access.intercept.AuthorizationFilter@4d3bde85]
2024-12-01 19:36:24,738 DEBUG [main] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-12-01 19:36:24,801 DEBUG [main] org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver: ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2024-12-01 19:36:25,332 INFO  [main] org.apache.kafka.common.config.AbstractConfig: AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-12-01 19:36:25,437 INFO  [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka version: 3.4.1
2024-12-01 19:36:25,437 INFO  [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka commitId: 8a516edc2755df89
2024-12-01 19:36:25,437 INFO  [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka startTimeMs: 1733061985436
2024-12-01 19:36:25,666 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.utils.AppInfoParser: App info kafka.admin.client for adminclient-1 unregistered
2024-12-01 19:36:25,670 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics: Metrics scheduler closed
2024-12-01 19:36:25,671 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-12-01 19:36:25,671 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics: Metrics reporters closed
2024-12-01 19:36:25,676 INFO  [main] org.apache.juli.logging.DirectJDKLog: Starting ProtocolHandler ["http-nio-8080"]
2024-12-01 19:36:25,680 WARN  [main] org.springframework.context.support.AbstractApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'
2024-12-01 19:36:25,681 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:36:25,681 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:36:25,695 DEBUG [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Closing connection connectionId{localValue:1, serverValue:106}
2024-12-01 19:36:25,696 DEBUG [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Closing connection connectionId{localValue:2, serverValue:105}
2024-12-01 19:36:25,699 INFO  [main] org.apache.juli.logging.DirectJDKLog: Pausing ProtocolHandler ["http-nio-8080"]
2024-12-01 19:36:25,699 INFO  [main] org.apache.juli.logging.DirectJDKLog: Stopping service [Tomcat]
2024-12-01 19:36:25,704 WARN  [main] org.apache.juli.logging.DirectJDKLog: The web application [ROOT] appears to have started a thread named [BufferPoolPruner-1-thread-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1763)
 java.base/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
 java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
 java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
 java.base/java.lang.Thread.run(Thread.java:1575)
2024-12-01 19:36:25,707 INFO  [main] org.apache.juli.logging.DirectJDKLog: Stopping ProtocolHandler ["http-nio-8080"]
2024-12-01 19:36:25,710 INFO  [main] org.apache.juli.logging.DirectJDKLog: Destroying ProtocolHandler ["http-nio-8080"]
2024-12-01 19:36:25,744 INFO  [main] org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger: 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-12-01 19:36:25,760 ERROR [main] org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter: 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

2024-12-01 19:36:30,682 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:36:30,682 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:36:32,335 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 19:36:32,335 DEBUG [cluster-ClusterId{value='674c6b73301c141eae702ded', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:36:33,654 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:36:33,655 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Revoke previously assigned partitions test-topic-0, test-topic-1, test-topic-2
2024-12-01 19:36:33,655 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: ecommerce-group: partitions revoked: [test-topic-0, test-topic-1, test-topic-2]
2024-12-01 19:36:33,655 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:36:33,655 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Member consumer-ecommerce-group-1-ab12d78a-edf8-4b46-8810-0cf755897c06 sending LeaveGroup request to coordinator localhost:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
2024-12-01 19:36:33,656 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-12-01 19:36:33,656 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Request joining group due to: consumer pro-actively leaving the group
2024-12-01 19:36:33,656 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Unsubscribed all topics or patterns and assigned partitions
2024-12-01 19:36:33,656 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-12-01 19:36:33,656 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Request joining group due to: consumer pro-actively leaving the group
2024-12-01 19:36:33,659 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics: Metrics scheduler closed
2024-12-01 19:36:33,659 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-12-01 19:36:33,659 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics: Metrics reporters closed
2024-12-01 19:36:33,661 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.utils.AppInfoParser: App info kafka.consumer for consumer-ecommerce-group-1 unregistered
2024-12-01 19:36:33,662 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: ecommerce-group: Consumer stopped
2024-12-01 19:36:33,663 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2024-12-01 19:36:33,783 INFO  [SpringApplicationShutdownHook] org.apache.kafka.clients.producer.KafkaProducer: [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2024-12-01 19:36:33,784 INFO  [SpringApplicationShutdownHook] org.apache.kafka.common.metrics.Metrics: Metrics scheduler closed
2024-12-01 19:36:33,784 INFO  [SpringApplicationShutdownHook] org.apache.kafka.common.metrics.Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-12-01 19:36:33,785 INFO  [SpringApplicationShutdownHook] org.apache.kafka.common.metrics.Metrics: Metrics reporters closed
2024-12-01 19:36:33,785 INFO  [SpringApplicationShutdownHook] org.apache.kafka.common.utils.AppInfoParser: App info kafka.producer for producer-1 unregistered
2024-12-01 19:36:33,788 DEBUG [SpringApplicationShutdownHook] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "endSessions" started on database admin using a connection with driver-generated ID 3 and server-generated ID 104 to localhost:27017. The request ID is 62. Command: {"endSessions": [{"id": {"$binary": {"base64": "nQ/O1cjsR3CQosVDDWv4AQ==", "subType": "04"}}}], "$db": "admin", "$readPreference": {"mode": "primaryPreferred"}}
2024-12-01 19:36:33,788 DEBUG [SpringApplicationShutdownHook] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "endSessions" succeeded in 0.90 ms using a connection with driver-generated ID 3 and server-generated ID 104 to localhost:27017. The request ID is 62. Command reply: {"ok": 1.0}
2024-12-01 19:36:33,790 DEBUG [SpringApplicationShutdownHook] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Closed connection [connectionId{localValue:3, serverValue:104}] to localhost:27017 because the pool has been closed.
2024-12-01 19:36:33,790 DEBUG [SpringApplicationShutdownHook] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Closing connection connectionId{localValue:3, serverValue:104}
2024-12-01 19:36:33,790 DEBUG [SpringApplicationShutdownHook] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Closing connection connectionId{localValue:2, serverValue:103}
2024-12-01 19:36:33,790 DEBUG [SpringApplicationShutdownHook] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Closing connection connectionId{localValue:1, serverValue:102}
2024-12-01 19:36:53,617 INFO  [background-preinit] org.hibernate.validator.internal.util.Version: HV000001: Hibernate Validator 8.0.0.Final
2024-12-01 19:36:53,666 INFO  [main] org.springframework.boot.StartupInfoLogger: Starting EcommerceApplication using Java 23.0.1 with PID 273116 (/home/mohit/Pictures/ecommerce-projects/ecommerce/target/classes started by mohit in /home/mohit/Pictures/ecommerce-projects/ecommerce)
2024-12-01 19:36:53,668 DEBUG [main] org.springframework.boot.StartupInfoLogger: Running with Spring Boot v3.1.0, Spring v6.0.9
2024-12-01 19:36:53,670 INFO  [main] org.springframework.boot.SpringApplication: The following 1 profile is active: "dev"
2024-12-01 19:36:55,192 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-12-01 19:36:55,195 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-12-01 19:36:55,243 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.ProductRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-12-01 19:36:55,245 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.ReviewRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-12-01 19:36:55,246 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.UserRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-12-01 19:36:55,247 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 46 ms. Found 0 Elasticsearch repository interfaces.
2024-12-01 19:36:55,255 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-12-01 19:36:55,256 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-12-01 19:36:55,263 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.ProductRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-12-01 19:36:55,263 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.ReviewRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-12-01 19:36:55,263 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.UserRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-12-01 19:36:55,264 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 7 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-12-01 19:36:55,274 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-12-01 19:36:55,274 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-12-01 19:36:55,404 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 128 ms. Found 3 MongoDB repository interfaces.
2024-12-01 19:36:55,422 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-12-01 19:36:55,424 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-12-01 19:36:55,446 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-12-01 19:36:55,446 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.ReviewRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-12-01 19:36:55,447 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface net.engineeringdigest.ecommerce.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-12-01 19:36:55,447 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2024-12-01 19:36:56,585 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer: Tomcat initialized with port(s): 8080 (http)
2024-12-01 19:36:56,596 INFO  [main] org.apache.juli.logging.DirectJDKLog: Initializing ProtocolHandler ["http-nio-8080"]
2024-12-01 19:36:56,597 INFO  [main] org.apache.juli.logging.DirectJDKLog: Starting service [Tomcat]
2024-12-01 19:36:56,597 INFO  [main] org.apache.juli.logging.DirectJDKLog: Starting Servlet engine: [Apache Tomcat/10.1.8]
2024-12-01 19:36:56,696 INFO  [main] org.apache.juli.logging.DirectJDKLog: Initializing Spring embedded WebApplicationContext
2024-12-01 19:36:56,696 INFO  [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 2902 ms
2024-12-01 19:36:57,078 DEBUG [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING}]
2024-12-01 19:36:57,094 INFO  [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.9.1"}, "os": {"type": "Linux", "name": "Linux", "architecture": "amd64", "version": "6.8.0-49-generic"}, "platform": "Java/Oracle Corporation/23.0.1+11-39"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@727dcc64], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@49e62b17, com.mongodb.Jep395RecordCodecProvider@288409f0]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@7d685f4e], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-12-01 19:36:57,120 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Opened connection [connectionId{localValue:1, serverValue:108}] to localhost:27017
2024-12-01 19:36:57,120 DEBUG [cluster-rtt-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Opened connection [connectionId{localValue:2, serverValue:107}] to localhost:27017
2024-12-01 19:36:57,121 INFO  [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=21216330}
2024-12-01 19:36:57,123 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Marking the connection pool for ServerId{clusterId=ClusterId{value='674c6d8131ab277b698f63a4', description='null'}, address=localhost:27017} as 'ready'
2024-12-01 19:36:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 19:36:57,124 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=21.2 ms, state=CONNECTED}]
2024-12-01 19:36:57,125 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:36:57,681 DEBUG [main] org.springframework.web.filter.GenericFilterBean: Filter 'jwtAuthenticationFilter' configured for use
2024-12-01 19:36:57,683 DEBUG [main] org.springframework.web.filter.GenericFilterBean: Filter 'webMvcObservationFilter' configured for use
2024-12-01 19:36:57,683 DEBUG [main] org.springframework.web.filter.GenericFilterBean: Filter 'requestTracingFilter' configured for use
2024-12-01 19:36:57,684 DEBUG [main] org.springframework.web.filter.GenericFilterBean: Filter 'corsFilter' configured for use
2024-12-01 19:36:58,415 DEBUG [main] org.springframework.core.log.LogAccessor: No retry topic configuration found for topics [test-topic]
2024-12-01 19:36:58,420 DEBUG [main] org.springframework.core.log.LogAccessor: 1 @KafkaListener methods processed on bean 'kafkaConsumerService': {public void net.engineeringdigest.ecommerce.service.KafkaConsumerService.listen(java.lang.String)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", containerFactory="", beanRef="__listener", contentTypeConverter="", topics={"test-topic"}, groupId="ecommerce-group", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", idIsGroup=true, containerGroup="", errorHandler="", id="", properties={}, info="")]}
2024-12-01 19:36:59,030 DEBUG [main] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping: 30 mappings in 'requestMappingHandlerMapping'
2024-12-01 19:36:59,094 DEBUG [main] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping: Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2024-12-01 19:36:59,332 INFO  [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver: Exposing 3 endpoint(s) beneath base path '/actuator'
2024-12-01 19:36:59,427 INFO  [main] org.springframework.security.web.DefaultSecurityFilterChain: Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5b6ec94a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@64745270, org.springframework.security.web.context.SecurityContextHolderFilter@684bfba9, org.springframework.security.web.header.HeaderWriterFilter@7d12fb85, org.springframework.web.filter.CorsFilter@596d17f4, org.springframework.security.web.authentication.logout.LogoutFilter@4afdb05e, net.engineeringdigest.ecommerce.security.JwtAuthenticationFilter@5f82209e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6859bbd4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4a225014, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@35a2ea5a, org.springframework.security.web.session.SessionManagementFilter@be186df, org.springframework.security.web.access.ExceptionTranslationFilter@3af6c672, org.springframework.security.web.access.intercept.AuthorizationFilter@630bd5e7]
2024-12-01 19:36:59,553 DEBUG [main] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-12-01 19:36:59,622 DEBUG [main] org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver: ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2024-12-01 19:37:00,536 INFO  [main] org.apache.kafka.common.config.AbstractConfig: AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-12-01 19:37:00,692 INFO  [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka version: 3.4.1
2024-12-01 19:37:00,692 INFO  [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka commitId: 8a516edc2755df89
2024-12-01 19:37:00,693 INFO  [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka startTimeMs: 1733062020691
2024-12-01 19:37:01,098 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.utils.AppInfoParser: App info kafka.admin.client for adminclient-1 unregistered
2024-12-01 19:37:01,104 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics: Metrics scheduler closed
2024-12-01 19:37:01,104 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-12-01 19:37:01,105 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics: Metrics reporters closed
2024-12-01 19:37:01,111 INFO  [main] org.apache.juli.logging.DirectJDKLog: Starting ProtocolHandler ["http-nio-8080"]
2024-12-01 19:37:01,126 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer: Tomcat started on port(s): 8080 (http) with context path ''
2024-12-01 19:37:01,159 INFO  [main] org.apache.kafka.common.config.AbstractConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-ecommerce-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = ecommerce-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-12-01 19:37:01,209 INFO  [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka version: 3.4.1
2024-12-01 19:37:01,209 INFO  [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka commitId: 8a516edc2755df89
2024-12-01 19:37:01,209 INFO  [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka startTimeMs: 1733062021209
2024-12-01 19:37:01,212 INFO  [main] org.apache.kafka.clients.consumer.KafkaConsumer: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Subscribed to topic(s): test-topic
2024-12-01 19:37:01,223 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:37:01,238 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Resetting the last seen epoch of partition test-topic-0 to 0 since the associated topicId changed from null to R6Tissc8Tx-8faE-YmmVlA
2024-12-01 19:37:01,239 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Resetting the last seen epoch of partition test-topic-1 to 0 since the associated topicId changed from null to R6Tissc8Tx-8faE-YmmVlA
2024-12-01 19:37:01,239 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Resetting the last seen epoch of partition test-topic-2 to 0 since the associated topicId changed from null to R6Tissc8Tx-8faE-YmmVlA
2024-12-01 19:37:01,241 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Cluster ID: -NsTbwmJS6S4DPEa3UlZLw
2024-12-01 19:37:01,242 INFO  [main] org.springframework.boot.StartupInfoLogger: Started EcommerceApplication in 8.188 seconds (process running for 8.611)
2024-12-01 19:37:01,242 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$FindCoordinatorResponseHandler: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Discovered group coordinator localhost:9092 (id: 2147482646 rack: null)
2024-12-01 19:37:01,244 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] (Re-)joining group
2024-12-01 19:37:01,262 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Request joining group due to: need to re-join with the given member-id: consumer-ecommerce-group-1-f6ec9990-5d7b-4aff-aa1d-bfd8d7b41915
2024-12-01 19:37:01,263 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-12-01 19:37:01,263 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] (Re-)joining group
2024-12-01 19:37:01,266 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$JoinGroupResponseHandler: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Successfully joined group with generation Generation{generationId=27, memberId='consumer-ecommerce-group-1-f6ec9990-5d7b-4aff-aa1d-bfd8d7b41915', protocol='range'}
2024-12-01 19:37:01,269 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Finished assignment for group at generation 27: {consumer-ecommerce-group-1-f6ec9990-5d7b-4aff-aa1d-bfd8d7b41915=Assignment(partitions=[test-topic-0, test-topic-1, test-topic-2])}
2024-12-01 19:37:01,279 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$SyncGroupResponseHandler: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Successfully synced group in generation Generation{generationId=27, memberId='consumer-ecommerce-group-1-f6ec9990-5d7b-4aff-aa1d-bfd8d7b41915', protocol='range'}
2024-12-01 19:37:01,281 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Notifying assignor about the new Assignment(partitions=[test-topic-0, test-topic-1, test-topic-2])
2024-12-01 19:37:01,284 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Adding newly assigned partitions: test-topic-0, test-topic-1, test-topic-2
2024-12-01 19:37:01,296 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator$OffsetFetchResponseHandler: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Found no committed offset for partition test-topic-2
2024-12-01 19:37:01,296 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator$OffsetFetchResponseHandler: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Found no committed offset for partition test-topic-1
2024-12-01 19:37:01,296 DEBUG [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Opened connection [connectionId{localValue:3, serverValue:109}] to localhost:27017
2024-12-01 19:37:01,300 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Setting offset for partition test-topic-0 to the committed offset FetchPosition{offset=1, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1001 rack: null)], epoch=0}}
2024-12-01 19:37:01,317 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Resetting offset for partition test-topic-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1001 rack: null)], epoch=0}}.
2024-12-01 19:37:01,317 DEBUG [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "ping" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 5. Command: {"ping": 1, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "E4+15jGtRzO2gnCkl0rzDA==", "subType": "04"}}}}
2024-12-01 19:37:01,318 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Resetting offset for partition test-topic-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1001 rack: null)], epoch=0}}.
2024-12-01 19:37:01,319 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: ecommerce-group: partitions assigned: [test-topic-0, test-topic-1, test-topic-2]
2024-12-01 19:37:01,327 DEBUG [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "ping" succeeded in 15.36 ms using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 5. Command reply: {"ok": 1.0}
2024-12-01 19:37:01,330 DEBUG [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "serverStatus" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 6. Command: {"serverStatus": 1, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "E4+15jGtRzO2gnCkl0rzDA==", "subType": "04"}}}}
2024-12-01 19:37:01,364 DEBUG [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "serverStatus" succeeded in 5.82 ms using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 6. Command reply: {"host": "mohitkalaptop", "version": "8.0.3", "process": "mongod", "service": ["shard"], "pid": 179678, "uptime": 15038.0, "uptimeMillis": 15037222, "uptimeEstimate": 15037, "localTime": {"$date": "2024-12-01T14:07:01.332Z"}, "asserts": {"regular": 0, "warning": 0, "msg": 0, "user": 117, "tripwire": 0, "rollovers": 0}, "batchedDeletes": {"batches": 3, "docs": 5, "stagedSizeBytes": 1215, "timeInBatchMillis": 0, "refetchesDueToYield": 0}, "catalogStats": {"collections": 2, "capped": 0, "clustered": 0, "timeseries": 0, "views": 0, "internalCollections": 3, "internalViews": 0, "csfle": 0, "queryableEncryption": 0}, "changeStreamPreImages": {"purgingJob": {"totalPass": 0, "docsDeleted": 0, "bytesDeleted": 0, "scannedCollections": 0, "scannedInternalCollections": 0, "maxStartWallTimeMillis": 0, "timeElapsedMillis": 0}}, "collectionCatalog": {"numScansDueToMissingMapping": 0}, "connections": {"current": 3, "available": 51197, "totalCreated": 109, "rejected": 0, "active": 2, "threaded": 3, "ex ...
2024-12-01 19:37:01,385 DEBUG [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "listCollections" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 7. Command: {"listCollections": 1, "cursor": {}, "nameOnly": true, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "E4+15jGtRzO2gnCkl0rzDA==", "subType": "04"}}}}
2024-12-01 19:37:01,388 DEBUG [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "listCollections" succeeded in 2.99 ms using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 7. Command reply: {"cursor": {"id": 0, "ns": "ecommerce.$cmd.listCollections", "firstBatch": [{"name": "users", "type": "collection"}, {"name": "products", "type": "collection"}]}, "ok": 1.0}
2024-12-01 19:37:01,393 DEBUG [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Received batch of 2 documents with cursorId 0 from server localhost:27017
2024-12-01 19:37:06,227 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:37:06,228 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:37:07,140 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=17.3 ms, state=CONNECTED}]
2024-12-01 19:37:07,141 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:37:11,230 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:37:11,231 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:37:16,232 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:37:16,232 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:37:17,149 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=14.0 ms, state=CONNECTED}]
2024-12-01 19:37:17,149 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:37:21,234 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:37:21,234 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:37:26,235 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:37:26,236 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:37:27,158 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=11.4 ms, state=CONNECTED}]
2024-12-01 19:37:27,158 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:37:31,237 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:37:31,239 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:37:36,240 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:37:36,241 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:37:37,167 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=9.2 ms, state=CONNECTED}]
2024-12-01 19:37:37,167 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:37:41,242 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:37:41,243 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:37:46,244 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:37:46,245 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:37:47,177 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=7.5 ms, state=CONNECTED}]
2024-12-01 19:37:47,177 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:37:50,031 INFO  [http-nio-8080-exec-1] org.apache.juli.logging.DirectJDKLog: Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-12-01 19:37:50,031 INFO  [http-nio-8080-exec-1] org.springframework.web.servlet.FrameworkServlet: Initializing Servlet 'dispatcherServlet'
2024-12-01 19:37:50,031 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.DispatcherServlet: Detected StandardServletMultipartResolver
2024-12-01 19:37:50,032 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.DispatcherServlet: Detected AcceptHeaderLocaleResolver
2024-12-01 19:37:50,032 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.DispatcherServlet: Detected FixedThemeResolver
2024-12-01 19:37:50,033 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.DispatcherServlet: Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@70d49bc6
2024-12-01 19:37:50,034 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.DispatcherServlet: Detected org.springframework.web.servlet.support.SessionFlashMapManager@d73321f
2024-12-01 19:37:50,034 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.FrameworkServlet: enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-12-01 19:37:50,034 INFO  [http-nio-8080-exec-1] org.springframework.web.servlet.FrameworkServlet: Completed initialization in 3 ms
2024-12-01 19:37:50,037 INFO  [http-nio-8080-exec-1] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Incoming request POST /auth/signup from 0:0:0:0:0:0:0:1
2024-12-01 19:37:50,046 DEBUG [http-nio-8080-exec-1] org.springframework.security.web.FilterChainProxy: Securing POST /auth/signup
2024-12-01 19:37:50,056 DEBUG [http-nio-8080-exec-1] org.springframework.security.web.authentication.AnonymousAuthenticationFilter: Set SecurityContextHolder to anonymous SecurityContext
2024-12-01 19:37:50,060 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#signup(SignupRequest)
2024-12-01 19:37:50,064 DEBUG [http-nio-8080-exec-1] org.springframework.security.web.FilterChainProxy: Secured POST /auth/signup
2024-12-01 19:37:50,065 DEBUG [http-nio-8080-exec-1] org.springframework.core.log.LogFormatUtils: POST "/auth/signup", parameters={}
2024-12-01 19:37:50,067 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#signup(SignupRequest)
2024-12-01 19:37:50,131 DEBUG [http-nio-8080-exec-1] org.springframework.core.log.LogFormatUtils: Read "application/json;charset=UTF-8" to [SignupRequest(username=user_test_123456789, email=unique_test123@example.com, password=Pass123!@#, f (truncated)...]
2024-12-01 19:37:50,144 INFO  [http-nio-8080-exec-1] net.engineeringdigest.ecommerce.controller.AuthController: Received signup request for user: user_test_123456789
2024-12-01 19:37:50,148 DEBUG [http-nio-8080-exec-1] net.engineeringdigest.ecommerce.service.UserService: Creating new user with username: user_test_123456789
2024-12-01 19:37:50,172 DEBUG [http-nio-8080-exec-1] org.springframework.data.mongodb.repository.query.MongoQueryCreator: Created query Query: { "username" : "user_test_123456789"}, Fields: {}, Sort: {}
2024-12-01 19:37:50,186 DEBUG [http-nio-8080-exec-1] org.springframework.data.mongodb.core.MongoTemplate: find using query: { "username" : "user_test_123456789"} fields: Document{{}} for class: class net.engineeringdigest.ecommerce.entity.User in collection: users
2024-12-01 19:37:50,205 DEBUG [http-nio-8080-exec-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 13. Command: {"find": "users", "filter": {"username": "user_test_123456789"}, "limit": 2, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "E4+15jGtRzO2gnCkl0rzDA==", "subType": "04"}}}}
2024-12-01 19:37:50,208 DEBUG [http-nio-8080-exec-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" succeeded in 2.87 ms using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 13. Command reply: {"cursor": {"firstBatch": [], "id": 0, "ns": "ecommerce.users"}, "ok": 1.0}
2024-12-01 19:37:50,209 DEBUG [http-nio-8080-exec-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Received batch of 0 documents with cursorId 0 from server localhost:27017
2024-12-01 19:37:50,215 DEBUG [http-nio-8080-exec-1] org.springframework.data.mongodb.repository.query.MongoQueryCreator: Created query Query: { "email" : "unique_test123@example.com"}, Fields: {}, Sort: {}
2024-12-01 19:37:50,217 DEBUG [http-nio-8080-exec-1] org.springframework.data.mongodb.core.MongoTemplate: find using query: { "email" : "unique_test123@example.com"} fields: Document{{}} for class: class net.engineeringdigest.ecommerce.entity.User in collection: users
2024-12-01 19:37:50,218 DEBUG [http-nio-8080-exec-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 14. Command: {"find": "users", "filter": {"email": "unique_test123@example.com"}, "limit": 2, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "E4+15jGtRzO2gnCkl0rzDA==", "subType": "04"}}}}
2024-12-01 19:37:50,221 DEBUG [http-nio-8080-exec-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" succeeded in 2.78 ms using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 14. Command reply: {"cursor": {"firstBatch": [], "id": 0, "ns": "ecommerce.users"}, "ok": 1.0}
2024-12-01 19:37:50,222 DEBUG [http-nio-8080-exec-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Received batch of 0 documents with cursorId 0 from server localhost:27017
2024-12-01 19:37:50,330 DEBUG [http-nio-8080-exec-1] net.engineeringdigest.ecommerce.service.UserService: Saving new user to database: user_test_123456789
2024-12-01 19:37:50,369 DEBUG [http-nio-8080-exec-1] org.springframework.data.mongodb.core.MongoTemplate: Inserting Document containing fields: [username, email, password, roles, accountNonExpired, accountNonLocked, credentialsNonExpired, enabled, _class] in collection: users
2024-12-01 19:37:50,378 DEBUG [http-nio-8080-exec-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: retryWrites set to true but the server is a standalone server.
2024-12-01 19:37:50,380 DEBUG [http-nio-8080-exec-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: retryWrites set to true but the server is a standalone server.
2024-12-01 19:37:50,389 DEBUG [http-nio-8080-exec-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "insert" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 15. Command: {"insert": "users", "ordered": true, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "E4+15jGtRzO2gnCkl0rzDA==", "subType": "04"}}}, "documents": [{"_id": {"$oid": "674c6db631ab277b698f63a5"}, "username": "user_test_123456789", "email": "unique_test123@example.com", "password": "$2a$10$mzhMf3JjnwYS24L/0W.8OOBKUXueGNiqTHU15Jl27NHBBAljwoSUO", "roles": ["ROLE_USER"], "accountNonExpired": true, "accountNonLocked": true, "credentialsNonExpired": true, "enabled": true, "_class": "net.engineeringdigest.ecommerce.entity.User"}]}
2024-12-01 19:37:50,391 DEBUG [http-nio-8080-exec-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "insert" succeeded in 1.86 ms using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 15. Command reply: {"n": 1, "ok": 1.0}
2024-12-01 19:37:50,396 INFO  [http-nio-8080-exec-1] net.engineeringdigest.ecommerce.service.UserService: Successfully created new user: user_test_123456789
2024-12-01 19:37:50,396 INFO  [http-nio-8080-exec-1] net.engineeringdigest.ecommerce.controller.AuthController: Successfully created user: user_test_123456789
2024-12-01 19:37:50,398 INFO  [http-nio-8080-exec-1] net.engineeringdigest.ecommerce.aspect.LoggingAspect: Method: signup completed in 254ms
2024-12-01 19:37:50,409 INFO  [http-nio-8080-exec-1] org.apache.kafka.common.config.AbstractConfig: ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 3
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer

2024-12-01 19:37:50,422 INFO  [http-nio-8080-exec-1] org.apache.kafka.clients.producer.KafkaProducer: [Producer clientId=producer-1] Instantiated an idempotent producer.
2024-12-01 19:37:50,444 INFO  [http-nio-8080-exec-1] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka version: 3.4.1
2024-12-01 19:37:50,445 INFO  [http-nio-8080-exec-1] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka commitId: 8a516edc2755df89
2024-12-01 19:37:50,445 INFO  [http-nio-8080-exec-1] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka startTimeMs: 1733062070444
2024-12-01 19:37:50,446 DEBUG [http-nio-8080-exec-1] org.springframework.core.log.LogAccessor: Created new Producer: CloseSafeProducer [delegate=org.apache.kafka.clients.producer.KafkaProducer@51e744a3]
2024-12-01 19:37:50,454 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata: [Producer clientId=producer-1] Cluster ID: -NsTbwmJS6S4DPEa3UlZLw
2024-12-01 19:37:50,459 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.producer.internals.TransactionManager: [Producer clientId=producer-1] ProducerId set to 1008 with epoch 0
2024-12-01 19:37:50,473 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata: [Producer clientId=producer-1] Resetting the last seen epoch of partition audit-logs-0 to 0 since the associated topicId changed from null to MM4QZNYlQZ6B9YYZSXeWDQ
2024-12-01 19:37:50,475 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata: [Producer clientId=producer-1] Resetting the last seen epoch of partition audit-logs-2 to 0 since the associated topicId changed from null to MM4QZNYlQZ6B9YYZSXeWDQ
2024-12-01 19:37:50,475 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata: [Producer clientId=producer-1] Resetting the last seen epoch of partition audit-logs-1 to 0 since the associated topicId changed from null to MM4QZNYlQZ6B9YYZSXeWDQ
2024-12-01 19:37:50,542 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor: Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2024-12-01 19:37:50,547 DEBUG [http-nio-8080-exec-1] org.springframework.core.log.LogFormatUtils: Writing ["User registered successfully"]
2024-12-01 19:37:50,561 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.FrameworkServlet: Completed 200 OK
2024-12-01 19:37:50,591 INFO  [http-nio-8080-exec-1] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Request completed in 554ms with status 200
2024-12-01 19:37:51,246 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:37:51,247 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:37:56,247 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:37:56,248 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:37:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 19:37:57,186 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=6.2 ms, state=CONNECTED}]
2024-12-01 19:37:57,187 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:38:01,248 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:38:01,249 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:38:06,249 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:38:06,249 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:38:07,195 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=5.1 ms, state=CONNECTED}]
2024-12-01 19:38:07,195 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:38:11,249 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:38:11,250 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:38:16,252 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:38:16,252 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:38:17,204 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=4.4 ms, state=CONNECTED}]
2024-12-01 19:38:17,204 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:38:20,673 INFO  [http-nio-8080-exec-2] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Incoming request POST /auth/login from 0:0:0:0:0:0:0:1
2024-12-01 19:38:20,674 DEBUG [http-nio-8080-exec-2] org.springframework.security.web.FilterChainProxy: Securing POST /auth/login
2024-12-01 19:38:20,674 DEBUG [http-nio-8080-exec-2] org.springframework.security.web.authentication.AnonymousAuthenticationFilter: Set SecurityContextHolder to anonymous SecurityContext
2024-12-01 19:38:20,675 DEBUG [http-nio-8080-exec-2] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#login(LoginRequest)
2024-12-01 19:38:20,675 DEBUG [http-nio-8080-exec-2] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#login(LoginRequest)
2024-12-01 19:38:20,675 DEBUG [http-nio-8080-exec-2] org.springframework.security.web.FilterChainProxy: Secured POST /auth/login
2024-12-01 19:38:20,676 DEBUG [http-nio-8080-exec-2] org.springframework.core.log.LogFormatUtils: POST "/auth/login", parameters={}
2024-12-01 19:38:20,676 DEBUG [http-nio-8080-exec-2] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#login(LoginRequest)
2024-12-01 19:38:20,678 DEBUG [http-nio-8080-exec-2] org.springframework.core.log.LogFormatUtils: Read "application/json;charset=UTF-8" to [LoginRequest(username=user_test_123456789, password=Pass123!@#)]
2024-12-01 19:38:20,678 INFO  [http-nio-8080-exec-2] net.engineeringdigest.ecommerce.controller.AuthController: Received login request for user: user_test_123456789
2024-12-01 19:38:20,766 DEBUG [http-nio-8080-exec-2] org.springframework.data.mongodb.repository.query.MongoQueryCreator: Created query Query: { "username" : "user_test_123456789"}, Fields: {}, Sort: {}
2024-12-01 19:38:20,767 DEBUG [http-nio-8080-exec-2] org.springframework.data.mongodb.core.MongoTemplate: find using query: { "username" : "user_test_123456789"} fields: Document{{}} for class: class net.engineeringdigest.ecommerce.entity.User in collection: users
2024-12-01 19:38:20,768 DEBUG [http-nio-8080-exec-2] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 19. Command: {"find": "users", "filter": {"username": "user_test_123456789"}, "limit": 2, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "E4+15jGtRzO2gnCkl0rzDA==", "subType": "04"}}}}
2024-12-01 19:38:20,770 DEBUG [http-nio-8080-exec-2] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" succeeded in 1.22 ms using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 19. Command reply: {"cursor": {"firstBatch": [{"_id": {"$oid": "674c6db631ab277b698f63a5"}, "username": "user_test_123456789", "email": "unique_test123@example.com", "password": "$2a$10$mzhMf3JjnwYS24L/0W.8OOBKUXueGNiqTHU15Jl27NHBBAljwoSUO", "roles": ["ROLE_USER"], "accountNonExpired": true, "accountNonLocked": true, "credentialsNonExpired": true, "enabled": true, "_class": "net.engineeringdigest.ecommerce.entity.User"}], "id": 0, "ns": "ecommerce.users"}, "ok": 1.0}
2024-12-01 19:38:20,770 DEBUG [http-nio-8080-exec-2] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Received batch of 1 documents with cursorId 0 from server localhost:27017
2024-12-01 19:38:20,870 DEBUG [http-nio-8080-exec-2] org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider: Authenticated user
2024-12-01 19:38:20,906 INFO  [http-nio-8080-exec-2] net.engineeringdigest.ecommerce.controller.AuthController: Successfully authenticated user: user_test_123456789
2024-12-01 19:38:20,911 INFO  [http-nio-8080-exec-2] net.engineeringdigest.ecommerce.aspect.LoggingAspect: Method: login completed in 233ms
2024-12-01 19:38:20,921 DEBUG [http-nio-8080-exec-2] org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor: Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-12-01 19:38:20,922 DEBUG [http-nio-8080-exec-2] org.springframework.core.log.LogFormatUtils: Writing [LoginResponse(token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyX3Rlc3RfMTIzNDU2Nzg5IiwiaWF0IjoxNzMzMDYyMTA (truncated)...]
2024-12-01 19:38:20,925 DEBUG [http-nio-8080-exec-2] org.springframework.web.servlet.FrameworkServlet: Completed 200 OK
2024-12-01 19:38:20,927 INFO  [http-nio-8080-exec-2] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Request completed in 254ms with status 200
2024-12-01 19:38:21,252 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:38:21,252 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:38:26,252 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:38:26,253 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:38:27,213 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=3.6 ms, state=CONNECTED}]
2024-12-01 19:38:27,213 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:38:31,254 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:38:31,254 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:38:32,889 INFO  [http-nio-8080-exec-3] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Incoming request GET /users/me from 0:0:0:0:0:0:0:1
2024-12-01 19:38:32,889 DEBUG [http-nio-8080-exec-3] org.springframework.security.web.FilterChainProxy: Securing GET /users/me
2024-12-01 19:38:32,904 DEBUG [http-nio-8080-exec-3] org.springframework.data.mongodb.repository.query.MongoQueryCreator: Created query Query: { "username" : "user_test_123456789"}, Fields: {}, Sort: {}
2024-12-01 19:38:32,905 DEBUG [http-nio-8080-exec-3] org.springframework.data.mongodb.core.MongoTemplate: find using query: { "username" : "user_test_123456789"} fields: Document{{}} for class: class net.engineeringdigest.ecommerce.entity.User in collection: users
2024-12-01 19:38:32,906 DEBUG [http-nio-8080-exec-3] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 21. Command: {"find": "users", "filter": {"username": "user_test_123456789"}, "limit": 2, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "E4+15jGtRzO2gnCkl0rzDA==", "subType": "04"}}}}
2024-12-01 19:38:32,907 DEBUG [http-nio-8080-exec-3] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" succeeded in 0.91 ms using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 21. Command reply: {"cursor": {"firstBatch": [{"_id": {"$oid": "674c6db631ab277b698f63a5"}, "username": "user_test_123456789", "email": "unique_test123@example.com", "password": "$2a$10$mzhMf3JjnwYS24L/0W.8OOBKUXueGNiqTHU15Jl27NHBBAljwoSUO", "roles": ["ROLE_USER"], "accountNonExpired": true, "accountNonLocked": true, "credentialsNonExpired": true, "enabled": true, "_class": "net.engineeringdigest.ecommerce.entity.User"}], "id": 0, "ns": "ecommerce.users"}, "ok": 1.0}
2024-12-01 19:38:32,907 DEBUG [http-nio-8080-exec-3] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Received batch of 1 documents with cursorId 0 from server localhost:27017
2024-12-01 19:38:32,911 DEBUG [http-nio-8080-exec-3] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.UserController#getCurrentUser()
2024-12-01 19:38:32,912 DEBUG [http-nio-8080-exec-3] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.UserController#getCurrentUser()
2024-12-01 19:38:32,912 DEBUG [http-nio-8080-exec-3] org.springframework.security.web.FilterChainProxy: Secured GET /users/me
2024-12-01 19:38:32,912 DEBUG [http-nio-8080-exec-3] org.springframework.core.log.LogFormatUtils: GET "/users/me", parameters={}
2024-12-01 19:38:32,913 DEBUG [http-nio-8080-exec-3] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.UserController#getCurrentUser()
2024-12-01 19:38:32,915 INFO  [http-nio-8080-exec-3] net.engineeringdigest.ecommerce.controller.UserController: Fetching current user details for: user_test_123456789
2024-12-01 19:38:32,915 DEBUG [http-nio-8080-exec-3] org.springframework.data.mongodb.repository.query.MongoQueryCreator: Created query Query: { "username" : "user_test_123456789"}, Fields: {}, Sort: {}
2024-12-01 19:38:32,915 DEBUG [http-nio-8080-exec-3] org.springframework.data.mongodb.core.MongoTemplate: find using query: { "username" : "user_test_123456789"} fields: Document{{}} for class: class net.engineeringdigest.ecommerce.entity.User in collection: users
2024-12-01 19:38:32,916 DEBUG [http-nio-8080-exec-3] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 22. Command: {"find": "users", "filter": {"username": "user_test_123456789"}, "limit": 2, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "E4+15jGtRzO2gnCkl0rzDA==", "subType": "04"}}}}
2024-12-01 19:38:32,918 DEBUG [http-nio-8080-exec-3] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" succeeded in 1.43 ms using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 22. Command reply: {"cursor": {"firstBatch": [{"_id": {"$oid": "674c6db631ab277b698f63a5"}, "username": "user_test_123456789", "email": "unique_test123@example.com", "password": "$2a$10$mzhMf3JjnwYS24L/0W.8OOBKUXueGNiqTHU15Jl27NHBBAljwoSUO", "roles": ["ROLE_USER"], "accountNonExpired": true, "accountNonLocked": true, "credentialsNonExpired": true, "enabled": true, "_class": "net.engineeringdigest.ecommerce.entity.User"}], "id": 0, "ns": "ecommerce.users"}, "ok": 1.0}
2024-12-01 19:38:32,920 DEBUG [http-nio-8080-exec-3] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Received batch of 1 documents with cursorId 0 from server localhost:27017
2024-12-01 19:38:32,921 INFO  [http-nio-8080-exec-3] net.engineeringdigest.ecommerce.aspect.LoggingAspect: Method: getCurrentUser completed in 6ms
2024-12-01 19:38:32,927 DEBUG [http-nio-8080-exec-3] org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor: Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-12-01 19:38:32,930 DEBUG [http-nio-8080-exec-3] org.springframework.core.log.LogFormatUtils: Writing [User(id=674c6db631ab277b698f63a5, username=user_test_123456789, email=unique_test123@example.com, pa (truncated)...]
2024-12-01 19:38:32,935 DEBUG [http-nio-8080-exec-3] org.springframework.web.servlet.FrameworkServlet: Completed 200 OK
2024-12-01 19:38:32,936 INFO  [http-nio-8080-exec-3] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Request completed in 47ms with status 200
2024-12-01 19:38:36,254 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:38:36,254 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:38:37,222 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=3.1 ms, state=CONNECTED}]
2024-12-01 19:38:37,222 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:38:41,255 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:38:41,255 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:38:45,234 INFO  [http-nio-8080-exec-5] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Incoming request GET /users/profile from 0:0:0:0:0:0:0:1
2024-12-01 19:38:45,235 DEBUG [http-nio-8080-exec-5] org.springframework.security.web.FilterChainProxy: Securing GET /users/profile
2024-12-01 19:38:45,236 DEBUG [http-nio-8080-exec-5] org.springframework.data.mongodb.repository.query.MongoQueryCreator: Created query Query: { "username" : "user_test_123456789"}, Fields: {}, Sort: {}
2024-12-01 19:38:45,237 DEBUG [http-nio-8080-exec-5] org.springframework.data.mongodb.core.MongoTemplate: find using query: { "username" : "user_test_123456789"} fields: Document{{}} for class: class net.engineeringdigest.ecommerce.entity.User in collection: users
2024-12-01 19:38:45,238 DEBUG [http-nio-8080-exec-5] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 24. Command: {"find": "users", "filter": {"username": "user_test_123456789"}, "limit": 2, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "E4+15jGtRzO2gnCkl0rzDA==", "subType": "04"}}}}
2024-12-01 19:38:45,239 DEBUG [http-nio-8080-exec-5] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" succeeded in 1.19 ms using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 24. Command reply: {"cursor": {"firstBatch": [{"_id": {"$oid": "674c6db631ab277b698f63a5"}, "username": "user_test_123456789", "email": "unique_test123@example.com", "password": "$2a$10$mzhMf3JjnwYS24L/0W.8OOBKUXueGNiqTHU15Jl27NHBBAljwoSUO", "roles": ["ROLE_USER"], "accountNonExpired": true, "accountNonLocked": true, "credentialsNonExpired": true, "enabled": true, "_class": "net.engineeringdigest.ecommerce.entity.User"}], "id": 0, "ns": "ecommerce.users"}, "ok": 1.0}
2024-12-01 19:38:45,240 DEBUG [http-nio-8080-exec-5] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Received batch of 1 documents with cursorId 0 from server localhost:27017
2024-12-01 19:38:45,243 DEBUG [http-nio-8080-exec-5] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.UserController#getCurrentUserProfile()
2024-12-01 19:38:45,243 DEBUG [http-nio-8080-exec-5] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.UserController#getCurrentUserProfile()
2024-12-01 19:38:45,244 DEBUG [http-nio-8080-exec-5] org.springframework.security.web.FilterChainProxy: Secured GET /users/profile
2024-12-01 19:38:45,244 DEBUG [http-nio-8080-exec-5] org.springframework.core.log.LogFormatUtils: GET "/users/profile", parameters={}
2024-12-01 19:38:45,244 DEBUG [http-nio-8080-exec-5] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.UserController#getCurrentUserProfile()
2024-12-01 19:38:45,244 INFO  [http-nio-8080-exec-5] net.engineeringdigest.ecommerce.controller.UserController: Fetching profile for user: user_test_123456789
2024-12-01 19:38:45,245 DEBUG [http-nio-8080-exec-5] org.springframework.data.mongodb.repository.query.MongoQueryCreator: Created query Query: { "username" : "user_test_123456789"}, Fields: {}, Sort: {}
2024-12-01 19:38:45,245 DEBUG [http-nio-8080-exec-5] org.springframework.data.mongodb.core.MongoTemplate: find using query: { "username" : "user_test_123456789"} fields: Document{{}} for class: class net.engineeringdigest.ecommerce.entity.User in collection: users
2024-12-01 19:38:45,246 DEBUG [http-nio-8080-exec-5] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 25. Command: {"find": "users", "filter": {"username": "user_test_123456789"}, "limit": 2, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "E4+15jGtRzO2gnCkl0rzDA==", "subType": "04"}}}}
2024-12-01 19:38:45,247 DEBUG [http-nio-8080-exec-5] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" succeeded in 0.80 ms using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 25. Command reply: {"cursor": {"firstBatch": [{"_id": {"$oid": "674c6db631ab277b698f63a5"}, "username": "user_test_123456789", "email": "unique_test123@example.com", "password": "$2a$10$mzhMf3JjnwYS24L/0W.8OOBKUXueGNiqTHU15Jl27NHBBAljwoSUO", "roles": ["ROLE_USER"], "accountNonExpired": true, "accountNonLocked": true, "credentialsNonExpired": true, "enabled": true, "_class": "net.engineeringdigest.ecommerce.entity.User"}], "id": 0, "ns": "ecommerce.users"}, "ok": 1.0}
2024-12-01 19:38:45,247 DEBUG [http-nio-8080-exec-5] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Received batch of 1 documents with cursorId 0 from server localhost:27017
2024-12-01 19:38:45,248 INFO  [http-nio-8080-exec-5] net.engineeringdigest.ecommerce.aspect.LoggingAspect: Method: getCurrentUserProfile completed in 4ms
2024-12-01 19:38:45,249 DEBUG [http-nio-8080-exec-5] org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor: Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-12-01 19:38:45,249 DEBUG [http-nio-8080-exec-5] org.springframework.core.log.LogFormatUtils: Writing [User(id=674c6db631ab277b698f63a5, username=user_test_123456789, email=unique_test123@example.com, pa (truncated)...]
2024-12-01 19:38:45,249 DEBUG [http-nio-8080-exec-5] org.springframework.web.servlet.FrameworkServlet: Completed 200 OK
2024-12-01 19:38:45,250 INFO  [http-nio-8080-exec-5] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Request completed in 16ms with status 200
2024-12-01 19:38:46,256 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:38:46,256 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:38:47,231 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=2.6 ms, state=CONNECTED}]
2024-12-01 19:38:47,231 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:38:51,257 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:38:51,258 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:38:56,259 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:38:56,259 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:38:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 19:38:57,241 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=2.2 ms, state=CONNECTED}]
2024-12-01 19:38:57,241 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:39:01,259 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:39:01,259 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:39:06,260 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:39:06,260 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:39:07,251 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.9 ms, state=CONNECTED}]
2024-12-01 19:39:07,251 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:39:11,261 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:39:11,261 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:39:16,261 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:39:16,262 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:39:17,261 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.8 ms, state=CONNECTED}]
2024-12-01 19:39:17,261 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:39:21,263 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:39:21,263 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:39:26,264 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:39:26,264 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:39:27,272 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.8 ms, state=CONNECTED}]
2024-12-01 19:39:27,272 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:39:31,264 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:39:31,264 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:39:36,266 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:39:36,266 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:39:37,281 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2024-12-01 19:39:37,281 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:39:41,266 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:39:41,267 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:39:46,267 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:39:46,267 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:39:47,291 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2024-12-01 19:39:47,291 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:39:51,268 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:39:51,268 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:39:56,269 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:39:56,269 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:39:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 19:39:57,301 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2024-12-01 19:39:57,301 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:40:01,270 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:40:01,270 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:40:06,271 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:40:06,272 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:40:07,311 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2024-12-01 19:40:07,311 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:40:11,273 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:40:11,273 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:40:16,274 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:40:16,274 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:40:17,317 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2024-12-01 19:40:17,318 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:40:21,274 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:40:21,274 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:40:26,274 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:40:26,275 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:40:27,326 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2024-12-01 19:40:27,326 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:40:31,276 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:40:31,276 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:40:36,277 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:40:36,278 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:40:37,336 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2024-12-01 19:40:37,336 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:40:41,279 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:40:41,280 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:40:46,281 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:40:46,281 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:40:47,345 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2024-12-01 19:40:47,345 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:40:51,281 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:40:51,282 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:40:56,283 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:40:56,283 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:40:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 19:40:57,355 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 19:40:57,355 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:41:01,283 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:41:01,284 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:41:06,284 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:41:06,284 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:41:07,364 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 19:41:07,365 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:41:11,285 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:41:11,285 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:41:16,285 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:41:16,286 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:41:17,375 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 19:41:17,376 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:41:21,286 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:41:21,287 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:41:26,287 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:41:26,287 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:41:27,384 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 19:41:27,384 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:41:31,287 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:41:31,288 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:41:36,288 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:41:36,289 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:41:37,393 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 19:41:37,393 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:41:41,290 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:41:41,290 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:41:46,290 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:41:46,290 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:41:47,404 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 19:41:47,404 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:41:51,290 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:41:51,290 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:41:56,291 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:41:56,291 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:41:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 19:41:57,413 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 19:41:57,414 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:42:01,291 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:42:01,292 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:42:06,293 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:42:06,293 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:42:07,423 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 19:42:07,423 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:42:11,293 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:42:11,293 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:42:16,293 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:42:16,293 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:42:17,431 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 19:42:17,432 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:42:21,293 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:42:21,293 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:42:26,294 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:42:26,294 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:42:27,441 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 19:42:27,442 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:42:31,295 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:42:31,296 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:42:36,296 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:42:36,297 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:42:37,451 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 19:42:37,451 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:42:41,297 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:42:41,297 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:42:46,297 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:42:46,298 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:42:47,461 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 19:42:47,461 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:42:51,298 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:42:51,299 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:42:56,299 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:42:56,299 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:42:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 19:42:57,470 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 19:42:57,470 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:43:01,299 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:43:01,299 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:43:06,299 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:43:06,299 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:43:07,480 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 19:43:07,480 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:43:11,299 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:43:11,299 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:43:16,299 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:43:16,300 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:43:17,489 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 19:43:17,489 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:43:21,301 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:43:21,301 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:43:26,302 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:43:26,302 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:43:27,499 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 19:43:27,499 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:43:31,302 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:43:31,303 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:43:36,304 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:43:36,304 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:43:37,508 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 19:43:37,508 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:43:41,305 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:43:41,305 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:43:46,306 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:43:46,306 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:43:47,517 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 19:43:47,517 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:43:51,306 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:43:51,307 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:43:56,308 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:43:56,308 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:43:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 19:43:57,526 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 19:43:57,526 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:44:01,308 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:44:01,309 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:44:06,309 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:44:06,309 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:44:07,535 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 19:44:07,535 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:44:11,309 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:44:11,309 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:44:16,309 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:44:16,309 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:44:17,545 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 19:44:17,545 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:44:21,310 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:44:21,310 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:44:26,310 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:44:26,311 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:44:27,555 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 19:44:27,555 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:44:31,311 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:44:31,312 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:44:36,312 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:44:36,312 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:44:37,564 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 19:44:37,564 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:44:41,312 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:44:41,312 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:44:46,313 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:44:46,313 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:44:47,574 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 19:44:47,574 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:44:51,313 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:44:51,314 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:44:56,314 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:44:56,315 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:44:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 19:44:57,584 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 19:44:57,584 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:45:01,315 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:45:01,315 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:45:06,317 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:45:06,317 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:45:07,597 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2024-12-01 19:45:07,597 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:45:11,319 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:45:11,319 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:45:16,320 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:45:16,321 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:45:17,604 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2024-12-01 19:45:17,605 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:45:21,321 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:45:21,322 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:45:26,323 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:45:26,323 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:45:27,614 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2024-12-01 19:45:27,614 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:45:31,323 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:45:31,323 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:45:36,323 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:45:36,324 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:45:37,623 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2024-12-01 19:45:37,623 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:45:41,325 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:45:41,325 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:45:46,325 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:45:46,326 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:45:47,632 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2024-12-01 19:45:47,632 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:45:51,326 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:45:51,327 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:45:56,327 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:45:56,327 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:45:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 19:45:57,642 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2024-12-01 19:45:57,643 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:46:01,317 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient: [Consumer clientId=consumer-ecommerce-group-1, groupId=ecommerce-group] Node -1 disconnected.
2024-12-01 19:46:01,327 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:46:01,328 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:46:06,328 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:46:06,329 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:46:07,651 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 19:46:07,651 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:46:11,329 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:46:11,330 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:46:16,330 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:46:16,330 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:46:17,660 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 19:46:17,660 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:46:21,330 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:46:21,330 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:46:26,331 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:46:26,331 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:46:27,669 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 19:46:27,669 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:46:31,331 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:46:31,331 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:46:36,332 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:46:36,332 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:46:37,678 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 19:46:37,678 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:46:41,332 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:46:41,333 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:46:46,333 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:46:46,333 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:46:47,688 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 19:46:47,688 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:46:50,700 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient: [Producer clientId=producer-1] Node -1 disconnected.
2024-12-01 19:46:51,334 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:46:51,334 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:46:56,334 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:46:56,334 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:46:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 19:46:57,697 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 19:46:57,697 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:47:01,335 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:47:01,335 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:47:06,335 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:47:06,335 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:47:07,707 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 19:47:07,708 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:47:11,336 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:47:11,336 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:47:16,336 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:47:16,336 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:47:17,723 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 19:47:17,725 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:47:21,336 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:47:21,337 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:47:26,337 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:47:26,338 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:47:27,729 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 19:47:27,729 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:47:31,339 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:47:31,339 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:47:36,339 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:47:36,340 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:47:37,739 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 19:47:37,740 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:47:41,341 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:47:41,341 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:47:46,342 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:47:46,342 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:47:47,749 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 19:47:47,749 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:47:51,342 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:47:51,343 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:47:56,343 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:47:56,344 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:47:57,125 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 19:47:57,758 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 19:47:57,759 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:48:01,344 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:48:01,344 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:48:06,346 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:48:06,346 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:48:07,769 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 19:48:07,769 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:48:11,347 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:48:11,347 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:48:16,347 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:48:16,348 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:48:17,778 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 19:48:17,778 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:48:21,349 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:48:21,349 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:48:26,350 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:48:26,350 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:48:27,787 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 19:48:27,787 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:48:31,350 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:48:31,350 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:48:36,350 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:48:36,351 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:48:37,796 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 19:48:37,796 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:48:41,351 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:48:41,352 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:48:46,352 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:48:46,353 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:48:47,805 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 19:48:47,805 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:48:51,354 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:48:51,354 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:48:56,355 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:48:56,356 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:48:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 19:48:57,814 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 19:48:57,814 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:49:01,357 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:49:01,357 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:49:06,358 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:49:06,358 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:49:07,824 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 19:49:07,824 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:49:11,358 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:49:11,359 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:49:16,359 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:49:16,359 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:49:17,834 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 19:49:17,835 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:49:21,360 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:49:21,360 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:49:26,360 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:49:26,360 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:49:27,844 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 19:49:27,844 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:49:31,360 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:49:31,360 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:49:36,360 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:49:36,361 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:49:37,854 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 19:49:37,854 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:49:41,362 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:49:41,362 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:49:46,363 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:49:46,363 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:49:47,864 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 19:49:47,864 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:49:51,363 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:49:51,364 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:49:56,365 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:49:56,365 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:49:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 19:49:57,873 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 19:49:57,873 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:50:01,366 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:50:01,366 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:50:06,366 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:50:06,367 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:50:07,882 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 19:50:07,882 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:50:11,367 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:50:11,367 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:50:16,367 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:50:16,367 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:50:17,891 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 19:50:17,893 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:50:21,368 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:50:21,369 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:50:26,373 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:50:26,374 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:50:27,901 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 19:50:27,901 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:50:31,375 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:50:31,375 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:50:36,375 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:50:36,375 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:50:37,911 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 19:50:37,911 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:50:41,376 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:50:41,376 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:50:46,376 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:50:46,377 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:50:47,922 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 19:50:47,923 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:50:51,378 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:50:51,378 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:50:56,378 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:50:56,379 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:50:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 19:50:57,931 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2024-12-01 19:50:57,932 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:51:01,379 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:51:01,380 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:51:06,381 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:51:06,381 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:51:07,941 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2024-12-01 19:51:07,942 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:51:11,381 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:51:11,382 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:51:16,383 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:51:16,383 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:51:17,952 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2024-12-01 19:51:17,953 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:51:21,383 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:51:21,384 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:51:26,385 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:51:26,385 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:51:27,961 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2024-12-01 19:51:27,961 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:51:31,385 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:51:31,385 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:51:36,386 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:51:36,387 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:51:37,968 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2024-12-01 19:51:37,969 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:51:41,387 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:51:41,387 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:51:46,387 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:51:46,388 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:51:47,976 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 19:51:47,977 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:51:51,388 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:51:51,388 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:51:56,388 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:51:56,388 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:51:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 19:51:57,983 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 19:51:57,984 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:52:01,388 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:52:01,389 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:52:06,389 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:52:06,389 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:52:07,993 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 19:52:07,994 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:52:11,390 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:52:11,390 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:52:16,391 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:52:16,391 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:52:18,003 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 19:52:18,003 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:52:21,391 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:52:21,391 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:52:26,392 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:52:26,392 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:52:28,012 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 19:52:28,013 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:52:31,392 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:52:31,392 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:52:36,394 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:52:36,394 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:52:38,022 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 19:52:38,022 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:52:41,395 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:52:41,395 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:52:46,395 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:52:46,396 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:52:48,033 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 19:52:48,033 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:52:51,397 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:52:51,397 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:52:56,397 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:52:56,398 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:52:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 19:52:58,042 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 19:52:58,042 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:53:01,398 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:53:01,398 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:53:06,398 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:53:06,399 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:53:08,052 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 19:53:08,053 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:53:11,400 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:53:11,401 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:53:16,401 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:53:16,401 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:53:18,062 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 19:53:18,063 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:53:21,402 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:53:21,402 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:53:26,404 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:53:26,404 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:53:28,072 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 19:53:28,072 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:53:31,404 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:53:31,404 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:53:36,404 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:53:36,405 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:53:38,081 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 19:53:38,082 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:53:41,405 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:53:41,406 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:53:46,406 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:53:46,406 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:53:48,091 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2024-12-01 19:53:48,092 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:53:51,406 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:53:51,407 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:53:56,408 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:53:56,408 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:53:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 19:53:58,101 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2024-12-01 19:53:58,102 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:54:01,409 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:54:01,409 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:54:06,409 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:54:06,410 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:54:08,111 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 19:54:08,111 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:54:11,410 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:54:11,411 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:54:16,411 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:54:16,412 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:54:18,120 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 19:54:18,121 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:54:21,413 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:54:21,413 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:54:26,413 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:54:26,414 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:54:28,134 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 19:54:28,134 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:54:31,415 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:54:31,415 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:54:36,416 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:54:36,416 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:54:38,141 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 19:54:38,142 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:54:41,416 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:54:41,416 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:54:46,416 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:54:46,417 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:54:48,151 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 19:54:48,151 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:54:51,417 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:54:51,417 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:54:56,417 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:54:56,417 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:54:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 19:54:58,161 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 19:54:58,162 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:55:01,417 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:55:01,417 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:55:06,417 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:55:06,417 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:55:08,172 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 19:55:08,172 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:55:11,418 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:55:11,418 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:55:16,419 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:55:16,419 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:55:18,182 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 19:55:18,182 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:55:21,420 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:55:21,420 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:55:26,420 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:55:26,420 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:55:28,191 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 19:55:28,191 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:55:31,421 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:55:31,421 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:55:36,422 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:55:36,422 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:55:38,201 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 19:55:38,202 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:55:41,422 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:55:41,422 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:55:46,422 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:55:46,422 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:55:48,204 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 19:55:48,204 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:55:51,422 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:55:51,422 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:55:56,422 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:55:56,422 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:55:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 19:55:58,213 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 19:55:58,213 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:56:01,422 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:56:01,423 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:56:06,423 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:56:06,423 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:56:08,225 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 19:56:08,225 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:56:11,424 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:56:11,425 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:56:16,425 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:56:16,425 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:56:18,232 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 19:56:18,232 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:56:21,426 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:56:21,426 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:56:26,426 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:56:26,427 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:56:28,241 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 19:56:28,241 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:56:31,427 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:56:31,427 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:56:36,428 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:56:36,428 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:56:38,250 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 19:56:38,250 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:56:41,429 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:56:41,429 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:56:46,431 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:56:46,431 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:56:48,259 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 19:56:48,259 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:56:51,432 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:56:51,432 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:56:56,432 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:56:56,432 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:56:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 19:56:58,269 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 19:56:58,269 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:57:01,434 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:57:01,434 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:57:06,434 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:57:06,435 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:57:08,279 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 19:57:08,279 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:57:11,435 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:57:11,436 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:57:16,436 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:57:16,437 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:57:18,288 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 19:57:18,288 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:57:21,438 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:57:21,438 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:57:26,438 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:57:26,439 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:57:28,297 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2024-12-01 19:57:28,297 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:57:31,439 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:57:31,439 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:57:36,440 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:57:36,440 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:57:38,306 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2024-12-01 19:57:38,306 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:57:41,440 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:57:41,441 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:57:46,441 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:57:46,442 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:57:48,315 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 19:57:48,316 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:57:51,443 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:57:51,443 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:57:56,443 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:57:56,444 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:57:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 19:57:58,325 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 19:57:58,326 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:58:01,444 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:58:01,444 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:58:06,445 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:58:06,445 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:58:08,335 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 19:58:08,335 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:58:11,445 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:58:11,446 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:58:16,447 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:58:16,447 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:58:18,345 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 19:58:18,345 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:58:21,447 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:58:21,448 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:58:26,449 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:58:26,449 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:58:28,354 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2024-12-01 19:58:28,355 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:58:31,449 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:58:31,450 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:58:36,450 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:58:36,450 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:58:38,364 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2024-12-01 19:58:38,364 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:58:41,451 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:58:41,451 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:58:46,451 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:58:46,451 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:58:48,374 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2024-12-01 19:58:48,375 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:58:51,452 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:58:51,452 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:58:56,452 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:58:56,453 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:58:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 19:58:58,394 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2024-12-01 19:58:58,394 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:59:01,453 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:59:01,453 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:59:06,454 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:59:06,454 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:59:08,394 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2024-12-01 19:59:08,394 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:59:11,455 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:59:11,455 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:59:16,458 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:59:16,459 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:59:18,404 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2024-12-01 19:59:18,404 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:59:21,459 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:59:21,459 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:59:26,460 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:59:26,460 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:59:28,413 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2024-12-01 19:59:28,413 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:59:31,460 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:59:31,460 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:59:36,460 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:59:36,460 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:59:38,422 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 19:59:38,422 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:59:41,460 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:59:41,461 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:59:46,461 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:59:46,462 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:59:48,432 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2024-12-01 19:59:48,432 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 19:59:51,462 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:59:51,462 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:59:56,462 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 19:59:56,463 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 19:59:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 19:59:58,442 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2024-12-01 19:59:58,442 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:00:01,463 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:00:01,463 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:00:06,463 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:00:06,463 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:00:08,452 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2024-12-01 20:00:08,452 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:00:11,463 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:00:11,463 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:00:16,464 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:00:16,464 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:00:18,461 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 20:00:18,461 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:00:21,464 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:00:21,464 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:00:26,466 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:00:26,466 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:00:28,470 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 20:00:28,471 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:00:31,466 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:00:31,466 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:00:36,466 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:00:36,466 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:00:38,480 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 20:00:38,481 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:00:41,466 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:00:41,467 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:00:46,467 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:00:46,468 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:00:48,490 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 20:00:48,490 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:00:51,468 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:00:51,469 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:00:56,470 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:00:56,470 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:00:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 20:00:58,501 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 20:00:58,501 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:01:01,471 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:01:01,471 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:01:06,471 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:01:06,472 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:01:08,510 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 20:01:08,510 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:01:11,472 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:01:11,473 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:01:16,473 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:01:16,473 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:01:18,519 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 20:01:18,519 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:01:21,474 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:01:21,475 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:01:26,475 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:01:26,476 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:01:28,530 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 20:01:28,530 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:01:31,476 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:01:31,476 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:01:36,476 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:01:36,477 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:01:38,539 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 20:01:38,540 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:01:41,477 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:01:41,477 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:01:46,477 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:01:46,477 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:01:48,549 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 20:01:48,549 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:01:51,477 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:01:51,478 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:01:56,478 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:01:56,478 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:01:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 20:01:58,558 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 20:01:58,558 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:02:01,478 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:02:01,479 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:02:06,479 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:02:06,480 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:02:08,567 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 20:02:08,567 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:02:11,480 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:02:11,481 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:02:16,481 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:02:16,481 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:02:18,576 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 20:02:18,576 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:02:21,481 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:02:21,482 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:02:26,482 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:02:26,483 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:02:28,586 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 20:02:28,586 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:02:31,483 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:02:31,483 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:02:36,484 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:02:36,484 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:02:38,595 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 20:02:38,595 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:02:41,485 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:02:41,486 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:02:46,486 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:02:46,486 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:02:48,605 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 20:02:48,606 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:02:51,487 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:02:51,488 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:02:56,489 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:02:56,491 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:02:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 20:02:58,615 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 20:02:58,615 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:03:01,491 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:03:01,491 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:03:06,492 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:03:06,492 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:03:08,625 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 20:03:08,625 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:03:11,494 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:03:11,494 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:03:16,495 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:03:16,495 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:03:18,635 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 20:03:18,635 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:03:21,495 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:03:21,495 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:03:26,495 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:03:26,496 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:03:28,645 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 20:03:28,645 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:03:31,496 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:03:31,497 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:03:36,497 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:03:36,497 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:03:38,655 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 20:03:38,655 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:03:41,497 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:03:41,498 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:03:46,498 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:03:46,498 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:03:48,665 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 20:03:48,665 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:03:51,499 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:03:51,499 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:03:56,499 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:03:56,499 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:03:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 20:03:58,676 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 20:03:58,676 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:04:01,500 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:04:01,500 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:04:06,500 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:04:06,501 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:04:08,685 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 20:04:08,686 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:04:11,502 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:04:11,502 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:04:16,502 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:04:16,502 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:04:18,695 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 20:04:18,695 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:04:21,504 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:04:21,504 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:04:26,504 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:04:26,504 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:04:28,704 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 20:04:28,704 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:04:31,505 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:04:31,506 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:04:36,506 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:04:36,506 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:04:38,714 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 20:04:38,714 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:04:41,506 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:04:41,506 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:04:46,506 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:04:46,506 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:04:48,724 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 20:04:48,724 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:04:51,506 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:04:51,507 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:04:56,507 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:04:56,508 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:04:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 20:04:58,733 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 20:04:58,733 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:05:01,508 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:05:01,508 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:05:06,509 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:05:06,510 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:05:08,743 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 20:05:08,743 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:05:11,510 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:05:11,510 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:05:16,511 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:05:16,512 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:05:18,753 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 20:05:18,753 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:05:21,512 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:05:21,512 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:05:26,513 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:05:26,513 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:05:28,763 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 20:05:28,763 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:05:31,514 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:05:31,515 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:05:36,515 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:05:36,515 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:05:38,773 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 20:05:38,773 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:05:41,516 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:05:41,517 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:05:46,517 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:05:46,517 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:05:48,782 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 20:05:48,783 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:05:51,517 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:05:51,518 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:05:56,518 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:05:56,519 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:05:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 20:05:58,792 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 20:05:58,792 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:06:01,519 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:06:01,519 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:06:06,520 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:06:06,520 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:06:08,802 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 20:06:08,802 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:06:11,520 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:06:11,521 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:06:16,521 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:06:16,521 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:06:18,805 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 20:06:18,805 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:06:21,521 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:06:21,522 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:06:26,524 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:06:26,524 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:06:28,814 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 20:06:28,814 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:06:31,525 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:06:31,525 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:06:36,526 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:06:36,526 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:06:38,823 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 20:06:38,823 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:06:41,526 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:06:41,526 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:06:46,526 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:06:46,526 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:06:48,833 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 20:06:48,834 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:06:51,526 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:06:51,527 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:06:56,527 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:06:56,527 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:06:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 20:06:58,843 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 20:06:58,843 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:07:01,528 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:07:01,528 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:07:06,528 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:07:06,529 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:07:08,853 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 20:07:08,853 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:07:11,530 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:07:11,530 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:07:16,531 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:07:16,531 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:07:18,863 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 20:07:18,864 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:07:21,531 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:07:21,532 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:07:26,534 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:07:26,535 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:07:28,873 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 20:07:28,873 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:07:31,535 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:07:31,536 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:07:36,538 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:07:36,539 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:07:38,882 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 20:07:38,882 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:07:41,540 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:07:41,540 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:07:46,540 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:07:46,540 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:07:48,892 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 20:07:48,893 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:07:51,541 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:07:51,541 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:07:56,542 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:07:56,542 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:07:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 20:07:58,902 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 20:07:58,902 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:08:01,542 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:08:01,543 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:08:06,544 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:08:06,544 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:08:08,911 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 20:08:08,911 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:08:11,544 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:08:11,544 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:08:16,544 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:08:16,545 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:08:18,920 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 20:08:18,920 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:08:21,545 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:08:21,545 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:08:26,546 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:08:26,546 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:08:28,929 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 20:08:28,929 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:08:31,547 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:08:31,547 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:08:36,548 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:08:36,548 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:08:38,939 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 20:08:38,939 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:08:41,548 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:08:41,548 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:08:46,548 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:08:46,549 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:08:48,949 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 20:08:48,949 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:08:51,549 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:08:51,550 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:08:56,550 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:08:56,550 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:08:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 20:08:58,958 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 20:08:58,958 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:09:01,550 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:09:01,550 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:09:06,551 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:09:06,552 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:09:08,967 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 20:09:08,967 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:09:11,555 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:09:11,556 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:09:16,556 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:09:16,556 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:09:18,976 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 20:09:18,977 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:09:21,556 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:09:21,557 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:09:26,557 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:09:26,558 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:09:28,986 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 20:09:28,986 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:09:31,558 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:09:31,559 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:09:36,559 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:09:36,560 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:09:38,996 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 20:09:38,996 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:09:41,561 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:09:41,562 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:09:46,563 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:09:46,563 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:09:49,005 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 20:09:49,005 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:09:51,563 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:09:51,564 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:09:56,565 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:09:56,565 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:09:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 20:09:59,015 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 20:09:59,015 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:10:01,566 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:10:01,566 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:10:06,566 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:10:06,567 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:10:09,024 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 20:10:09,024 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:10:11,568 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:10:11,568 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:10:16,568 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:10:16,569 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:10:19,034 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 20:10:19,034 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:10:21,569 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:10:21,570 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:10:26,570 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:10:26,571 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:10:29,043 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 20:10:29,043 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:10:31,571 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:10:31,571 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:10:36,571 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:10:36,571 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:10:39,053 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 20:10:39,053 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:10:41,572 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:10:41,572 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:10:46,572 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:10:46,572 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:10:49,063 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 20:10:49,063 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:10:51,572 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:10:51,573 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:10:56,573 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:10:56,574 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:10:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 20:10:59,072 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 20:10:59,072 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:11:01,574 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:11:01,574 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:11:06,574 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:11:06,575 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:11:09,082 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 20:11:09,082 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:11:11,576 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:11:11,576 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:11:16,576 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:11:16,576 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:11:19,094 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 20:11:19,094 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:11:21,576 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:11:21,576 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:11:26,578 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:11:26,578 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:11:29,102 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 20:11:29,102 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:11:31,578 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:11:31,579 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:11:36,579 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:11:36,580 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:11:39,112 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 20:11:39,112 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:11:41,581 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:11:41,581 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:11:46,581 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:11:46,582 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:11:49,121 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 20:11:49,121 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:11:51,582 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:11:51,583 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:11:56,583 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:11:56,584 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:11:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 20:11:59,130 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 20:11:59,130 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:12:01,584 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:12:01,584 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:12:06,585 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:12:06,585 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:12:09,140 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 20:12:09,140 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:12:11,586 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:12:11,586 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:12:16,586 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:12:16,586 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:12:19,149 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 20:12:19,149 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:12:21,587 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:12:21,587 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:12:26,588 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:12:26,588 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:12:29,159 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 20:12:29,159 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:12:31,588 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:12:31,589 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:12:36,589 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:12:36,589 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:12:39,168 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 20:12:39,168 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:12:41,589 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:12:41,589 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:12:46,589 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:12:46,589 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:12:49,180 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 20:12:49,180 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:12:51,589 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:12:51,589 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:12:56,589 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:12:56,590 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:12:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 20:12:59,187 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 20:12:59,187 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:13:01,590 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:13:01,590 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:13:06,591 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:13:06,591 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:13:09,198 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 20:13:09,198 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:13:11,591 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:13:11,592 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:13:16,592 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:13:16,593 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:13:19,207 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 20:13:19,208 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:13:21,594 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:13:21,594 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:13:26,594 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:13:26,594 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:13:29,152 INFO  [http-nio-8080-exec-7] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Incoming request OPTIONS /auth/register from 0:0:0:0:0:0:0:1
2024-12-01 20:13:29,156 DEBUG [http-nio-8080-exec-7] org.springframework.security.web.FilterChainProxy: Securing OPTIONS /auth/register
2024-12-01 20:13:29,164 INFO  [http-nio-8080-exec-7] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Request completed in 12ms with status 200
2024-12-01 20:13:29,168 INFO  [http-nio-8080-exec-8] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Incoming request POST /auth/register from 0:0:0:0:0:0:0:1
2024-12-01 20:13:29,168 DEBUG [http-nio-8080-exec-8] org.springframework.security.web.FilterChainProxy: Securing POST /auth/register
2024-12-01 20:13:29,170 DEBUG [http-nio-8080-exec-8] org.springframework.security.web.authentication.AnonymousAuthenticationFilter: Set SecurityContextHolder to anonymous SecurityContext
2024-12-01 20:13:29,180 DEBUG [http-nio-8080-exec-8] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2024-12-01 20:13:29,182 DEBUG [http-nio-8080-exec-8] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2024-12-01 20:13:29,187 DEBUG [http-nio-8080-exec-8] org.springframework.security.web.authentication.Http403ForbiddenEntryPoint: Pre-authenticated entry point called. Rejecting access
2024-12-01 20:13:29,187 INFO  [http-nio-8080-exec-8] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Request completed in 20ms with status 403
2024-12-01 20:13:29,195 DEBUG [http-nio-8080-exec-8] org.springframework.security.web.FilterChainProxy: Securing POST /error
2024-12-01 20:13:29,198 DEBUG [http-nio-8080-exec-8] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2024-12-01 20:13:29,198 DEBUG [http-nio-8080-exec-8] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2024-12-01 20:13:29,199 DEBUG [http-nio-8080-exec-8] org.springframework.security.web.authentication.AnonymousAuthenticationFilter: Set SecurityContextHolder to anonymous SecurityContext
2024-12-01 20:13:29,199 DEBUG [http-nio-8080-exec-8] org.springframework.security.web.authentication.Http403ForbiddenEntryPoint: Pre-authenticated entry point called. Rejecting access
2024-12-01 20:13:29,217 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 20:13:29,217 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:13:31,594 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:13:31,595 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:13:36,595 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:13:36,596 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:13:39,227 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 20:13:39,227 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:13:41,596 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:13:41,597 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:13:46,597 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:13:46,597 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:13:49,237 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 20:13:49,238 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:13:51,598 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:13:51,599 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:13:56,599 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:13:56,600 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:13:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 20:13:59,247 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 20:13:59,248 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:14:01,600 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:14:01,600 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:14:06,600 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:14:06,601 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:14:09,256 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 20:14:09,256 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:14:11,601 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:14:11,602 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:14:16,603 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:14:16,603 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:14:19,265 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 20:14:19,265 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:14:21,604 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:14:21,604 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:14:26,604 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:14:26,604 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:14:29,274 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 20:14:29,275 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:14:31,605 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:14:31,605 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:14:36,606 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:14:36,606 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:14:39,284 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 20:14:39,284 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:14:41,606 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:14:41,607 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:14:46,607 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:14:46,608 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:14:49,294 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 20:14:49,294 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:14:51,608 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:14:51,609 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:14:56,609 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:14:56,610 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:14:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 20:14:59,303 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2024-12-01 20:14:59,304 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:15:01,610 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:15:01,610 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:15:06,611 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:15:06,611 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:15:09,313 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2024-12-01 20:15:09,313 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:15:11,611 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:15:11,612 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:15:16,613 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:15:16,613 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:15:19,323 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2024-12-01 20:15:19,324 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:15:21,613 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:15:21,613 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:15:26,614 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:15:26,614 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:15:29,333 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2024-12-01 20:15:29,333 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:15:31,614 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:15:31,614 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:15:36,614 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:15:36,614 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:15:39,342 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2024-12-01 20:15:39,342 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:15:41,614 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:15:41,615 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:15:46,615 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:15:46,615 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:15:49,352 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 20:15:49,352 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:15:51,616 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:15:51,617 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:15:56,617 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:15:56,618 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:15:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 20:15:59,361 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 20:15:59,361 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:16:01,618 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:16:01,619 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:16:06,619 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:16:06,620 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:16:09,370 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 20:16:09,370 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:16:11,620 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:16:11,621 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:16:16,621 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:16:16,675 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:16:19,379 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2024-12-01 20:16:19,379 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:16:21,676 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:16:21,677 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:16:26,680 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:16:26,680 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:16:29,388 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2024-12-01 20:16:29,389 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:16:31,683 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:16:31,684 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:16:36,684 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:16:36,684 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:16:39,399 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2024-12-01 20:16:39,399 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:16:41,684 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:16:41,684 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:16:46,686 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:16:46,686 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:16:49,400 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 20:16:49,400 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:16:51,687 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:16:51,687 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:16:56,687 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:16:56,687 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:16:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 20:16:59,410 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 20:16:59,410 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:17:01,687 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:17:01,687 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:17:06,687 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:17:06,688 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:17:09,419 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 20:17:09,419 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:17:11,689 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:17:11,689 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:17:16,689 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:17:16,689 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:17:19,429 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 20:17:19,430 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:17:21,689 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:17:21,690 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:17:26,692 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:17:26,694 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:17:29,439 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2024-12-01 20:17:29,439 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:17:31,697 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:17:31,698 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:17:36,699 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:17:36,699 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:17:39,449 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 20:17:39,449 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:17:41,699 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:17:41,700 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:17:46,700 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:17:46,700 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:17:49,458 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2024-12-01 20:17:49,458 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:17:51,701 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:17:51,701 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:17:56,701 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:17:56,701 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:17:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 20:17:59,468 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2024-12-01 20:17:59,469 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:18:01,701 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:18:01,701 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:18:06,701 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:18:06,701 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:18:09,478 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 20:18:09,479 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:18:11,702 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:18:11,702 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:18:15,093 INFO  [http-nio-8080-exec-10] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Incoming request OPTIONS /auth/signup from 0:0:0:0:0:0:0:1
2024-12-01 20:18:15,093 DEBUG [http-nio-8080-exec-10] org.springframework.security.web.FilterChainProxy: Securing OPTIONS /auth/signup
2024-12-01 20:18:15,094 INFO  [http-nio-8080-exec-10] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Request completed in 1ms with status 200
2024-12-01 20:18:15,097 INFO  [http-nio-8080-exec-1] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Incoming request POST /auth/signup from 0:0:0:0:0:0:0:1
2024-12-01 20:18:15,098 DEBUG [http-nio-8080-exec-1] org.springframework.security.web.FilterChainProxy: Securing POST /auth/signup
2024-12-01 20:18:15,099 DEBUG [http-nio-8080-exec-1] org.springframework.security.web.authentication.AnonymousAuthenticationFilter: Set SecurityContextHolder to anonymous SecurityContext
2024-12-01 20:18:15,100 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#signup(SignupRequest)
2024-12-01 20:18:15,101 DEBUG [http-nio-8080-exec-1] org.springframework.security.web.FilterChainProxy: Secured POST /auth/signup
2024-12-01 20:18:15,102 DEBUG [http-nio-8080-exec-1] org.springframework.core.log.LogFormatUtils: POST "/auth/signup", parameters={}
2024-12-01 20:18:15,102 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#signup(SignupRequest)
2024-12-01 20:18:15,104 DEBUG [http-nio-8080-exec-1] org.springframework.core.log.LogFormatUtils: Read "application/json;charset=UTF-8" to [SignupRequest(username=mohityadav.bkbiet25@gmail.com, email=mohityadav.bkbiet25@gmail.com, password= (truncated)...]
2024-12-01 20:18:15,104 INFO  [http-nio-8080-exec-1] net.engineeringdigest.ecommerce.controller.AuthController: Received signup request for user: mohityadav.bkbiet25@gmail.com
2024-12-01 20:18:15,104 DEBUG [http-nio-8080-exec-1] net.engineeringdigest.ecommerce.service.UserService: Creating new user with username: mohityadav.bkbiet25@gmail.com
2024-12-01 20:18:15,105 DEBUG [http-nio-8080-exec-1] org.springframework.data.mongodb.repository.query.MongoQueryCreator: Created query Query: { "username" : "mohityadav.bkbiet25@gmail.com"}, Fields: {}, Sort: {}
2024-12-01 20:18:15,105 DEBUG [http-nio-8080-exec-1] org.springframework.data.mongodb.core.MongoTemplate: find using query: { "username" : "mohityadav.bkbiet25@gmail.com"} fields: Document{{}} for class: class net.engineeringdigest.ecommerce.entity.User in collection: users
2024-12-01 20:18:15,106 DEBUG [http-nio-8080-exec-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 263. Command: {"find": "users", "filter": {"username": "mohityadav.bkbiet25@gmail.com"}, "limit": 2, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "kwda1hmrSUumq/YEvQCRmw==", "subType": "04"}}}}
2024-12-01 20:18:15,108 DEBUG [http-nio-8080-exec-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" succeeded in 1.44 ms using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 263. Command reply: {"cursor": {"firstBatch": [], "id": 0, "ns": "ecommerce.users"}, "ok": 1.0}
2024-12-01 20:18:15,108 DEBUG [http-nio-8080-exec-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Received batch of 0 documents with cursorId 0 from server localhost:27017
2024-12-01 20:18:15,109 DEBUG [http-nio-8080-exec-1] org.springframework.data.mongodb.repository.query.MongoQueryCreator: Created query Query: { "email" : "mohityadav.bkbiet25@gmail.com"}, Fields: {}, Sort: {}
2024-12-01 20:18:15,109 DEBUG [http-nio-8080-exec-1] org.springframework.data.mongodb.core.MongoTemplate: find using query: { "email" : "mohityadav.bkbiet25@gmail.com"} fields: Document{{}} for class: class net.engineeringdigest.ecommerce.entity.User in collection: users
2024-12-01 20:18:15,110 DEBUG [http-nio-8080-exec-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 264. Command: {"find": "users", "filter": {"email": "mohityadav.bkbiet25@gmail.com"}, "limit": 2, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "kwda1hmrSUumq/YEvQCRmw==", "subType": "04"}}}}
2024-12-01 20:18:15,111 DEBUG [http-nio-8080-exec-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" succeeded in 0.85 ms using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 264. Command reply: {"cursor": {"firstBatch": [], "id": 0, "ns": "ecommerce.users"}, "ok": 1.0}
2024-12-01 20:18:15,111 DEBUG [http-nio-8080-exec-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Received batch of 0 documents with cursorId 0 from server localhost:27017
2024-12-01 20:18:15,201 DEBUG [http-nio-8080-exec-1] net.engineeringdigest.ecommerce.service.UserService: Saving new user to database: mohityadav.bkbiet25@gmail.com
2024-12-01 20:18:15,204 DEBUG [http-nio-8080-exec-1] org.springframework.data.mongodb.core.MongoTemplate: Inserting Document containing fields: [username, email, password, roles, accountNonExpired, accountNonLocked, credentialsNonExpired, enabled, _class] in collection: users
2024-12-01 20:18:15,204 DEBUG [http-nio-8080-exec-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: retryWrites set to true but the server is a standalone server.
2024-12-01 20:18:15,205 DEBUG [http-nio-8080-exec-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: retryWrites set to true but the server is a standalone server.
2024-12-01 20:18:15,206 DEBUG [http-nio-8080-exec-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "insert" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 265. Command: {"insert": "users", "ordered": true, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "kwda1hmrSUumq/YEvQCRmw==", "subType": "04"}}}, "documents": [{"_id": {"$oid": "674c772f31ab277b698f63a6"}, "username": "mohityadav.bkbiet25@gmail.com", "email": "mohityadav.bkbiet25@gmail.com", "password": "$2a$10$yAdQddNCMukhl178u9NiheZyC4JO52hwXswnWztm/7CrX.ptkKHYq", "roles": ["ROLE_USER"], "accountNonExpired": true, "accountNonLocked": true, "credentialsNonExpired": true, "enabled": true, "_class": "net.engineeringdigest.ecommerce.entity.User"}]}
2024-12-01 20:18:15,207 DEBUG [http-nio-8080-exec-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "insert" succeeded in 1.10 ms using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 265. Command reply: {"n": 1, "ok": 1.0}
2024-12-01 20:18:15,207 INFO  [http-nio-8080-exec-1] net.engineeringdigest.ecommerce.service.UserService: Successfully created new user: mohityadav.bkbiet25@gmail.com
2024-12-01 20:18:15,207 INFO  [http-nio-8080-exec-1] net.engineeringdigest.ecommerce.controller.AuthController: Successfully created user: mohityadav.bkbiet25@gmail.com
2024-12-01 20:18:15,207 INFO  [http-nio-8080-exec-1] net.engineeringdigest.ecommerce.aspect.LoggingAspect: Method: signup completed in 103ms
2024-12-01 20:18:15,209 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata: [Producer clientId=producer-1] Resetting the last seen epoch of partition audit-logs-0 to 0 since the associated topicId changed from null to MM4QZNYlQZ6B9YYZSXeWDQ
2024-12-01 20:18:15,209 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata: [Producer clientId=producer-1] Resetting the last seen epoch of partition audit-logs-2 to 0 since the associated topicId changed from null to MM4QZNYlQZ6B9YYZSXeWDQ
2024-12-01 20:18:15,209 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata: [Producer clientId=producer-1] Resetting the last seen epoch of partition audit-logs-1 to 0 since the associated topicId changed from null to MM4QZNYlQZ6B9YYZSXeWDQ
2024-12-01 20:18:15,210 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor: Using 'application/json', given [application/json, text/plain, */*] and supported [text/plain, */*, application/json, application/*+json]
2024-12-01 20:18:15,210 DEBUG [http-nio-8080-exec-1] org.springframework.core.log.LogFormatUtils: Writing ["User registered successfully"]
2024-12-01 20:18:15,211 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.FrameworkServlet: Completed 200 OK
2024-12-01 20:18:15,212 INFO  [http-nio-8080-exec-1] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Request completed in 114ms with status 200
2024-12-01 20:18:16,703 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:18:16,703 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:18:19,488 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 20:18:19,488 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:18:21,703 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:18:21,703 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:18:26,704 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:18:26,704 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:18:29,497 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 20:18:29,497 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:18:31,704 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:18:31,705 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:18:36,706 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:18:36,706 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:18:37,917 INFO  [http-nio-8080-exec-2] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Incoming request OPTIONS /auth/login from 0:0:0:0:0:0:0:1
2024-12-01 20:18:37,918 DEBUG [http-nio-8080-exec-2] org.springframework.security.web.FilterChainProxy: Securing OPTIONS /auth/login
2024-12-01 20:18:37,920 INFO  [http-nio-8080-exec-2] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Request completed in 3ms with status 200
2024-12-01 20:18:37,926 INFO  [http-nio-8080-exec-3] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Incoming request POST /auth/login from 0:0:0:0:0:0:0:1
2024-12-01 20:18:37,927 DEBUG [http-nio-8080-exec-3] org.springframework.security.web.FilterChainProxy: Securing POST /auth/login
2024-12-01 20:18:37,928 DEBUG [http-nio-8080-exec-3] org.springframework.security.web.authentication.AnonymousAuthenticationFilter: Set SecurityContextHolder to anonymous SecurityContext
2024-12-01 20:18:37,928 DEBUG [http-nio-8080-exec-3] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#login(LoginRequest)
2024-12-01 20:18:37,929 DEBUG [http-nio-8080-exec-3] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#login(LoginRequest)
2024-12-01 20:18:37,929 DEBUG [http-nio-8080-exec-3] org.springframework.security.web.FilterChainProxy: Secured POST /auth/login
2024-12-01 20:18:37,929 DEBUG [http-nio-8080-exec-3] org.springframework.core.log.LogFormatUtils: POST "/auth/login", parameters={}
2024-12-01 20:18:37,929 DEBUG [http-nio-8080-exec-3] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#login(LoginRequest)
2024-12-01 20:18:37,930 DEBUG [http-nio-8080-exec-3] org.springframework.core.log.LogFormatUtils: Read "application/json;charset=UTF-8" to [LoginRequest(username=Mohit, password=Mohit2123)]
2024-12-01 20:18:37,930 INFO  [http-nio-8080-exec-3] net.engineeringdigest.ecommerce.controller.AuthController: Received login request for user: Mohit
2024-12-01 20:18:37,931 DEBUG [http-nio-8080-exec-3] org.springframework.data.mongodb.repository.query.MongoQueryCreator: Created query Query: { "username" : "Mohit"}, Fields: {}, Sort: {}
2024-12-01 20:18:37,931 DEBUG [http-nio-8080-exec-3] org.springframework.data.mongodb.core.MongoTemplate: find using query: { "username" : "Mohit"} fields: Document{{}} for class: class net.engineeringdigest.ecommerce.entity.User in collection: users
2024-12-01 20:18:37,932 DEBUG [http-nio-8080-exec-3] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 269. Command: {"find": "users", "filter": {"username": "Mohit"}, "limit": 2, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "kwda1hmrSUumq/YEvQCRmw==", "subType": "04"}}}}
2024-12-01 20:18:37,933 DEBUG [http-nio-8080-exec-3] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" succeeded in 1.28 ms using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 269. Command reply: {"cursor": {"firstBatch": [], "id": 0, "ns": "ecommerce.users"}, "ok": 1.0}
2024-12-01 20:18:37,934 DEBUG [http-nio-8080-exec-3] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Received batch of 0 documents with cursorId 0 from server localhost:27017
2024-12-01 20:18:38,017 DEBUG [http-nio-8080-exec-3] org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider: Failed to find user 'Mohit'
2024-12-01 20:18:38,018 ERROR [http-nio-8080-exec-3] net.engineeringdigest.ecommerce.controller.AuthController: Authentication failed for user: Mohit
org.springframework.security.authentication.BadCredentialsException: Bad credentials
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:141)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182)
	at net.engineeringdigest.ecommerce.controller.AuthController.login(AuthController.java:59)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at net.engineeringdigest.ecommerce.aspect.LoggingAspect.logApiCall(LoggingAspect.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:173)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:702)
	at net.engineeringdigest.ecommerce.controller.AuthController$$SpringCGLIB$$0.login(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:477)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:338)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:80)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:126)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at net.engineeringdigest.ecommerce.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:32)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:321)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:222)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at net.engineeringdigest.ecommerce.filter.RequestTracingFilter.doFilterInternal(RequestTracingFilter.java:39)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2024-12-01 20:18:38,022 INFO  [http-nio-8080-exec-3] net.engineeringdigest.ecommerce.aspect.LoggingAspect: Method: login completed in 92ms
2024-12-01 20:18:38,023 DEBUG [http-nio-8080-exec-3] org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-12-01 20:18:38,025 DEBUG [http-nio-8080-exec-3] org.springframework.core.log.LogFormatUtils: Writing [ErrorResponse(status=401, message=Authentication failed, details=Bad credentials)]
2024-12-01 20:18:38,026 DEBUG [http-nio-8080-exec-3] org.springframework.web.servlet.FrameworkServlet: Completed 401 UNAUTHORIZED
2024-12-01 20:18:38,027 INFO  [http-nio-8080-exec-3] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Request completed in 101ms with status 401
2024-12-01 20:18:39,506 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 20:18:39,506 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:18:41,706 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:18:41,706 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:18:43,099 INFO  [http-nio-8080-exec-4] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Incoming request OPTIONS /auth/login from 0:0:0:0:0:0:0:1
2024-12-01 20:18:43,100 DEBUG [http-nio-8080-exec-4] org.springframework.security.web.FilterChainProxy: Securing OPTIONS /auth/login
2024-12-01 20:18:43,101 INFO  [http-nio-8080-exec-4] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Request completed in 2ms with status 200
2024-12-01 20:18:43,104 INFO  [http-nio-8080-exec-5] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Incoming request POST /auth/login from 0:0:0:0:0:0:0:1
2024-12-01 20:18:43,104 DEBUG [http-nio-8080-exec-5] org.springframework.security.web.FilterChainProxy: Securing POST /auth/login
2024-12-01 20:18:43,105 DEBUG [http-nio-8080-exec-5] org.springframework.security.web.authentication.AnonymousAuthenticationFilter: Set SecurityContextHolder to anonymous SecurityContext
2024-12-01 20:18:43,105 DEBUG [http-nio-8080-exec-5] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#login(LoginRequest)
2024-12-01 20:18:43,106 DEBUG [http-nio-8080-exec-5] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#login(LoginRequest)
2024-12-01 20:18:43,106 DEBUG [http-nio-8080-exec-5] org.springframework.security.web.FilterChainProxy: Secured POST /auth/login
2024-12-01 20:18:43,106 DEBUG [http-nio-8080-exec-5] org.springframework.core.log.LogFormatUtils: POST "/auth/login", parameters={}
2024-12-01 20:18:43,106 DEBUG [http-nio-8080-exec-5] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#login(LoginRequest)
2024-12-01 20:18:43,107 DEBUG [http-nio-8080-exec-5] org.springframework.core.log.LogFormatUtils: Read "application/json;charset=UTF-8" to [LoginRequest(username=Mohit, password=Mohit123)]
2024-12-01 20:18:43,107 INFO  [http-nio-8080-exec-5] net.engineeringdigest.ecommerce.controller.AuthController: Received login request for user: Mohit
2024-12-01 20:18:43,107 DEBUG [http-nio-8080-exec-5] org.springframework.data.mongodb.repository.query.MongoQueryCreator: Created query Query: { "username" : "Mohit"}, Fields: {}, Sort: {}
2024-12-01 20:18:43,108 DEBUG [http-nio-8080-exec-5] org.springframework.data.mongodb.core.MongoTemplate: find using query: { "username" : "Mohit"} fields: Document{{}} for class: class net.engineeringdigest.ecommerce.entity.User in collection: users
2024-12-01 20:18:43,108 DEBUG [http-nio-8080-exec-5] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 270. Command: {"find": "users", "filter": {"username": "Mohit"}, "limit": 2, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "kwda1hmrSUumq/YEvQCRmw==", "subType": "04"}}}}
2024-12-01 20:18:43,109 DEBUG [http-nio-8080-exec-5] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" succeeded in 0.74 ms using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 270. Command reply: {"cursor": {"firstBatch": [], "id": 0, "ns": "ecommerce.users"}, "ok": 1.0}
2024-12-01 20:18:43,109 DEBUG [http-nio-8080-exec-5] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Received batch of 0 documents with cursorId 0 from server localhost:27017
2024-12-01 20:18:43,194 DEBUG [http-nio-8080-exec-5] org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider: Failed to find user 'Mohit'
2024-12-01 20:18:43,194 ERROR [http-nio-8080-exec-5] net.engineeringdigest.ecommerce.controller.AuthController: Authentication failed for user: Mohit
org.springframework.security.authentication.BadCredentialsException: Bad credentials
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:141)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182)
	at net.engineeringdigest.ecommerce.controller.AuthController.login(AuthController.java:59)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at net.engineeringdigest.ecommerce.aspect.LoggingAspect.logApiCall(LoggingAspect.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:173)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:702)
	at net.engineeringdigest.ecommerce.controller.AuthController$$SpringCGLIB$$0.login(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:477)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:338)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:80)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:126)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at net.engineeringdigest.ecommerce.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:32)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:321)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:222)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at net.engineeringdigest.ecommerce.filter.RequestTracingFilter.doFilterInternal(RequestTracingFilter.java:39)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2024-12-01 20:18:43,195 INFO  [http-nio-8080-exec-5] net.engineeringdigest.ecommerce.aspect.LoggingAspect: Method: login completed in 88ms
2024-12-01 20:18:43,196 DEBUG [http-nio-8080-exec-5] org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-12-01 20:18:43,196 DEBUG [http-nio-8080-exec-5] org.springframework.core.log.LogFormatUtils: Writing [ErrorResponse(status=401, message=Authentication failed, details=Bad credentials)]
2024-12-01 20:18:43,197 DEBUG [http-nio-8080-exec-5] org.springframework.web.servlet.FrameworkServlet: Completed 401 UNAUTHORIZED
2024-12-01 20:18:43,198 INFO  [http-nio-8080-exec-5] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Request completed in 94ms with status 401
2024-12-01 20:18:44,711 INFO  [http-nio-8080-exec-6] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Incoming request POST /auth/login from 0:0:0:0:0:0:0:1
2024-12-01 20:18:44,712 DEBUG [http-nio-8080-exec-6] org.springframework.security.web.FilterChainProxy: Securing POST /auth/login
2024-12-01 20:18:44,713 DEBUG [http-nio-8080-exec-6] org.springframework.security.web.authentication.AnonymousAuthenticationFilter: Set SecurityContextHolder to anonymous SecurityContext
2024-12-01 20:18:44,714 DEBUG [http-nio-8080-exec-6] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#login(LoginRequest)
2024-12-01 20:18:44,714 DEBUG [http-nio-8080-exec-6] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#login(LoginRequest)
2024-12-01 20:18:44,714 DEBUG [http-nio-8080-exec-6] org.springframework.security.web.FilterChainProxy: Secured POST /auth/login
2024-12-01 20:18:44,715 DEBUG [http-nio-8080-exec-6] org.springframework.core.log.LogFormatUtils: POST "/auth/login", parameters={}
2024-12-01 20:18:44,715 DEBUG [http-nio-8080-exec-6] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#login(LoginRequest)
2024-12-01 20:18:44,715 DEBUG [http-nio-8080-exec-6] org.springframework.core.log.LogFormatUtils: Read "application/json;charset=UTF-8" to [LoginRequest(username=Mohit, password=Mohit123)]
2024-12-01 20:18:44,716 INFO  [http-nio-8080-exec-6] net.engineeringdigest.ecommerce.controller.AuthController: Received login request for user: Mohit
2024-12-01 20:18:44,716 DEBUG [http-nio-8080-exec-6] org.springframework.data.mongodb.repository.query.MongoQueryCreator: Created query Query: { "username" : "Mohit"}, Fields: {}, Sort: {}
2024-12-01 20:18:44,716 DEBUG [http-nio-8080-exec-6] org.springframework.data.mongodb.core.MongoTemplate: find using query: { "username" : "Mohit"} fields: Document{{}} for class: class net.engineeringdigest.ecommerce.entity.User in collection: users
2024-12-01 20:18:44,717 DEBUG [http-nio-8080-exec-6] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 271. Command: {"find": "users", "filter": {"username": "Mohit"}, "limit": 2, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "kwda1hmrSUumq/YEvQCRmw==", "subType": "04"}}}}
2024-12-01 20:18:44,718 DEBUG [http-nio-8080-exec-6] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" succeeded in 1.05 ms using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 271. Command reply: {"cursor": {"firstBatch": [], "id": 0, "ns": "ecommerce.users"}, "ok": 1.0}
2024-12-01 20:18:44,719 DEBUG [http-nio-8080-exec-6] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Received batch of 0 documents with cursorId 0 from server localhost:27017
2024-12-01 20:18:44,806 DEBUG [http-nio-8080-exec-6] org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider: Failed to find user 'Mohit'
2024-12-01 20:18:44,806 ERROR [http-nio-8080-exec-6] net.engineeringdigest.ecommerce.controller.AuthController: Authentication failed for user: Mohit
org.springframework.security.authentication.BadCredentialsException: Bad credentials
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:141)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182)
	at net.engineeringdigest.ecommerce.controller.AuthController.login(AuthController.java:59)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at net.engineeringdigest.ecommerce.aspect.LoggingAspect.logApiCall(LoggingAspect.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:173)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:702)
	at net.engineeringdigest.ecommerce.controller.AuthController$$SpringCGLIB$$0.login(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:477)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:338)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:80)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:126)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at net.engineeringdigest.ecommerce.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:32)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:321)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:222)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at net.engineeringdigest.ecommerce.filter.RequestTracingFilter.doFilterInternal(RequestTracingFilter.java:39)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2024-12-01 20:18:44,807 INFO  [http-nio-8080-exec-6] net.engineeringdigest.ecommerce.aspect.LoggingAspect: Method: login completed in 91ms
2024-12-01 20:18:44,808 DEBUG [http-nio-8080-exec-6] org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-12-01 20:18:44,808 DEBUG [http-nio-8080-exec-6] org.springframework.core.log.LogFormatUtils: Writing [ErrorResponse(status=401, message=Authentication failed, details=Bad credentials)]
2024-12-01 20:18:44,809 DEBUG [http-nio-8080-exec-6] org.springframework.web.servlet.FrameworkServlet: Completed 401 UNAUTHORIZED
2024-12-01 20:18:44,809 INFO  [http-nio-8080-exec-6] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Request completed in 98ms with status 401
2024-12-01 20:18:46,439 INFO  [http-nio-8080-exec-7] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Incoming request POST /auth/login from 0:0:0:0:0:0:0:1
2024-12-01 20:18:46,439 DEBUG [http-nio-8080-exec-7] org.springframework.security.web.FilterChainProxy: Securing POST /auth/login
2024-12-01 20:18:46,440 DEBUG [http-nio-8080-exec-7] org.springframework.security.web.authentication.AnonymousAuthenticationFilter: Set SecurityContextHolder to anonymous SecurityContext
2024-12-01 20:18:46,440 DEBUG [http-nio-8080-exec-7] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#login(LoginRequest)
2024-12-01 20:18:46,440 DEBUG [http-nio-8080-exec-7] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#login(LoginRequest)
2024-12-01 20:18:46,441 DEBUG [http-nio-8080-exec-7] org.springframework.security.web.FilterChainProxy: Secured POST /auth/login
2024-12-01 20:18:46,441 DEBUG [http-nio-8080-exec-7] org.springframework.core.log.LogFormatUtils: POST "/auth/login", parameters={}
2024-12-01 20:18:46,441 DEBUG [http-nio-8080-exec-7] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#login(LoginRequest)
2024-12-01 20:18:46,441 DEBUG [http-nio-8080-exec-7] org.springframework.core.log.LogFormatUtils: Read "application/json;charset=UTF-8" to [LoginRequest(username=Mohit, password=Mohit123)]
2024-12-01 20:18:46,442 INFO  [http-nio-8080-exec-7] net.engineeringdigest.ecommerce.controller.AuthController: Received login request for user: Mohit
2024-12-01 20:18:46,442 DEBUG [http-nio-8080-exec-7] org.springframework.data.mongodb.repository.query.MongoQueryCreator: Created query Query: { "username" : "Mohit"}, Fields: {}, Sort: {}
2024-12-01 20:18:46,442 DEBUG [http-nio-8080-exec-7] org.springframework.data.mongodb.core.MongoTemplate: find using query: { "username" : "Mohit"} fields: Document{{}} for class: class net.engineeringdigest.ecommerce.entity.User in collection: users
2024-12-01 20:18:46,443 DEBUG [http-nio-8080-exec-7] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 272. Command: {"find": "users", "filter": {"username": "Mohit"}, "limit": 2, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "kwda1hmrSUumq/YEvQCRmw==", "subType": "04"}}}}
2024-12-01 20:18:46,444 DEBUG [http-nio-8080-exec-7] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" succeeded in 0.84 ms using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 272. Command reply: {"cursor": {"firstBatch": [], "id": 0, "ns": "ecommerce.users"}, "ok": 1.0}
2024-12-01 20:18:46,444 DEBUG [http-nio-8080-exec-7] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Received batch of 0 documents with cursorId 0 from server localhost:27017
2024-12-01 20:18:46,531 DEBUG [http-nio-8080-exec-7] org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider: Failed to find user 'Mohit'
2024-12-01 20:18:46,534 ERROR [http-nio-8080-exec-7] net.engineeringdigest.ecommerce.controller.AuthController: Authentication failed for user: Mohit
org.springframework.security.authentication.BadCredentialsException: Bad credentials
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:141)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182)
	at net.engineeringdigest.ecommerce.controller.AuthController.login(AuthController.java:59)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at net.engineeringdigest.ecommerce.aspect.LoggingAspect.logApiCall(LoggingAspect.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:173)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:702)
	at net.engineeringdigest.ecommerce.controller.AuthController$$SpringCGLIB$$0.login(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:477)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:338)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:80)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:126)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at net.engineeringdigest.ecommerce.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:32)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:321)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:222)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at net.engineeringdigest.ecommerce.filter.RequestTracingFilter.doFilterInternal(RequestTracingFilter.java:39)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2024-12-01 20:18:46,535 INFO  [http-nio-8080-exec-7] net.engineeringdigest.ecommerce.aspect.LoggingAspect: Method: login completed in 93ms
2024-12-01 20:18:46,536 DEBUG [http-nio-8080-exec-7] org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-12-01 20:18:46,536 DEBUG [http-nio-8080-exec-7] org.springframework.core.log.LogFormatUtils: Writing [ErrorResponse(status=401, message=Authentication failed, details=Bad credentials)]
2024-12-01 20:18:46,536 DEBUG [http-nio-8080-exec-7] org.springframework.web.servlet.FrameworkServlet: Completed 401 UNAUTHORIZED
2024-12-01 20:18:46,537 INFO  [http-nio-8080-exec-7] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Request completed in 98ms with status 401
2024-12-01 20:18:46,707 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:18:46,707 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:18:47,315 INFO  [http-nio-8080-exec-8] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Incoming request POST /auth/login from 0:0:0:0:0:0:0:1
2024-12-01 20:18:47,316 DEBUG [http-nio-8080-exec-8] org.springframework.security.web.FilterChainProxy: Securing POST /auth/login
2024-12-01 20:18:47,317 DEBUG [http-nio-8080-exec-8] org.springframework.security.web.authentication.AnonymousAuthenticationFilter: Set SecurityContextHolder to anonymous SecurityContext
2024-12-01 20:18:47,317 DEBUG [http-nio-8080-exec-8] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#login(LoginRequest)
2024-12-01 20:18:47,317 DEBUG [http-nio-8080-exec-8] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#login(LoginRequest)
2024-12-01 20:18:47,317 DEBUG [http-nio-8080-exec-8] org.springframework.security.web.FilterChainProxy: Secured POST /auth/login
2024-12-01 20:18:47,317 DEBUG [http-nio-8080-exec-8] org.springframework.core.log.LogFormatUtils: POST "/auth/login", parameters={}
2024-12-01 20:18:47,318 DEBUG [http-nio-8080-exec-8] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#login(LoginRequest)
2024-12-01 20:18:47,318 DEBUG [http-nio-8080-exec-8] org.springframework.core.log.LogFormatUtils: Read "application/json;charset=UTF-8" to [LoginRequest(username=Mohit, password=Mohit123)]
2024-12-01 20:18:47,318 INFO  [http-nio-8080-exec-8] net.engineeringdigest.ecommerce.controller.AuthController: Received login request for user: Mohit
2024-12-01 20:18:47,319 DEBUG [http-nio-8080-exec-8] org.springframework.data.mongodb.repository.query.MongoQueryCreator: Created query Query: { "username" : "Mohit"}, Fields: {}, Sort: {}
2024-12-01 20:18:47,319 DEBUG [http-nio-8080-exec-8] org.springframework.data.mongodb.core.MongoTemplate: find using query: { "username" : "Mohit"} fields: Document{{}} for class: class net.engineeringdigest.ecommerce.entity.User in collection: users
2024-12-01 20:18:47,320 DEBUG [http-nio-8080-exec-8] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 273. Command: {"find": "users", "filter": {"username": "Mohit"}, "limit": 2, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "kwda1hmrSUumq/YEvQCRmw==", "subType": "04"}}}}
2024-12-01 20:18:47,320 DEBUG [http-nio-8080-exec-8] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" succeeded in 0.75 ms using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 273. Command reply: {"cursor": {"firstBatch": [], "id": 0, "ns": "ecommerce.users"}, "ok": 1.0}
2024-12-01 20:18:47,321 DEBUG [http-nio-8080-exec-8] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Received batch of 0 documents with cursorId 0 from server localhost:27017
2024-12-01 20:18:47,408 DEBUG [http-nio-8080-exec-8] org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider: Failed to find user 'Mohit'
2024-12-01 20:18:47,408 ERROR [http-nio-8080-exec-8] net.engineeringdigest.ecommerce.controller.AuthController: Authentication failed for user: Mohit
org.springframework.security.authentication.BadCredentialsException: Bad credentials
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:141)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182)
	at net.engineeringdigest.ecommerce.controller.AuthController.login(AuthController.java:59)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at net.engineeringdigest.ecommerce.aspect.LoggingAspect.logApiCall(LoggingAspect.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:173)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:702)
	at net.engineeringdigest.ecommerce.controller.AuthController$$SpringCGLIB$$0.login(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:477)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:338)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:80)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:126)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at net.engineeringdigest.ecommerce.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:32)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:321)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:222)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at net.engineeringdigest.ecommerce.filter.RequestTracingFilter.doFilterInternal(RequestTracingFilter.java:39)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2024-12-01 20:18:47,409 INFO  [http-nio-8080-exec-8] net.engineeringdigest.ecommerce.aspect.LoggingAspect: Method: login completed in 91ms
2024-12-01 20:18:47,410 DEBUG [http-nio-8080-exec-8] org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-12-01 20:18:47,410 DEBUG [http-nio-8080-exec-8] org.springframework.core.log.LogFormatUtils: Writing [ErrorResponse(status=401, message=Authentication failed, details=Bad credentials)]
2024-12-01 20:18:47,410 DEBUG [http-nio-8080-exec-8] org.springframework.web.servlet.FrameworkServlet: Completed 401 UNAUTHORIZED
2024-12-01 20:18:47,411 INFO  [http-nio-8080-exec-8] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Request completed in 96ms with status 401
2024-12-01 20:18:47,520 INFO  [http-nio-8080-exec-9] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Incoming request POST /auth/login from 0:0:0:0:0:0:0:1
2024-12-01 20:18:47,521 DEBUG [http-nio-8080-exec-9] org.springframework.security.web.FilterChainProxy: Securing POST /auth/login
2024-12-01 20:18:47,521 DEBUG [http-nio-8080-exec-9] org.springframework.security.web.authentication.AnonymousAuthenticationFilter: Set SecurityContextHolder to anonymous SecurityContext
2024-12-01 20:18:47,522 DEBUG [http-nio-8080-exec-9] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#login(LoginRequest)
2024-12-01 20:18:47,522 DEBUG [http-nio-8080-exec-9] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#login(LoginRequest)
2024-12-01 20:18:47,522 DEBUG [http-nio-8080-exec-9] org.springframework.security.web.FilterChainProxy: Secured POST /auth/login
2024-12-01 20:18:47,522 DEBUG [http-nio-8080-exec-9] org.springframework.core.log.LogFormatUtils: POST "/auth/login", parameters={}
2024-12-01 20:18:47,522 DEBUG [http-nio-8080-exec-9] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#login(LoginRequest)
2024-12-01 20:18:47,523 DEBUG [http-nio-8080-exec-9] org.springframework.core.log.LogFormatUtils: Read "application/json;charset=UTF-8" to [LoginRequest(username=Mohit, password=Mohit123)]
2024-12-01 20:18:47,523 INFO  [http-nio-8080-exec-9] net.engineeringdigest.ecommerce.controller.AuthController: Received login request for user: Mohit
2024-12-01 20:18:47,523 DEBUG [http-nio-8080-exec-9] org.springframework.data.mongodb.repository.query.MongoQueryCreator: Created query Query: { "username" : "Mohit"}, Fields: {}, Sort: {}
2024-12-01 20:18:47,524 DEBUG [http-nio-8080-exec-9] org.springframework.data.mongodb.core.MongoTemplate: find using query: { "username" : "Mohit"} fields: Document{{}} for class: class net.engineeringdigest.ecommerce.entity.User in collection: users
2024-12-01 20:18:47,524 DEBUG [http-nio-8080-exec-9] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 275. Command: {"find": "users", "filter": {"username": "Mohit"}, "limit": 2, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "kwda1hmrSUumq/YEvQCRmw==", "subType": "04"}}}}
2024-12-01 20:18:47,525 DEBUG [http-nio-8080-exec-9] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" succeeded in 0.75 ms using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 275. Command reply: {"cursor": {"firstBatch": [], "id": 0, "ns": "ecommerce.users"}, "ok": 1.0}
2024-12-01 20:18:47,525 DEBUG [http-nio-8080-exec-9] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Received batch of 0 documents with cursorId 0 from server localhost:27017
2024-12-01 20:18:47,612 DEBUG [http-nio-8080-exec-9] org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider: Failed to find user 'Mohit'
2024-12-01 20:18:47,613 ERROR [http-nio-8080-exec-9] net.engineeringdigest.ecommerce.controller.AuthController: Authentication failed for user: Mohit
org.springframework.security.authentication.BadCredentialsException: Bad credentials
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:141)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182)
	at net.engineeringdigest.ecommerce.controller.AuthController.login(AuthController.java:59)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at net.engineeringdigest.ecommerce.aspect.LoggingAspect.logApiCall(LoggingAspect.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:173)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:702)
	at net.engineeringdigest.ecommerce.controller.AuthController$$SpringCGLIB$$0.login(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:477)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:338)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:80)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:126)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at net.engineeringdigest.ecommerce.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:32)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:321)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:222)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at net.engineeringdigest.ecommerce.filter.RequestTracingFilter.doFilterInternal(RequestTracingFilter.java:39)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2024-12-01 20:18:47,613 INFO  [http-nio-8080-exec-9] net.engineeringdigest.ecommerce.aspect.LoggingAspect: Method: login completed in 90ms
2024-12-01 20:18:47,614 DEBUG [http-nio-8080-exec-9] org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-12-01 20:18:47,615 DEBUG [http-nio-8080-exec-9] org.springframework.core.log.LogFormatUtils: Writing [ErrorResponse(status=401, message=Authentication failed, details=Bad credentials)]
2024-12-01 20:18:47,615 DEBUG [http-nio-8080-exec-9] org.springframework.web.servlet.FrameworkServlet: Completed 401 UNAUTHORIZED
2024-12-01 20:18:47,616 INFO  [http-nio-8080-exec-9] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Request completed in 96ms with status 401
2024-12-01 20:18:49,517 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 20:18:49,518 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:18:51,707 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:18:51,707 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:18:56,707 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:18:56,707 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:18:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 20:18:59,525 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 20:18:59,525 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:19:01,707 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:19:01,708 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:19:06,708 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:19:06,708 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:19:09,535 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 20:19:09,536 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:19:11,708 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:19:11,708 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:19:16,709 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:19:16,709 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:19:19,141 INFO  [http-nio-8080-exec-10] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Incoming request OPTIONS /auth/signup from 0:0:0:0:0:0:0:1
2024-12-01 20:19:19,144 DEBUG [http-nio-8080-exec-10] org.springframework.security.web.FilterChainProxy: Securing OPTIONS /auth/signup
2024-12-01 20:19:19,146 INFO  [http-nio-8080-exec-10] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Request completed in 5ms with status 200
2024-12-01 20:19:19,149 INFO  [http-nio-8080-exec-1] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Incoming request POST /auth/signup from 0:0:0:0:0:0:0:1
2024-12-01 20:19:19,150 DEBUG [http-nio-8080-exec-1] org.springframework.security.web.FilterChainProxy: Securing POST /auth/signup
2024-12-01 20:19:19,151 DEBUG [http-nio-8080-exec-1] org.springframework.security.web.authentication.AnonymousAuthenticationFilter: Set SecurityContextHolder to anonymous SecurityContext
2024-12-01 20:19:19,151 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#signup(SignupRequest)
2024-12-01 20:19:19,152 DEBUG [http-nio-8080-exec-1] org.springframework.security.web.FilterChainProxy: Secured POST /auth/signup
2024-12-01 20:19:19,152 DEBUG [http-nio-8080-exec-1] org.springframework.core.log.LogFormatUtils: POST "/auth/signup", parameters={}
2024-12-01 20:19:19,152 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#signup(SignupRequest)
2024-12-01 20:19:19,153 DEBUG [http-nio-8080-exec-1] org.springframework.core.log.LogFormatUtils: Read "application/json;charset=UTF-8" to [SignupRequest(username=mohityadav.bkbiet25@gmail.com, email=mohityadav.bkbiet25@gmail.com, password= (truncated)...]
2024-12-01 20:19:19,153 INFO  [http-nio-8080-exec-1] net.engineeringdigest.ecommerce.controller.AuthController: Received signup request for user: mohityadav.bkbiet25@gmail.com
2024-12-01 20:19:19,153 DEBUG [http-nio-8080-exec-1] net.engineeringdigest.ecommerce.service.UserService: Creating new user with username: mohityadav.bkbiet25@gmail.com
2024-12-01 20:19:19,153 DEBUG [http-nio-8080-exec-1] org.springframework.data.mongodb.repository.query.MongoQueryCreator: Created query Query: { "username" : "mohityadav.bkbiet25@gmail.com"}, Fields: {}, Sort: {}
2024-12-01 20:19:19,154 DEBUG [http-nio-8080-exec-1] org.springframework.data.mongodb.core.MongoTemplate: find using query: { "username" : "mohityadav.bkbiet25@gmail.com"} fields: Document{{}} for class: class net.engineeringdigest.ecommerce.entity.User in collection: users
2024-12-01 20:19:19,154 DEBUG [http-nio-8080-exec-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 279. Command: {"find": "users", "filter": {"username": "mohityadav.bkbiet25@gmail.com"}, "limit": 2, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "kwda1hmrSUumq/YEvQCRmw==", "subType": "04"}}}}
2024-12-01 20:19:19,155 DEBUG [http-nio-8080-exec-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" succeeded in 0.94 ms using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 279. Command reply: {"cursor": {"firstBatch": [{"_id": {"$oid": "674c772f31ab277b698f63a6"}, "username": "mohityadav.bkbiet25@gmail.com", "email": "mohityadav.bkbiet25@gmail.com", "password": "$2a$10$yAdQddNCMukhl178u9NiheZyC4JO52hwXswnWztm/7CrX.ptkKHYq", "roles": ["ROLE_USER"], "accountNonExpired": true, "accountNonLocked": true, "credentialsNonExpired": true, "enabled": true, "_class": "net.engineeringdigest.ecommerce.entity.User"}], "id": 0, "ns": "ecommerce.users"}, "ok": 1.0}
2024-12-01 20:19:19,156 DEBUG [http-nio-8080-exec-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Received batch of 1 documents with cursorId 0 from server localhost:27017
2024-12-01 20:19:19,157 ERROR [http-nio-8080-exec-1] net.engineeringdigest.ecommerce.service.UserService: Username already exists: mohityadav.bkbiet25@gmail.com
2024-12-01 20:19:19,158 ERROR [http-nio-8080-exec-1] net.engineeringdigest.ecommerce.controller.AuthController: Failed to create user: mohityadav.bkbiet25@gmail.com
java.lang.RuntimeException: Username already exists
	at net.engineeringdigest.ecommerce.service.UserService.createUser(UserService.java:39)
	at net.engineeringdigest.ecommerce.controller.AuthController.signup(AuthController.java:40)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at net.engineeringdigest.ecommerce.aspect.LoggingAspect.logApiCall(LoggingAspect.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:173)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:702)
	at net.engineeringdigest.ecommerce.controller.AuthController$$SpringCGLIB$$0.signup(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:477)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:338)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:80)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:126)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at net.engineeringdigest.ecommerce.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:32)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:321)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:222)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at net.engineeringdigest.ecommerce.filter.RequestTracingFilter.doFilterInternal(RequestTracingFilter.java:39)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2024-12-01 20:19:19,159 INFO  [http-nio-8080-exec-1] net.engineeringdigest.ecommerce.aspect.LoggingAspect: Method: signup completed in 6ms
2024-12-01 20:19:19,161 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-12-01 20:19:19,161 DEBUG [http-nio-8080-exec-1] org.springframework.core.log.LogFormatUtils: Writing [ErrorResponse(status=400, message=Failed to create user, details=Username already exists)]
2024-12-01 20:19:19,163 DEBUG [http-nio-8080-exec-1] org.springframework.web.servlet.FrameworkServlet: Completed 400 BAD_REQUEST
2024-12-01 20:19:19,165 INFO  [http-nio-8080-exec-1] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Request completed in 15ms with status 400
2024-12-01 20:19:19,545 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:19:19,545 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:19:21,710 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:19:21,710 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:19:26,520 INFO  [http-nio-8080-exec-2] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Incoming request OPTIONS /auth/signup from 0:0:0:0:0:0:0:1
2024-12-01 20:19:26,521 DEBUG [http-nio-8080-exec-2] org.springframework.security.web.FilterChainProxy: Securing OPTIONS /auth/signup
2024-12-01 20:19:26,522 INFO  [http-nio-8080-exec-2] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Request completed in 2ms with status 200
2024-12-01 20:19:26,524 INFO  [http-nio-8080-exec-3] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Incoming request POST /auth/signup from 0:0:0:0:0:0:0:1
2024-12-01 20:19:26,525 DEBUG [http-nio-8080-exec-3] org.springframework.security.web.FilterChainProxy: Securing POST /auth/signup
2024-12-01 20:19:26,525 DEBUG [http-nio-8080-exec-3] org.springframework.security.web.authentication.AnonymousAuthenticationFilter: Set SecurityContextHolder to anonymous SecurityContext
2024-12-01 20:19:26,526 DEBUG [http-nio-8080-exec-3] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#signup(SignupRequest)
2024-12-01 20:19:26,526 DEBUG [http-nio-8080-exec-3] org.springframework.security.web.FilterChainProxy: Secured POST /auth/signup
2024-12-01 20:19:26,527 DEBUG [http-nio-8080-exec-3] org.springframework.core.log.LogFormatUtils: POST "/auth/signup", parameters={}
2024-12-01 20:19:26,527 DEBUG [http-nio-8080-exec-3] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#signup(SignupRequest)
2024-12-01 20:19:26,528 DEBUG [http-nio-8080-exec-3] org.springframework.core.log.LogFormatUtils: Read "application/json;charset=UTF-8" to [SignupRequest(username=mohityadav.bkbiet25@gmail.com1, email=mohityadav.bkbiet25@gmail.com1, passwor (truncated)...]
2024-12-01 20:19:26,529 INFO  [http-nio-8080-exec-3] net.engineeringdigest.ecommerce.controller.AuthController: Received signup request for user: mohityadav.bkbiet25@gmail.com1
2024-12-01 20:19:26,529 DEBUG [http-nio-8080-exec-3] net.engineeringdigest.ecommerce.service.UserService: Creating new user with username: mohityadav.bkbiet25@gmail.com1
2024-12-01 20:19:26,529 DEBUG [http-nio-8080-exec-3] org.springframework.data.mongodb.repository.query.MongoQueryCreator: Created query Query: { "username" : "mohityadav.bkbiet25@gmail.com1"}, Fields: {}, Sort: {}
2024-12-01 20:19:26,530 DEBUG [http-nio-8080-exec-3] org.springframework.data.mongodb.core.MongoTemplate: find using query: { "username" : "mohityadav.bkbiet25@gmail.com1"} fields: Document{{}} for class: class net.engineeringdigest.ecommerce.entity.User in collection: users
2024-12-01 20:19:26,531 DEBUG [http-nio-8080-exec-3] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 280. Command: {"find": "users", "filter": {"username": "mohityadav.bkbiet25@gmail.com1"}, "limit": 2, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "kwda1hmrSUumq/YEvQCRmw==", "subType": "04"}}}}
2024-12-01 20:19:26,532 DEBUG [http-nio-8080-exec-3] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" succeeded in 1.27 ms using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 280. Command reply: {"cursor": {"firstBatch": [], "id": 0, "ns": "ecommerce.users"}, "ok": 1.0}
2024-12-01 20:19:26,533 DEBUG [http-nio-8080-exec-3] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Received batch of 0 documents with cursorId 0 from server localhost:27017
2024-12-01 20:19:26,534 DEBUG [http-nio-8080-exec-3] org.springframework.data.mongodb.repository.query.MongoQueryCreator: Created query Query: { "email" : "mohityadav.bkbiet25@gmail.com1"}, Fields: {}, Sort: {}
2024-12-01 20:19:26,534 DEBUG [http-nio-8080-exec-3] org.springframework.data.mongodb.core.MongoTemplate: find using query: { "email" : "mohityadav.bkbiet25@gmail.com1"} fields: Document{{}} for class: class net.engineeringdigest.ecommerce.entity.User in collection: users
2024-12-01 20:19:26,535 DEBUG [http-nio-8080-exec-3] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 281. Command: {"find": "users", "filter": {"email": "mohityadav.bkbiet25@gmail.com1"}, "limit": 2, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "kwda1hmrSUumq/YEvQCRmw==", "subType": "04"}}}}
2024-12-01 20:19:26,536 DEBUG [http-nio-8080-exec-3] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" succeeded in 1.00 ms using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 281. Command reply: {"cursor": {"firstBatch": [], "id": 0, "ns": "ecommerce.users"}, "ok": 1.0}
2024-12-01 20:19:26,536 DEBUG [http-nio-8080-exec-3] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Received batch of 0 documents with cursorId 0 from server localhost:27017
2024-12-01 20:19:26,624 DEBUG [http-nio-8080-exec-3] net.engineeringdigest.ecommerce.service.UserService: Saving new user to database: mohityadav.bkbiet25@gmail.com1
2024-12-01 20:19:26,624 DEBUG [http-nio-8080-exec-3] org.springframework.data.mongodb.core.MongoTemplate: Inserting Document containing fields: [username, email, password, roles, accountNonExpired, accountNonLocked, credentialsNonExpired, enabled, _class] in collection: users
2024-12-01 20:19:26,625 DEBUG [http-nio-8080-exec-3] com.mongodb.internal.diagnostics.logging.SLF4JLogger: retryWrites set to true but the server is a standalone server.
2024-12-01 20:19:26,625 DEBUG [http-nio-8080-exec-3] com.mongodb.internal.diagnostics.logging.SLF4JLogger: retryWrites set to true but the server is a standalone server.
2024-12-01 20:19:26,626 DEBUG [http-nio-8080-exec-3] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "insert" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 282. Command: {"insert": "users", "ordered": true, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "kwda1hmrSUumq/YEvQCRmw==", "subType": "04"}}}, "documents": [{"_id": {"$oid": "674c777631ab277b698f63a7"}, "username": "mohityadav.bkbiet25@gmail.com1", "email": "mohityadav.bkbiet25@gmail.com1", "password": "$2a$10$w0F6Pr.92wicQKy7dMfHzum9OO9K0WYsYHN9RlX6TgA7iXUZETSE.", "roles": ["ROLE_USER"], "accountNonExpired": true, "accountNonLocked": true, "credentialsNonExpired": true, "enabled": true, "_class": "net.engineeringdigest.ecommerce.entity.User"}]}
2024-12-01 20:19:26,627 DEBUG [http-nio-8080-exec-3] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "insert" succeeded in 1.04 ms using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 282. Command reply: {"n": 1, "ok": 1.0}
2024-12-01 20:19:26,628 INFO  [http-nio-8080-exec-3] net.engineeringdigest.ecommerce.service.UserService: Successfully created new user: mohityadav.bkbiet25@gmail.com1
2024-12-01 20:19:26,629 INFO  [http-nio-8080-exec-3] net.engineeringdigest.ecommerce.controller.AuthController: Successfully created user: mohityadav.bkbiet25@gmail.com1
2024-12-01 20:19:26,629 INFO  [http-nio-8080-exec-3] net.engineeringdigest.ecommerce.aspect.LoggingAspect: Method: signup completed in 100ms
2024-12-01 20:19:26,630 DEBUG [http-nio-8080-exec-3] org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor: Using 'application/json', given [application/json, text/plain, */*] and supported [text/plain, */*, application/json, application/*+json]
2024-12-01 20:19:26,631 DEBUG [http-nio-8080-exec-3] org.springframework.core.log.LogFormatUtils: Writing ["User registered successfully"]
2024-12-01 20:19:26,632 DEBUG [http-nio-8080-exec-3] org.springframework.web.servlet.FrameworkServlet: Completed 200 OK
2024-12-01 20:19:26,633 INFO  [http-nio-8080-exec-3] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Request completed in 109ms with status 200
2024-12-01 20:19:26,711 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:19:26,711 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:19:29,554 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:19:29,554 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:19:31,711 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:19:31,711 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:19:36,711 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:19:36,712 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:19:39,564 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:19:39,565 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:19:41,713 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:19:41,713 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:19:46,713 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:19:46,714 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:19:48,055 INFO  [http-nio-8080-exec-4] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Incoming request OPTIONS /auth/login from 0:0:0:0:0:0:0:1
2024-12-01 20:19:48,055 DEBUG [http-nio-8080-exec-4] org.springframework.security.web.FilterChainProxy: Securing OPTIONS /auth/login
2024-12-01 20:19:48,056 INFO  [http-nio-8080-exec-4] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Request completed in 2ms with status 200
2024-12-01 20:19:48,060 INFO  [http-nio-8080-exec-5] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Incoming request POST /auth/login from 0:0:0:0:0:0:0:1
2024-12-01 20:19:48,061 DEBUG [http-nio-8080-exec-5] org.springframework.security.web.FilterChainProxy: Securing POST /auth/login
2024-12-01 20:19:48,061 DEBUG [http-nio-8080-exec-5] org.springframework.security.web.authentication.AnonymousAuthenticationFilter: Set SecurityContextHolder to anonymous SecurityContext
2024-12-01 20:19:48,062 DEBUG [http-nio-8080-exec-5] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#login(LoginRequest)
2024-12-01 20:19:48,062 DEBUG [http-nio-8080-exec-5] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#login(LoginRequest)
2024-12-01 20:19:48,062 DEBUG [http-nio-8080-exec-5] org.springframework.security.web.FilterChainProxy: Secured POST /auth/login
2024-12-01 20:19:48,062 DEBUG [http-nio-8080-exec-5] org.springframework.core.log.LogFormatUtils: POST "/auth/login", parameters={}
2024-12-01 20:19:48,063 DEBUG [http-nio-8080-exec-5] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#login(LoginRequest)
2024-12-01 20:19:48,063 DEBUG [http-nio-8080-exec-5] org.springframework.core.log.LogFormatUtils: Read "application/json;charset=UTF-8" to [LoginRequest(username=mohityadav.bkbiet25@gmail.com1, password=123456)]
2024-12-01 20:19:48,064 INFO  [http-nio-8080-exec-5] net.engineeringdigest.ecommerce.controller.AuthController: Received login request for user: mohityadav.bkbiet25@gmail.com1
2024-12-01 20:19:48,064 DEBUG [http-nio-8080-exec-5] org.springframework.data.mongodb.repository.query.MongoQueryCreator: Created query Query: { "username" : "mohityadav.bkbiet25@gmail.com1"}, Fields: {}, Sort: {}
2024-12-01 20:19:48,065 DEBUG [http-nio-8080-exec-5] org.springframework.data.mongodb.core.MongoTemplate: find using query: { "username" : "mohityadav.bkbiet25@gmail.com1"} fields: Document{{}} for class: class net.engineeringdigest.ecommerce.entity.User in collection: users
2024-12-01 20:19:48,066 DEBUG [http-nio-8080-exec-5] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 286. Command: {"find": "users", "filter": {"username": "mohityadav.bkbiet25@gmail.com1"}, "limit": 2, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "kwda1hmrSUumq/YEvQCRmw==", "subType": "04"}}}}
2024-12-01 20:19:48,068 DEBUG [http-nio-8080-exec-5] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" succeeded in 2.00 ms using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 286. Command reply: {"cursor": {"firstBatch": [{"_id": {"$oid": "674c777631ab277b698f63a7"}, "username": "mohityadav.bkbiet25@gmail.com1", "email": "mohityadav.bkbiet25@gmail.com1", "password": "$2a$10$w0F6Pr.92wicQKy7dMfHzum9OO9K0WYsYHN9RlX6TgA7iXUZETSE.", "roles": ["ROLE_USER"], "accountNonExpired": true, "accountNonLocked": true, "credentialsNonExpired": true, "enabled": true, "_class": "net.engineeringdigest.ecommerce.entity.User"}], "id": 0, "ns": "ecommerce.users"}, "ok": 1.0}
2024-12-01 20:19:48,068 DEBUG [http-nio-8080-exec-5] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Received batch of 1 documents with cursorId 0 from server localhost:27017
2024-12-01 20:19:48,158 DEBUG [http-nio-8080-exec-5] org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider: Authenticated user
2024-12-01 20:19:48,159 INFO  [http-nio-8080-exec-5] net.engineeringdigest.ecommerce.controller.AuthController: Successfully authenticated user: mohityadav.bkbiet25@gmail.com1
2024-12-01 20:19:48,159 INFO  [http-nio-8080-exec-5] net.engineeringdigest.ecommerce.aspect.LoggingAspect: Method: login completed in 95ms
2024-12-01 20:19:48,160 DEBUG [http-nio-8080-exec-5] org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-12-01 20:19:48,160 DEBUG [http-nio-8080-exec-5] org.springframework.core.log.LogFormatUtils: Writing [LoginResponse(token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJtb2hpdHlhZGF2LmJrYmlldDI1QGdtYWlsLmNvbTEiLCJpYXQ (truncated)...]
2024-12-01 20:19:48,161 DEBUG [http-nio-8080-exec-5] org.springframework.web.servlet.FrameworkServlet: Completed 200 OK
2024-12-01 20:19:48,161 INFO  [http-nio-8080-exec-5] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Request completed in 101ms with status 200
2024-12-01 20:19:49,574 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:19:49,575 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:19:51,714 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:19:51,715 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:19:56,715 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:19:56,715 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:19:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 20:19:59,584 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:19:59,584 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:20:01,716 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:20:01,716 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:20:06,716 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:20:06,717 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:20:09,594 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:20:09,594 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:20:11,717 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:20:11,718 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:20:16,718 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:20:16,719 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:20:19,604 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:20:19,604 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:20:21,720 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:20:21,720 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:20:26,720 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:20:26,720 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:20:29,614 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:20:29,615 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:20:31,720 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:20:31,720 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:20:36,720 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:20:36,721 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:20:39,624 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:20:39,624 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:20:41,721 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:20:41,722 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:20:46,723 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:20:46,723 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:20:49,634 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 20:20:49,634 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:20:51,723 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:20:51,723 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:20:56,724 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:20:56,725 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:20:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 20:20:59,643 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 20:20:59,643 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:21:01,725 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:21:01,725 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:21:06,725 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:21:06,725 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:21:09,652 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 20:21:09,652 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:21:11,726 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:21:11,726 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:21:16,726 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:21:16,726 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:21:19,662 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:21:19,662 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:21:21,726 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:21:21,727 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:21:26,728 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:21:26,728 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:21:29,672 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:21:29,672 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:21:31,728 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:21:31,729 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:21:36,730 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:21:36,730 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:21:39,684 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 20:21:39,686 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:21:41,732 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:21:41,733 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:21:46,733 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:21:46,734 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:21:49,692 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2024-12-01 20:21:49,692 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:21:51,734 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:21:51,735 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:21:56,735 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:21:56,736 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:21:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 20:21:59,702 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 20:21:59,702 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:22:01,737 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:22:01,737 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:22:06,737 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:22:06,737 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:22:09,712 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 20:22:09,712 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:22:11,739 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:22:11,739 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:22:16,739 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:22:16,740 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:22:19,722 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 20:22:19,722 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:22:21,740 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:22:21,740 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:22:26,740 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:22:26,740 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:22:29,731 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:22:29,731 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:22:31,741 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:22:31,741 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:22:36,741 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:22:36,741 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:22:39,740 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:22:39,740 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:22:41,741 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:22:41,742 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:22:46,742 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:22:46,742 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:22:49,749 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:22:49,749 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:22:51,743 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:22:51,743 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:22:56,744 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:22:56,744 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:22:57,125 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 20:22:59,759 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 20:22:59,759 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:23:01,746 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:23:01,746 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:23:06,746 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:23:06,747 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:23:09,769 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 20:23:09,769 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:23:11,748 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:23:11,748 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:23:16,750 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:23:16,750 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:23:19,779 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:23:19,779 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:23:21,750 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:23:21,750 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:23:26,750 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:23:26,751 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:23:29,788 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:23:29,788 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:23:31,751 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:23:31,751 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:23:36,751 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:23:36,752 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:23:39,797 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 20:23:39,797 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:23:41,752 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:23:41,752 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:23:46,752 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:23:46,753 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:23:49,807 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 20:23:49,807 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:23:51,753 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:23:51,753 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:23:56,753 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:23:56,754 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:23:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 20:23:59,816 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:23:59,816 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:24:01,755 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:24:01,755 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:24:06,755 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:24:06,756 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:24:09,826 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:24:09,826 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:24:11,756 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:24:11,757 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:24:15,187 INFO  [http-nio-8080-exec-7] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Incoming request OPTIONS /auth/login from 0:0:0:0:0:0:0:1
2024-12-01 20:24:15,188 DEBUG [http-nio-8080-exec-7] org.springframework.security.web.FilterChainProxy: Securing OPTIONS /auth/login
2024-12-01 20:24:15,192 INFO  [http-nio-8080-exec-7] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Request completed in 5ms with status 200
2024-12-01 20:24:15,195 INFO  [http-nio-8080-exec-8] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Incoming request POST /auth/login from 0:0:0:0:0:0:0:1
2024-12-01 20:24:15,196 DEBUG [http-nio-8080-exec-8] org.springframework.security.web.FilterChainProxy: Securing POST /auth/login
2024-12-01 20:24:15,197 DEBUG [http-nio-8080-exec-8] org.springframework.security.web.authentication.AnonymousAuthenticationFilter: Set SecurityContextHolder to anonymous SecurityContext
2024-12-01 20:24:15,197 DEBUG [http-nio-8080-exec-8] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#login(LoginRequest)
2024-12-01 20:24:15,197 DEBUG [http-nio-8080-exec-8] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#login(LoginRequest)
2024-12-01 20:24:15,197 DEBUG [http-nio-8080-exec-8] org.springframework.security.web.FilterChainProxy: Secured POST /auth/login
2024-12-01 20:24:15,198 DEBUG [http-nio-8080-exec-8] org.springframework.core.log.LogFormatUtils: POST "/auth/login", parameters={}
2024-12-01 20:24:15,198 DEBUG [http-nio-8080-exec-8] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#login(LoginRequest)
2024-12-01 20:24:15,198 DEBUG [http-nio-8080-exec-8] org.springframework.core.log.LogFormatUtils: Read "application/json;charset=UTF-8" to [LoginRequest(username=mohityadav.bkbiet25@gmail.com, password=123456)]
2024-12-01 20:24:15,199 INFO  [http-nio-8080-exec-8] net.engineeringdigest.ecommerce.controller.AuthController: Received login request for user: mohityadav.bkbiet25@gmail.com
2024-12-01 20:24:15,199 DEBUG [http-nio-8080-exec-8] org.springframework.data.mongodb.repository.query.MongoQueryCreator: Created query Query: { "username" : "mohityadav.bkbiet25@gmail.com"}, Fields: {}, Sort: {}
2024-12-01 20:24:15,199 DEBUG [http-nio-8080-exec-8] org.springframework.data.mongodb.core.MongoTemplate: find using query: { "username" : "mohityadav.bkbiet25@gmail.com"} fields: Document{{}} for class: class net.engineeringdigest.ecommerce.entity.User in collection: users
2024-12-01 20:24:15,200 DEBUG [http-nio-8080-exec-8] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 313. Command: {"find": "users", "filter": {"username": "mohityadav.bkbiet25@gmail.com"}, "limit": 2, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "kwda1hmrSUumq/YEvQCRmw==", "subType": "04"}}}}
2024-12-01 20:24:15,201 DEBUG [http-nio-8080-exec-8] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" succeeded in 0.93 ms using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 313. Command reply: {"cursor": {"firstBatch": [{"_id": {"$oid": "674c772f31ab277b698f63a6"}, "username": "mohityadav.bkbiet25@gmail.com", "email": "mohityadav.bkbiet25@gmail.com", "password": "$2a$10$yAdQddNCMukhl178u9NiheZyC4JO52hwXswnWztm/7CrX.ptkKHYq", "roles": ["ROLE_USER"], "accountNonExpired": true, "accountNonLocked": true, "credentialsNonExpired": true, "enabled": true, "_class": "net.engineeringdigest.ecommerce.entity.User"}], "id": 0, "ns": "ecommerce.users"}, "ok": 1.0}
2024-12-01 20:24:15,202 DEBUG [http-nio-8080-exec-8] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Received batch of 1 documents with cursorId 0 from server localhost:27017
2024-12-01 20:24:15,290 DEBUG [http-nio-8080-exec-8] org.springframework.security.authentication.dao.DaoAuthenticationProvider: Failed to authenticate since password does not match stored value
2024-12-01 20:24:15,291 ERROR [http-nio-8080-exec-8] net.engineeringdigest.ecommerce.controller.AuthController: Authentication failed for user: mohityadav.bkbiet25@gmail.com
org.springframework.security.authentication.BadCredentialsException: Bad credentials
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.additionalAuthenticationChecks(DaoAuthenticationProvider.java:89)
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:147)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182)
	at net.engineeringdigest.ecommerce.controller.AuthController.login(AuthController.java:59)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at net.engineeringdigest.ecommerce.aspect.LoggingAspect.logApiCall(LoggingAspect.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:173)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:702)
	at net.engineeringdigest.ecommerce.controller.AuthController$$SpringCGLIB$$0.login(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:477)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:338)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:80)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:126)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at net.engineeringdigest.ecommerce.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:32)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:321)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:222)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at net.engineeringdigest.ecommerce.filter.RequestTracingFilter.doFilterInternal(RequestTracingFilter.java:39)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2024-12-01 20:24:15,291 INFO  [http-nio-8080-exec-8] net.engineeringdigest.ecommerce.aspect.LoggingAspect: Method: login completed in 92ms
2024-12-01 20:24:15,293 DEBUG [http-nio-8080-exec-8] org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-12-01 20:24:15,293 DEBUG [http-nio-8080-exec-8] org.springframework.core.log.LogFormatUtils: Writing [ErrorResponse(status=401, message=Authentication failed, details=Bad credentials)]
2024-12-01 20:24:15,294 DEBUG [http-nio-8080-exec-8] org.springframework.web.servlet.FrameworkServlet: Completed 401 UNAUTHORIZED
2024-12-01 20:24:15,295 INFO  [http-nio-8080-exec-8] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Request completed in 100ms with status 401
2024-12-01 20:24:16,758 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:24:16,758 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:24:19,835 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:24:19,835 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:24:21,759 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:24:21,759 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:24:26,760 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:24:26,760 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:24:29,845 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:24:29,846 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:24:31,761 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:24:31,762 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:24:36,762 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:24:36,763 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:24:39,855 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:24:39,856 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:24:41,764 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:24:41,764 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:24:46,764 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:24:46,765 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:24:49,865 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:24:49,865 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:24:51,765 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:24:51,766 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:24:56,766 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:24:56,766 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:24:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 20:24:59,874 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:24:59,874 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:25:00,018 INFO  [http-nio-8080-exec-9] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Incoming request OPTIONS /auth/signup from 0:0:0:0:0:0:0:1
2024-12-01 20:25:00,018 DEBUG [http-nio-8080-exec-9] org.springframework.security.web.FilterChainProxy: Securing OPTIONS /auth/signup
2024-12-01 20:25:00,019 INFO  [http-nio-8080-exec-9] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Request completed in 1ms with status 200
2024-12-01 20:25:00,022 INFO  [http-nio-8080-exec-10] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Incoming request POST /auth/signup from 0:0:0:0:0:0:0:1
2024-12-01 20:25:00,022 DEBUG [http-nio-8080-exec-10] org.springframework.security.web.FilterChainProxy: Securing POST /auth/signup
2024-12-01 20:25:00,023 DEBUG [http-nio-8080-exec-10] org.springframework.security.web.authentication.AnonymousAuthenticationFilter: Set SecurityContextHolder to anonymous SecurityContext
2024-12-01 20:25:00,023 DEBUG [http-nio-8080-exec-10] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#signup(SignupRequest)
2024-12-01 20:25:00,024 DEBUG [http-nio-8080-exec-10] org.springframework.security.web.FilterChainProxy: Secured POST /auth/signup
2024-12-01 20:25:00,024 DEBUG [http-nio-8080-exec-10] org.springframework.core.log.LogFormatUtils: POST "/auth/signup", parameters={}
2024-12-01 20:25:00,025 DEBUG [http-nio-8080-exec-10] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#signup(SignupRequest)
2024-12-01 20:25:00,026 DEBUG [http-nio-8080-exec-10] org.springframework.core.log.LogFormatUtils: Read "application/json;charset=UTF-8" to [SignupRequest(username=mohit, email=mohityadav.bkbiet25@gmail.com, password=123456, firstName=null,  (truncated)...]
2024-12-01 20:25:00,027 INFO  [http-nio-8080-exec-10] net.engineeringdigest.ecommerce.controller.AuthController: Received signup request for user: mohit
2024-12-01 20:25:00,027 DEBUG [http-nio-8080-exec-10] net.engineeringdigest.ecommerce.service.UserService: Creating new user with username: mohit
2024-12-01 20:25:00,027 DEBUG [http-nio-8080-exec-10] org.springframework.data.mongodb.repository.query.MongoQueryCreator: Created query Query: { "username" : "mohit"}, Fields: {}, Sort: {}
2024-12-01 20:25:00,028 DEBUG [http-nio-8080-exec-10] org.springframework.data.mongodb.core.MongoTemplate: find using query: { "username" : "mohit"} fields: Document{{}} for class: class net.engineeringdigest.ecommerce.entity.User in collection: users
2024-12-01 20:25:00,030 DEBUG [http-nio-8080-exec-10] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 319. Command: {"find": "users", "filter": {"username": "mohit"}, "limit": 2, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "kwda1hmrSUumq/YEvQCRmw==", "subType": "04"}}}}
2024-12-01 20:25:00,031 DEBUG [http-nio-8080-exec-10] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" succeeded in 1.53 ms using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 319. Command reply: {"cursor": {"firstBatch": [], "id": 0, "ns": "ecommerce.users"}, "ok": 1.0}
2024-12-01 20:25:00,032 DEBUG [http-nio-8080-exec-10] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Received batch of 0 documents with cursorId 0 from server localhost:27017
2024-12-01 20:25:00,032 DEBUG [http-nio-8080-exec-10] org.springframework.data.mongodb.repository.query.MongoQueryCreator: Created query Query: { "email" : "mohityadav.bkbiet25@gmail.com"}, Fields: {}, Sort: {}
2024-12-01 20:25:00,032 DEBUG [http-nio-8080-exec-10] org.springframework.data.mongodb.core.MongoTemplate: find using query: { "email" : "mohityadav.bkbiet25@gmail.com"} fields: Document{{}} for class: class net.engineeringdigest.ecommerce.entity.User in collection: users
2024-12-01 20:25:00,033 DEBUG [http-nio-8080-exec-10] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 320. Command: {"find": "users", "filter": {"email": "mohityadav.bkbiet25@gmail.com"}, "limit": 2, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "kwda1hmrSUumq/YEvQCRmw==", "subType": "04"}}}}
2024-12-01 20:25:00,034 DEBUG [http-nio-8080-exec-10] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" succeeded in 0.57 ms using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 320. Command reply: {"cursor": {"firstBatch": [{"_id": {"$oid": "674c772f31ab277b698f63a6"}, "username": "mohityadav.bkbiet25@gmail.com", "email": "mohityadav.bkbiet25@gmail.com", "password": "$2a$10$yAdQddNCMukhl178u9NiheZyC4JO52hwXswnWztm/7CrX.ptkKHYq", "roles": ["ROLE_USER"], "accountNonExpired": true, "accountNonLocked": true, "credentialsNonExpired": true, "enabled": true, "_class": "net.engineeringdigest.ecommerce.entity.User"}], "id": 0, "ns": "ecommerce.users"}, "ok": 1.0}
2024-12-01 20:25:00,034 DEBUG [http-nio-8080-exec-10] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Received batch of 1 documents with cursorId 0 from server localhost:27017
2024-12-01 20:25:00,034 ERROR [http-nio-8080-exec-10] net.engineeringdigest.ecommerce.service.UserService: Email already exists: mohityadav.bkbiet25@gmail.com
2024-12-01 20:25:00,034 ERROR [http-nio-8080-exec-10] net.engineeringdigest.ecommerce.controller.AuthController: Failed to create user: mohit
java.lang.RuntimeException: Email already exists
	at net.engineeringdigest.ecommerce.service.UserService.createUser(UserService.java:44)
	at net.engineeringdigest.ecommerce.controller.AuthController.signup(AuthController.java:40)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at net.engineeringdigest.ecommerce.aspect.LoggingAspect.logApiCall(LoggingAspect.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:173)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:702)
	at net.engineeringdigest.ecommerce.controller.AuthController$$SpringCGLIB$$0.signup(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:477)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:338)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:80)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:126)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at net.engineeringdigest.ecommerce.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:32)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:321)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:222)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at net.engineeringdigest.ecommerce.filter.RequestTracingFilter.doFilterInternal(RequestTracingFilter.java:39)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2024-12-01 20:25:00,035 INFO  [http-nio-8080-exec-10] net.engineeringdigest.ecommerce.aspect.LoggingAspect: Method: signup completed in 8ms
2024-12-01 20:25:00,036 DEBUG [http-nio-8080-exec-10] org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-12-01 20:25:00,036 DEBUG [http-nio-8080-exec-10] org.springframework.core.log.LogFormatUtils: Writing [ErrorResponse(status=400, message=Failed to create user, details=Email already exists)]
2024-12-01 20:25:00,036 DEBUG [http-nio-8080-exec-10] org.springframework.web.servlet.FrameworkServlet: Completed 400 BAD_REQUEST
2024-12-01 20:25:00,037 INFO  [http-nio-8080-exec-10] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Request completed in 15ms with status 400
2024-12-01 20:25:01,766 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:25:01,766 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:25:06,766 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:25:06,767 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:25:09,884 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:25:09,884 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:25:11,767 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:25:11,768 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:25:12,438 INFO  [http-nio-8080-exec-1] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Incoming request OPTIONS /auth/signup from 0:0:0:0:0:0:0:1
2024-12-01 20:25:12,439 DEBUG [http-nio-8080-exec-1] org.springframework.security.web.FilterChainProxy: Securing OPTIONS /auth/signup
2024-12-01 20:25:12,440 INFO  [http-nio-8080-exec-1] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Request completed in 2ms with status 200
2024-12-01 20:25:12,442 INFO  [http-nio-8080-exec-2] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Incoming request POST /auth/signup from 0:0:0:0:0:0:0:1
2024-12-01 20:25:12,443 DEBUG [http-nio-8080-exec-2] org.springframework.security.web.FilterChainProxy: Securing POST /auth/signup
2024-12-01 20:25:12,443 DEBUG [http-nio-8080-exec-2] org.springframework.security.web.authentication.AnonymousAuthenticationFilter: Set SecurityContextHolder to anonymous SecurityContext
2024-12-01 20:25:12,443 DEBUG [http-nio-8080-exec-2] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#signup(SignupRequest)
2024-12-01 20:25:12,444 DEBUG [http-nio-8080-exec-2] org.springframework.security.web.FilterChainProxy: Secured POST /auth/signup
2024-12-01 20:25:12,444 DEBUG [http-nio-8080-exec-2] org.springframework.core.log.LogFormatUtils: POST "/auth/signup", parameters={}
2024-12-01 20:25:12,444 DEBUG [http-nio-8080-exec-2] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#signup(SignupRequest)
2024-12-01 20:25:12,444 DEBUG [http-nio-8080-exec-2] org.springframework.core.log.LogFormatUtils: Read "application/json;charset=UTF-8" to [SignupRequest(username=mohit, email=mohityadav.bkbiet25@gmail.com1, password=123456, firstName=null, (truncated)...]
2024-12-01 20:25:12,445 INFO  [http-nio-8080-exec-2] net.engineeringdigest.ecommerce.controller.AuthController: Received signup request for user: mohit
2024-12-01 20:25:12,445 DEBUG [http-nio-8080-exec-2] net.engineeringdigest.ecommerce.service.UserService: Creating new user with username: mohit
2024-12-01 20:25:12,445 DEBUG [http-nio-8080-exec-2] org.springframework.data.mongodb.repository.query.MongoQueryCreator: Created query Query: { "username" : "mohit"}, Fields: {}, Sort: {}
2024-12-01 20:25:12,445 DEBUG [http-nio-8080-exec-2] org.springframework.data.mongodb.core.MongoTemplate: find using query: { "username" : "mohit"} fields: Document{{}} for class: class net.engineeringdigest.ecommerce.entity.User in collection: users
2024-12-01 20:25:12,447 DEBUG [http-nio-8080-exec-2] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 322. Command: {"find": "users", "filter": {"username": "mohit"}, "limit": 2, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "kwda1hmrSUumq/YEvQCRmw==", "subType": "04"}}}}
2024-12-01 20:25:12,449 DEBUG [http-nio-8080-exec-2] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" succeeded in 1.83 ms using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 322. Command reply: {"cursor": {"firstBatch": [], "id": 0, "ns": "ecommerce.users"}, "ok": 1.0}
2024-12-01 20:25:12,449 DEBUG [http-nio-8080-exec-2] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Received batch of 0 documents with cursorId 0 from server localhost:27017
2024-12-01 20:25:12,450 DEBUG [http-nio-8080-exec-2] org.springframework.data.mongodb.repository.query.MongoQueryCreator: Created query Query: { "email" : "mohityadav.bkbiet25@gmail.com1"}, Fields: {}, Sort: {}
2024-12-01 20:25:12,451 DEBUG [http-nio-8080-exec-2] org.springframework.data.mongodb.core.MongoTemplate: find using query: { "email" : "mohityadav.bkbiet25@gmail.com1"} fields: Document{{}} for class: class net.engineeringdigest.ecommerce.entity.User in collection: users
2024-12-01 20:25:12,452 DEBUG [http-nio-8080-exec-2] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 323. Command: {"find": "users", "filter": {"email": "mohityadav.bkbiet25@gmail.com1"}, "limit": 2, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "kwda1hmrSUumq/YEvQCRmw==", "subType": "04"}}}}
2024-12-01 20:25:12,453 DEBUG [http-nio-8080-exec-2] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" succeeded in 1.01 ms using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 323. Command reply: {"cursor": {"firstBatch": [{"_id": {"$oid": "674c777631ab277b698f63a7"}, "username": "mohityadav.bkbiet25@gmail.com1", "email": "mohityadav.bkbiet25@gmail.com1", "password": "$2a$10$w0F6Pr.92wicQKy7dMfHzum9OO9K0WYsYHN9RlX6TgA7iXUZETSE.", "roles": ["ROLE_USER"], "accountNonExpired": true, "accountNonLocked": true, "credentialsNonExpired": true, "enabled": true, "_class": "net.engineeringdigest.ecommerce.entity.User"}], "id": 0, "ns": "ecommerce.users"}, "ok": 1.0}
2024-12-01 20:25:12,453 DEBUG [http-nio-8080-exec-2] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Received batch of 1 documents with cursorId 0 from server localhost:27017
2024-12-01 20:25:12,455 ERROR [http-nio-8080-exec-2] net.engineeringdigest.ecommerce.service.UserService: Email already exists: mohityadav.bkbiet25@gmail.com1
2024-12-01 20:25:12,455 ERROR [http-nio-8080-exec-2] net.engineeringdigest.ecommerce.controller.AuthController: Failed to create user: mohit
java.lang.RuntimeException: Email already exists
	at net.engineeringdigest.ecommerce.service.UserService.createUser(UserService.java:44)
	at net.engineeringdigest.ecommerce.controller.AuthController.signup(AuthController.java:40)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at net.engineeringdigest.ecommerce.aspect.LoggingAspect.logApiCall(LoggingAspect.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:173)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:702)
	at net.engineeringdigest.ecommerce.controller.AuthController$$SpringCGLIB$$0.signup(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:477)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:338)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:80)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:126)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at net.engineeringdigest.ecommerce.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:32)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:238)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:321)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:222)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:135)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at net.engineeringdigest.ecommerce.filter.RequestTracingFilter.doFilterInternal(RequestTracingFilter.java:39)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2024-12-01 20:25:12,455 INFO  [http-nio-8080-exec-2] net.engineeringdigest.ecommerce.aspect.LoggingAspect: Method: signup completed in 10ms
2024-12-01 20:25:12,456 DEBUG [http-nio-8080-exec-2] org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-12-01 20:25:12,456 DEBUG [http-nio-8080-exec-2] org.springframework.core.log.LogFormatUtils: Writing [ErrorResponse(status=400, message=Failed to create user, details=Email already exists)]
2024-12-01 20:25:12,457 DEBUG [http-nio-8080-exec-2] org.springframework.web.servlet.FrameworkServlet: Completed 400 BAD_REQUEST
2024-12-01 20:25:12,458 INFO  [http-nio-8080-exec-2] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Request completed in 16ms with status 400
2024-12-01 20:25:16,768 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:25:16,768 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:25:19,894 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:25:19,894 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:25:21,768 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:25:21,769 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:25:26,770 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:25:26,770 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:25:29,903 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:25:29,903 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:25:31,771 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:25:31,771 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:25:36,771 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:25:36,772 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:25:39,912 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:25:39,912 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:25:41,772 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:25:41,773 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:25:46,774 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:25:46,774 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:25:49,921 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:25:49,921 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:25:51,774 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:25:51,775 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:25:56,775 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:25:56,775 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:25:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 20:25:58,685 INFO  [http-nio-8080-exec-3] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Incoming request OPTIONS /auth/signup from 0:0:0:0:0:0:0:1
2024-12-01 20:25:58,686 DEBUG [http-nio-8080-exec-3] org.springframework.security.web.FilterChainProxy: Securing OPTIONS /auth/signup
2024-12-01 20:25:58,687 INFO  [http-nio-8080-exec-3] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Request completed in 2ms with status 200
2024-12-01 20:25:58,689 INFO  [http-nio-8080-exec-4] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Incoming request POST /auth/signup from 0:0:0:0:0:0:0:1
2024-12-01 20:25:58,690 DEBUG [http-nio-8080-exec-4] org.springframework.security.web.FilterChainProxy: Securing POST /auth/signup
2024-12-01 20:25:58,691 DEBUG [http-nio-8080-exec-4] org.springframework.security.web.authentication.AnonymousAuthenticationFilter: Set SecurityContextHolder to anonymous SecurityContext
2024-12-01 20:25:58,691 DEBUG [http-nio-8080-exec-4] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#signup(SignupRequest)
2024-12-01 20:25:58,691 DEBUG [http-nio-8080-exec-4] org.springframework.security.web.FilterChainProxy: Secured POST /auth/signup
2024-12-01 20:25:58,692 DEBUG [http-nio-8080-exec-4] org.springframework.core.log.LogFormatUtils: POST "/auth/signup", parameters={}
2024-12-01 20:25:58,692 DEBUG [http-nio-8080-exec-4] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#signup(SignupRequest)
2024-12-01 20:25:58,693 DEBUG [http-nio-8080-exec-4] org.springframework.core.log.LogFormatUtils: Read "application/json;charset=UTF-8" to [SignupRequest(username=admin, email=asdfasdf@gmail.com, password=123456, firstName=null, lastName=nu (truncated)...]
2024-12-01 20:25:58,693 INFO  [http-nio-8080-exec-4] net.engineeringdigest.ecommerce.controller.AuthController: Received signup request for user: admin
2024-12-01 20:25:58,693 DEBUG [http-nio-8080-exec-4] net.engineeringdigest.ecommerce.service.UserService: Creating new user with username: admin
2024-12-01 20:25:58,694 DEBUG [http-nio-8080-exec-4] org.springframework.data.mongodb.repository.query.MongoQueryCreator: Created query Query: { "username" : "admin"}, Fields: {}, Sort: {}
2024-12-01 20:25:58,694 DEBUG [http-nio-8080-exec-4] org.springframework.data.mongodb.core.MongoTemplate: find using query: { "username" : "admin"} fields: Document{{}} for class: class net.engineeringdigest.ecommerce.entity.User in collection: users
2024-12-01 20:25:58,695 DEBUG [http-nio-8080-exec-4] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 329. Command: {"find": "users", "filter": {"username": "admin"}, "limit": 2, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "kwda1hmrSUumq/YEvQCRmw==", "subType": "04"}}}}
2024-12-01 20:25:58,696 DEBUG [http-nio-8080-exec-4] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" succeeded in 1.03 ms using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 329. Command reply: {"cursor": {"firstBatch": [], "id": 0, "ns": "ecommerce.users"}, "ok": 1.0}
2024-12-01 20:25:58,696 DEBUG [http-nio-8080-exec-4] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Received batch of 0 documents with cursorId 0 from server localhost:27017
2024-12-01 20:25:58,697 DEBUG [http-nio-8080-exec-4] org.springframework.data.mongodb.repository.query.MongoQueryCreator: Created query Query: { "email" : "asdfasdf@gmail.com"}, Fields: {}, Sort: {}
2024-12-01 20:25:58,697 DEBUG [http-nio-8080-exec-4] org.springframework.data.mongodb.core.MongoTemplate: find using query: { "email" : "asdfasdf@gmail.com"} fields: Document{{}} for class: class net.engineeringdigest.ecommerce.entity.User in collection: users
2024-12-01 20:25:58,698 DEBUG [http-nio-8080-exec-4] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 330. Command: {"find": "users", "filter": {"email": "asdfasdf@gmail.com"}, "limit": 2, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "kwda1hmrSUumq/YEvQCRmw==", "subType": "04"}}}}
2024-12-01 20:25:58,699 DEBUG [http-nio-8080-exec-4] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" succeeded in 1.36 ms using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 330. Command reply: {"cursor": {"firstBatch": [], "id": 0, "ns": "ecommerce.users"}, "ok": 1.0}
2024-12-01 20:25:58,700 DEBUG [http-nio-8080-exec-4] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Received batch of 0 documents with cursorId 0 from server localhost:27017
2024-12-01 20:25:58,790 DEBUG [http-nio-8080-exec-4] net.engineeringdigest.ecommerce.service.UserService: Saving new user to database: admin
2024-12-01 20:25:58,791 DEBUG [http-nio-8080-exec-4] org.springframework.data.mongodb.core.MongoTemplate: Inserting Document containing fields: [username, email, password, roles, accountNonExpired, accountNonLocked, credentialsNonExpired, enabled, _class] in collection: users
2024-12-01 20:25:58,791 DEBUG [http-nio-8080-exec-4] com.mongodb.internal.diagnostics.logging.SLF4JLogger: retryWrites set to true but the server is a standalone server.
2024-12-01 20:25:58,791 DEBUG [http-nio-8080-exec-4] com.mongodb.internal.diagnostics.logging.SLF4JLogger: retryWrites set to true but the server is a standalone server.
2024-12-01 20:25:58,792 DEBUG [http-nio-8080-exec-4] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "insert" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 331. Command: {"insert": "users", "ordered": true, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "kwda1hmrSUumq/YEvQCRmw==", "subType": "04"}}}, "documents": [{"_id": {"$oid": "674c78fe31ab277b698f63a8"}, "username": "admin", "email": "asdfasdf@gmail.com", "password": "$2a$10$hdMDFQyWT8MW.2ZBjz.TvuicLhNVrdOacNs7EQrFyLHP4XSeO8fDy", "roles": ["ROLE_USER"], "accountNonExpired": true, "accountNonLocked": true, "credentialsNonExpired": true, "enabled": true, "_class": "net.engineeringdigest.ecommerce.entity.User"}]}
2024-12-01 20:25:58,793 DEBUG [http-nio-8080-exec-4] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "insert" succeeded in 1.14 ms using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 331. Command reply: {"n": 1, "ok": 1.0}
2024-12-01 20:25:58,794 INFO  [http-nio-8080-exec-4] net.engineeringdigest.ecommerce.service.UserService: Successfully created new user: admin
2024-12-01 20:25:58,794 INFO  [http-nio-8080-exec-4] net.engineeringdigest.ecommerce.controller.AuthController: Successfully created user: admin
2024-12-01 20:25:58,794 INFO  [http-nio-8080-exec-4] net.engineeringdigest.ecommerce.aspect.LoggingAspect: Method: signup completed in 101ms
2024-12-01 20:25:58,794 DEBUG [http-nio-8080-exec-4] org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor: Using 'application/json', given [application/json, text/plain, */*] and supported [text/plain, */*, application/json, application/*+json]
2024-12-01 20:25:58,795 DEBUG [http-nio-8080-exec-4] org.springframework.core.log.LogFormatUtils: Writing ["User registered successfully"]
2024-12-01 20:25:58,795 DEBUG [http-nio-8080-exec-4] org.springframework.web.servlet.FrameworkServlet: Completed 200 OK
2024-12-01 20:25:58,796 INFO  [http-nio-8080-exec-4] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Request completed in 107ms with status 200
2024-12-01 20:25:59,930 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:25:59,931 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:26:01,776 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:26:01,776 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:26:06,777 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:26:06,777 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:26:09,940 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:26:09,940 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:26:11,777 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:26:11,778 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:26:14,226 INFO  [http-nio-8080-exec-5] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Incoming request OPTIONS /auth/login from 0:0:0:0:0:0:0:1
2024-12-01 20:26:14,227 DEBUG [http-nio-8080-exec-5] org.springframework.security.web.FilterChainProxy: Securing OPTIONS /auth/login
2024-12-01 20:26:14,228 INFO  [http-nio-8080-exec-5] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Request completed in 2ms with status 200
2024-12-01 20:26:14,230 INFO  [http-nio-8080-exec-6] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Incoming request POST /auth/login from 0:0:0:0:0:0:0:1
2024-12-01 20:26:14,231 DEBUG [http-nio-8080-exec-6] org.springframework.security.web.FilterChainProxy: Securing POST /auth/login
2024-12-01 20:26:14,232 DEBUG [http-nio-8080-exec-6] org.springframework.security.web.authentication.AnonymousAuthenticationFilter: Set SecurityContextHolder to anonymous SecurityContext
2024-12-01 20:26:14,232 DEBUG [http-nio-8080-exec-6] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#login(LoginRequest)
2024-12-01 20:26:14,232 DEBUG [http-nio-8080-exec-6] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#login(LoginRequest)
2024-12-01 20:26:14,232 DEBUG [http-nio-8080-exec-6] org.springframework.security.web.FilterChainProxy: Secured POST /auth/login
2024-12-01 20:26:14,233 DEBUG [http-nio-8080-exec-6] org.springframework.core.log.LogFormatUtils: POST "/auth/login", parameters={}
2024-12-01 20:26:14,233 DEBUG [http-nio-8080-exec-6] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.AuthController#login(LoginRequest)
2024-12-01 20:26:14,234 DEBUG [http-nio-8080-exec-6] org.springframework.core.log.LogFormatUtils: Read "application/json;charset=UTF-8" to [LoginRequest(username=admin, password=123456)]
2024-12-01 20:26:14,234 INFO  [http-nio-8080-exec-6] net.engineeringdigest.ecommerce.controller.AuthController: Received login request for user: admin
2024-12-01 20:26:14,235 DEBUG [http-nio-8080-exec-6] org.springframework.data.mongodb.repository.query.MongoQueryCreator: Created query Query: { "username" : "admin"}, Fields: {}, Sort: {}
2024-12-01 20:26:14,235 DEBUG [http-nio-8080-exec-6] org.springframework.data.mongodb.core.MongoTemplate: find using query: { "username" : "admin"} fields: Document{{}} for class: class net.engineeringdigest.ecommerce.entity.User in collection: users
2024-12-01 20:26:14,236 DEBUG [http-nio-8080-exec-6] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 333. Command: {"find": "users", "filter": {"username": "admin"}, "limit": 2, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "kwda1hmrSUumq/YEvQCRmw==", "subType": "04"}}}}
2024-12-01 20:26:14,237 DEBUG [http-nio-8080-exec-6] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" succeeded in 0.96 ms using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 333. Command reply: {"cursor": {"firstBatch": [{"_id": {"$oid": "674c78fe31ab277b698f63a8"}, "username": "admin", "email": "asdfasdf@gmail.com", "password": "$2a$10$hdMDFQyWT8MW.2ZBjz.TvuicLhNVrdOacNs7EQrFyLHP4XSeO8fDy", "roles": ["ROLE_USER"], "accountNonExpired": true, "accountNonLocked": true, "credentialsNonExpired": true, "enabled": true, "_class": "net.engineeringdigest.ecommerce.entity.User"}], "id": 0, "ns": "ecommerce.users"}, "ok": 1.0}
2024-12-01 20:26:14,238 DEBUG [http-nio-8080-exec-6] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Received batch of 1 documents with cursorId 0 from server localhost:27017
2024-12-01 20:26:14,326 DEBUG [http-nio-8080-exec-6] org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider: Authenticated user
2024-12-01 20:26:14,328 INFO  [http-nio-8080-exec-6] net.engineeringdigest.ecommerce.controller.AuthController: Successfully authenticated user: admin
2024-12-01 20:26:14,328 INFO  [http-nio-8080-exec-6] net.engineeringdigest.ecommerce.aspect.LoggingAspect: Method: login completed in 94ms
2024-12-01 20:26:14,328 DEBUG [http-nio-8080-exec-6] org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-12-01 20:26:14,329 DEBUG [http-nio-8080-exec-6] org.springframework.core.log.LogFormatUtils: Writing [LoginResponse(token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImlhdCI6MTczMzA2NDk3NCwiZXhwIjoxNzMzMTU (truncated)...]
2024-12-01 20:26:14,329 DEBUG [http-nio-8080-exec-6] org.springframework.web.servlet.FrameworkServlet: Completed 200 OK
2024-12-01 20:26:14,330 INFO  [http-nio-8080-exec-6] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Request completed in 100ms with status 200
2024-12-01 20:26:16,778 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:26:16,778 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:26:17,662 INFO  [http-nio-8080-exec-7] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Incoming request OPTIONS /products from 0:0:0:0:0:0:0:1
2024-12-01 20:26:17,663 DEBUG [http-nio-8080-exec-7] org.springframework.security.web.FilterChainProxy: Securing OPTIONS /products
2024-12-01 20:26:17,663 INFO  [http-nio-8080-exec-8] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Incoming request OPTIONS /products from 0:0:0:0:0:0:0:1
2024-12-01 20:26:17,663 DEBUG [http-nio-8080-exec-8] org.springframework.security.web.FilterChainProxy: Securing OPTIONS /products
2024-12-01 20:26:17,664 INFO  [http-nio-8080-exec-8] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Request completed in 1ms with status 200
2024-12-01 20:26:17,664 INFO  [http-nio-8080-exec-7] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Request completed in 2ms with status 200
2024-12-01 20:26:17,669 INFO  [http-nio-8080-exec-9] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Incoming request GET /products from 0:0:0:0:0:0:0:1
2024-12-01 20:26:17,670 DEBUG [http-nio-8080-exec-9] org.springframework.security.web.FilterChainProxy: Securing GET /products
2024-12-01 20:26:17,675 DEBUG [http-nio-8080-exec-9] org.springframework.data.mongodb.repository.query.MongoQueryCreator: Created query Query: { "username" : "admin"}, Fields: {}, Sort: {}
2024-12-01 20:26:17,677 DEBUG [http-nio-8080-exec-9] org.springframework.data.mongodb.core.MongoTemplate: find using query: { "username" : "admin"} fields: Document{{}} for class: class net.engineeringdigest.ecommerce.entity.User in collection: users
2024-12-01 20:26:17,678 DEBUG [http-nio-8080-exec-9] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 335. Command: {"find": "users", "filter": {"username": "admin"}, "limit": 2, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "kwda1hmrSUumq/YEvQCRmw==", "subType": "04"}}}}
2024-12-01 20:26:17,680 DEBUG [http-nio-8080-exec-9] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" succeeded in 1.65 ms using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 335. Command reply: {"cursor": {"firstBatch": [{"_id": {"$oid": "674c78fe31ab277b698f63a8"}, "username": "admin", "email": "asdfasdf@gmail.com", "password": "$2a$10$hdMDFQyWT8MW.2ZBjz.TvuicLhNVrdOacNs7EQrFyLHP4XSeO8fDy", "roles": ["ROLE_USER"], "accountNonExpired": true, "accountNonLocked": true, "credentialsNonExpired": true, "enabled": true, "_class": "net.engineeringdigest.ecommerce.entity.User"}], "id": 0, "ns": "ecommerce.users"}, "ok": 1.0}
2024-12-01 20:26:17,681 DEBUG [http-nio-8080-exec-9] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Received batch of 1 documents with cursorId 0 from server localhost:27017
2024-12-01 20:26:17,685 DEBUG [http-nio-8080-exec-9] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.ProductController#getAllProducts(Integer, Integer, String)
2024-12-01 20:26:17,686 DEBUG [http-nio-8080-exec-9] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.ProductController#getAllProducts(Integer, Integer, String)
2024-12-01 20:26:17,686 DEBUG [http-nio-8080-exec-9] org.springframework.security.web.FilterChainProxy: Secured GET /products
2024-12-01 20:26:17,687 DEBUG [http-nio-8080-exec-9] org.springframework.core.log.LogFormatUtils: GET "/products", parameters={}
2024-12-01 20:26:17,687 DEBUG [http-nio-8080-exec-9] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.ProductController#getAllProducts(Integer, Integer, String)
2024-12-01 20:26:17,691 INFO  [http-nio-8080-exec-9] net.engineeringdigest.ecommerce.controller.ProductController: Fetching all products with page: null, size: null, sortBy: null
2024-12-01 20:26:17,692 DEBUG [http-nio-8080-exec-9] org.springframework.data.mongodb.repository.query.MongoQueryCreator: Created query Query: { "active" : true}, Fields: {}, Sort: {}
2024-12-01 20:26:17,695 DEBUG [http-nio-8080-exec-9] org.springframework.data.mongodb.core.MongoTemplate: find using query: { "active" : true} fields: Document{{}} for class: class net.engineeringdigest.ecommerce.entity.Product in collection: products
2024-12-01 20:26:17,697 DEBUG [http-nio-8080-exec-9] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 336. Command: {"find": "products", "filter": {"active": true}, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "kwda1hmrSUumq/YEvQCRmw==", "subType": "04"}}}}
2024-12-01 20:26:17,699 DEBUG [http-nio-8080-exec-9] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" succeeded in 1.62 ms using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 336. Command reply: {"cursor": {"firstBatch": [{"_id": "4a1f62f4-f1e4-450a-a977-029d8d5024b1", "name": "Test Product", "description": "A test product", "price": "99.99", "stockQuantity": 0, "category": "electronics", "active": true, "createdAt": {"$date": "2024-12-01T09:59:38.681Z"}, "updatedAt": {"$date": "2024-12-01T09:59:38.681Z"}, "reviews": [], "_class": "net.engineeringdigest.ecommerce.entity.Product"}, {"_id": "0fd7ca32-5c3d-4836-a371-7445f8453294", "name": "Smartphone", "description": "Latest model smartphone", "price": "799.99", "stockQuantity": 50, "category": "electronics", "active": true, "createdAt": {"$date": "2024-12-01T10:04:35.248Z"}, "updatedAt": {"$date": "2024-12-01T10:04:35.248Z"}, "reviews": [], "_class": "net.engineeringdigest.ecommerce.entity.Product"}, {"_id": "474892ad-e95f-4699-8310-7ef5922e9807", "name": "Smartphone X", "description": "Latest smartphone with amazing features", "price": "799.99", "stockQuantity": 50, "category": "Electronics", "active": true, "createdAt": {"$dat ...
2024-12-01 20:26:17,700 DEBUG [http-nio-8080-exec-9] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Received batch of 3 documents with cursorId 0 from server localhost:27017
2024-12-01 20:26:17,707 INFO  [http-nio-8080-exec-9] net.engineeringdigest.ecommerce.aspect.LoggingAspect: Method: getAllProducts completed in 16ms
2024-12-01 20:26:17,709 DEBUG [http-nio-8080-exec-9] org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-12-01 20:26:17,714 DEBUG [http-nio-8080-exec-9] org.springframework.core.log.LogFormatUtils: Writing [[Product(id=4a1f62f4-f1e4-450a-a977-029d8d5024b1, name=Test Product, description=A test product, pri (truncated)...]
2024-12-01 20:26:17,721 DEBUG [http-nio-8080-exec-9] org.springframework.web.servlet.FrameworkServlet: Completed 200 OK
2024-12-01 20:26:17,722 INFO  [http-nio-8080-exec-9] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Request completed in 53ms with status 200
2024-12-01 20:26:17,723 INFO  [http-nio-8080-exec-10] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Incoming request GET /products from 0:0:0:0:0:0:0:1
2024-12-01 20:26:17,725 DEBUG [http-nio-8080-exec-10] org.springframework.security.web.FilterChainProxy: Securing GET /products
2024-12-01 20:26:17,728 DEBUG [http-nio-8080-exec-10] org.springframework.data.mongodb.repository.query.MongoQueryCreator: Created query Query: { "username" : "admin"}, Fields: {}, Sort: {}
2024-12-01 20:26:17,729 DEBUG [http-nio-8080-exec-10] org.springframework.data.mongodb.core.MongoTemplate: find using query: { "username" : "admin"} fields: Document{{}} for class: class net.engineeringdigest.ecommerce.entity.User in collection: users
2024-12-01 20:26:17,730 DEBUG [http-nio-8080-exec-10] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 337. Command: {"find": "users", "filter": {"username": "admin"}, "limit": 2, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "kwda1hmrSUumq/YEvQCRmw==", "subType": "04"}}}}
2024-12-01 20:26:17,733 DEBUG [http-nio-8080-exec-10] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" succeeded in 2.56 ms using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 337. Command reply: {"cursor": {"firstBatch": [{"_id": {"$oid": "674c78fe31ab277b698f63a8"}, "username": "admin", "email": "asdfasdf@gmail.com", "password": "$2a$10$hdMDFQyWT8MW.2ZBjz.TvuicLhNVrdOacNs7EQrFyLHP4XSeO8fDy", "roles": ["ROLE_USER"], "accountNonExpired": true, "accountNonLocked": true, "credentialsNonExpired": true, "enabled": true, "_class": "net.engineeringdigest.ecommerce.entity.User"}], "id": 0, "ns": "ecommerce.users"}, "ok": 1.0}
2024-12-01 20:26:17,734 DEBUG [http-nio-8080-exec-10] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Received batch of 1 documents with cursorId 0 from server localhost:27017
2024-12-01 20:26:17,754 DEBUG [http-nio-8080-exec-10] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.ProductController#getAllProducts(Integer, Integer, String)
2024-12-01 20:26:17,759 DEBUG [http-nio-8080-exec-10] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.ProductController#getAllProducts(Integer, Integer, String)
2024-12-01 20:26:17,761 DEBUG [http-nio-8080-exec-10] org.springframework.security.web.FilterChainProxy: Secured GET /products
2024-12-01 20:26:17,763 DEBUG [http-nio-8080-exec-10] org.springframework.core.log.LogFormatUtils: GET "/products", parameters={}
2024-12-01 20:26:17,767 DEBUG [http-nio-8080-exec-10] org.springframework.web.servlet.handler.AbstractHandlerMapping: Mapped to net.engineeringdigest.ecommerce.controller.ProductController#getAllProducts(Integer, Integer, String)
2024-12-01 20:26:17,768 INFO  [http-nio-8080-exec-10] net.engineeringdigest.ecommerce.controller.ProductController: Fetching all products with page: null, size: null, sortBy: null
2024-12-01 20:26:17,771 DEBUG [http-nio-8080-exec-10] org.springframework.data.mongodb.repository.query.MongoQueryCreator: Created query Query: { "active" : true}, Fields: {}, Sort: {}
2024-12-01 20:26:17,776 DEBUG [http-nio-8080-exec-10] org.springframework.data.mongodb.core.MongoTemplate: find using query: { "active" : true} fields: Document{{}} for class: class net.engineeringdigest.ecommerce.entity.Product in collection: products
2024-12-01 20:26:17,780 DEBUG [http-nio-8080-exec-10] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" started on database ecommerce using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 338. Command: {"find": "products", "filter": {"active": true}, "$db": "ecommerce", "lsid": {"id": {"$binary": {"base64": "kwda1hmrSUumq/YEvQCRmw==", "subType": "04"}}}}
2024-12-01 20:26:17,785 DEBUG [http-nio-8080-exec-10] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Command "find" succeeded in 4.12 ms using a connection with driver-generated ID 3 and server-generated ID 109 to localhost:27017. The request ID is 338. Command reply: {"cursor": {"firstBatch": [{"_id": "4a1f62f4-f1e4-450a-a977-029d8d5024b1", "name": "Test Product", "description": "A test product", "price": "99.99", "stockQuantity": 0, "category": "electronics", "active": true, "createdAt": {"$date": "2024-12-01T09:59:38.681Z"}, "updatedAt": {"$date": "2024-12-01T09:59:38.681Z"}, "reviews": [], "_class": "net.engineeringdigest.ecommerce.entity.Product"}, {"_id": "0fd7ca32-5c3d-4836-a371-7445f8453294", "name": "Smartphone", "description": "Latest model smartphone", "price": "799.99", "stockQuantity": 50, "category": "electronics", "active": true, "createdAt": {"$date": "2024-12-01T10:04:35.248Z"}, "updatedAt": {"$date": "2024-12-01T10:04:35.248Z"}, "reviews": [], "_class": "net.engineeringdigest.ecommerce.entity.Product"}, {"_id": "474892ad-e95f-4699-8310-7ef5922e9807", "name": "Smartphone X", "description": "Latest smartphone with amazing features", "price": "799.99", "stockQuantity": 50, "category": "Electronics", "active": true, "createdAt": {"$dat ...
2024-12-01 20:26:17,790 DEBUG [http-nio-8080-exec-10] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Received batch of 3 documents with cursorId 0 from server localhost:27017
2024-12-01 20:26:17,793 INFO  [http-nio-8080-exec-10] net.engineeringdigest.ecommerce.aspect.LoggingAspect: Method: getAllProducts completed in 25ms
2024-12-01 20:26:17,796 DEBUG [http-nio-8080-exec-10] org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor: Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-12-01 20:26:17,797 DEBUG [http-nio-8080-exec-10] org.springframework.core.log.LogFormatUtils: Writing [[Product(id=4a1f62f4-f1e4-450a-a977-029d8d5024b1, name=Test Product, description=A test product, pri (truncated)...]
2024-12-01 20:26:17,798 DEBUG [http-nio-8080-exec-10] org.springframework.web.servlet.FrameworkServlet: Completed 200 OK
2024-12-01 20:26:17,799 INFO  [http-nio-8080-exec-10] net.engineeringdigest.ecommerce.filter.RequestTracingFilter: Request completed in 76ms with status 200
2024-12-01 20:26:19,950 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:26:19,950 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:26:21,778 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:26:21,778 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:26:26,778 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:26:26,778 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:26:29,960 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:26:29,960 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:26:31,780 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:26:31,780 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:26:36,780 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:26:36,780 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:26:39,964 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:26:39,964 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:26:41,781 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:26:41,781 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:26:46,782 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:26:46,782 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:26:49,973 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:26:49,973 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:26:51,783 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:26:51,783 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:26:56,784 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:26:56,784 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:26:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 20:26:59,983 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:26:59,983 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:27:01,785 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:27:01,785 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:27:06,786 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:27:06,786 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:27:09,993 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:27:09,994 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:27:11,786 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:27:11,786 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:27:16,787 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:27:16,787 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:27:20,003 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:27:20,003 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:27:21,787 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:27:21,787 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:27:26,788 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:27:26,788 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:27:30,013 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:27:30,014 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:27:31,788 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:27:31,788 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:27:36,788 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:27:36,788 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:27:40,021 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:27:40,021 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:27:41,789 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:27:41,789 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:27:46,789 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:27:46,789 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:27:50,030 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:27:50,030 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:27:51,790 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:27:51,790 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:27:56,790 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:27:56,790 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:27:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 20:28:00,040 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.4 ms, state=CONNECTED}]
2024-12-01 20:28:00,040 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:28:01,791 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:28:01,791 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:28:06,791 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:28:06,791 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:28:10,049 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.4 ms, state=CONNECTED}]
2024-12-01 20:28:10,049 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:28:11,791 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:28:11,791 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:28:16,791 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:28:16,791 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:28:20,059 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.4 ms, state=CONNECTED}]
2024-12-01 20:28:20,060 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:28:21,791 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:28:21,792 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:28:26,792 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:28:26,793 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:28:30,069 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:28:30,069 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:28:31,794 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:28:31,794 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:28:36,795 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:28:36,795 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:28:40,079 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.4 ms, state=CONNECTED}]
2024-12-01 20:28:40,079 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:28:41,795 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:28:41,796 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:28:46,796 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:28:46,796 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:28:50,089 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.4 ms, state=CONNECTED}]
2024-12-01 20:28:50,089 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:28:51,796 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:28:51,796 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:28:56,796 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:28:56,796 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:28:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 20:29:00,099 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.4 ms, state=CONNECTED}]
2024-12-01 20:29:00,099 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:29:01,796 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:29:01,796 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:29:06,797 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:29:06,797 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:29:10,108 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.4 ms, state=CONNECTED}]
2024-12-01 20:29:10,109 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:29:11,797 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:29:11,798 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:29:16,798 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:29:16,798 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:29:20,118 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.4 ms, state=CONNECTED}]
2024-12-01 20:29:20,118 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:29:21,798 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:29:21,799 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:29:26,799 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:29:26,800 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:29:30,128 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.4 ms, state=CONNECTED}]
2024-12-01 20:29:30,128 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:29:31,801 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:29:31,802 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:29:36,802 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:29:36,803 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:29:40,137 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.4 ms, state=CONNECTED}]
2024-12-01 20:29:40,138 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:29:41,803 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:29:41,804 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:29:46,804 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:29:46,806 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:29:50,147 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.4 ms, state=CONNECTED}]
2024-12-01 20:29:50,147 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:29:51,807 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:29:51,807 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:29:56,807 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:29:56,807 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:29:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 20:30:00,157 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.4 ms, state=CONNECTED}]
2024-12-01 20:30:00,157 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:30:01,807 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:30:01,808 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:30:06,808 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:30:06,809 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:30:10,166 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:30:10,166 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:30:11,809 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:30:11,809 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:30:16,809 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:30:16,809 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:30:20,175 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.4 ms, state=CONNECTED}]
2024-12-01 20:30:20,176 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:30:21,809 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:30:21,809 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:30:26,810 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:30:26,811 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:30:30,185 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.4 ms, state=CONNECTED}]
2024-12-01 20:30:30,185 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:30:31,811 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:30:31,812 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:30:36,812 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:30:36,813 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:30:40,194 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:30:40,194 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:30:41,813 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:30:41,814 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:30:46,814 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:30:46,814 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:30:50,204 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:30:50,204 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:30:51,816 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:30:51,816 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:30:56,817 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:30:56,817 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:30:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 20:31:00,213 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:31:00,213 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:31:01,818 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:31:01,818 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:31:06,818 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:31:06,818 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:31:10,222 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:31:10,222 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:31:11,818 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:31:11,819 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:31:16,820 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:31:16,820 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:31:20,231 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:31:20,231 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:31:21,820 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:31:21,820 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:31:26,821 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:31:26,821 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:31:30,241 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:31:30,241 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:31:31,822 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:31:31,822 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:31:36,822 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:31:36,823 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:31:40,250 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:31:40,250 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:31:41,823 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:31:41,823 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:31:46,823 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:31:46,824 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:31:50,261 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:31:50,261 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:31:51,824 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:31:51,825 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:31:56,825 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:31:56,826 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:31:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 20:32:00,269 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:32:00,269 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:32:01,826 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:32:01,826 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:32:06,826 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:32:06,827 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:32:10,278 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.4 ms, state=CONNECTED}]
2024-12-01 20:32:10,278 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:32:11,827 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:32:11,828 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:32:16,829 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:32:16,829 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:32:20,288 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:32:20,288 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:32:21,829 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:32:21,829 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:32:26,829 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:32:26,830 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:32:30,303 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:32:30,303 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:32:31,830 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:32:31,831 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:32:36,831 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:32:36,831 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:32:40,311 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:32:40,311 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:32:41,831 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:32:41,831 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:32:46,831 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:32:46,832 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:32:50,320 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:32:50,320 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:32:51,832 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:32:51,833 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:32:56,833 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:32:56,834 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:32:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 20:33:00,330 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:33:00,330 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:33:01,834 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:33:01,835 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:33:06,835 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:33:06,836 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:33:10,339 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:33:10,339 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:33:11,836 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:33:11,837 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:33:16,837 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:33:16,838 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:33:20,349 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:33:20,349 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:33:21,839 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:33:21,839 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:33:26,839 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:33:26,839 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:33:30,358 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:33:30,359 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:33:31,839 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:33:31,839 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:33:36,839 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:33:36,839 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:33:40,368 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.4 ms, state=CONNECTED}]
2024-12-01 20:33:40,369 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:33:41,839 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:33:41,840 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:33:46,840 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:33:46,840 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:33:50,378 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.4 ms, state=CONNECTED}]
2024-12-01 20:33:50,378 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:33:51,840 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:33:51,841 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:33:56,841 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:33:56,841 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:33:57,123 DEBUG [MaintenanceTimer-2-thread-1] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Pruning pooled connections to localhost:27017
2024-12-01 20:34:00,387 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.4 ms, state=CONNECTED}]
2024-12-01 20:34:00,387 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:34:01,841 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:34:01,841 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:34:06,842 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:34:06,843 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:34:10,397 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.5 ms, state=CONNECTED}]
2024-12-01 20:34:10,397 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:34:11,843 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:34:11,844 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:34:16,845 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:34:16,845 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:34:20,411 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=0.6 ms, state=CONNECTED}]
2024-12-01 20:34:20,411 DEBUG [cluster-ClusterId{value='674c6d8131ab277b698f63a4', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Checking status of localhost:27017
2024-12-01 20:34:21,845 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:34:21,846 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
2024-12-01 20:34:26,847 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Received: 0 records
2024-12-01 20:34:26,847 DEBUG [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: Commit list: {}
